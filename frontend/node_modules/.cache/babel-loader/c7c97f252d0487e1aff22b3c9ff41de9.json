{"ast":null,"code":"import _defineProperty from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/src/components/Schedule.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport { WorkWeek } from \"./CustomView\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nconst Schedule = props => {\n  const _useState = useState(eventsList),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const _useState3 = useState(teachersList),\n        _useState4 = _slicedToArray(_useState3, 2),\n        teacherData = _useState4[0],\n        setTeacherData = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        didChange = _useState6[0],\n        setDidChange = _useState6[1]; // Limit displayed hours of the day\n\n\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n\n  const addTeachingMins = () => {\n    for (let teacher in teacherData) {\n      teacherData[teacher].teachingMins = 0;\n    }\n\n    events.forEach(e => {\n      // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n      teacherData[e.resourceId].teachingMins += e.duration;\n      setTeacherData([...teacherData]);\n      teacherData[e.resourceId].resourceTitle = \"\".concat(teacherData[e.resourceId].name, \" \").concat(teacherData[e.resourceId].teachingMins);\n    });\n  };\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    const idx = events.indexOf(event);\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end,\n      allDay\n    });\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n    setEvents(nextEvents); // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const handleUpdate = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end,\n      isAllDay: droppedOnAllDaySlot\n    });\n  };\n\n  useEffect(() => {\n    addTeachingMins();\n  }, [Object.values(teacherData)]); // Style events based on event.type\n\n  const eventStyleGetter = event => {\n    let hexColor;\n\n    switch (event.type) {\n      case \"pl\":\n        hexColor = \"309632\";\n        break;\n\n      case \"kids\":\n        hexColor = \"c47900\";\n        break;\n\n      case \"gs\":\n        hexColor = \"52167d\";\n        break;\n\n      case \"prem\":\n        hexColor = \"781419\";\n        break;\n\n      default:\n        hexColor = \"3767a6\";\n        break;\n    }\n\n    let backgroundColor = \"#\" + hexColor;\n    let style = {\n      backgroundColor: backgroundColor,\n      color: \"white\",\n      border: 0,\n      display: \"block\"\n    };\n    return {\n      style: style\n    };\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(DragAndDropCalendar, {\n    style: {\n      width: \"95vw\",\n      maxHeight: \"100%\"\n    },\n    localizer: localizer,\n    views: {\n      week: WorkWeek,\n      day: true\n    },\n    defaultView: \"day\",\n    events: events,\n    onEventDrop: handleUpdate,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    resources: teacherData,\n    resourceIdAccessor: \"resourceId\",\n    resourceTitleAccessor: \"resourceTitle\",\n    selectable: true,\n    eventPropGetter: eventStyleGetter,\n    step: 30,\n    timeslots: 2,\n    min: minTime,\n    max: maxTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/src/components/Schedule.js"],"names":["React","useState","useEffect","Calendar","momentLocalizer","withDragAndDrop","moment","WorkWeek","eventsList","teachersList","localizer","DragAndDropCalendar","Schedule","props","events","setEvents","teacherData","setTeacherData","didChange","setDidChange","minTime","Date","setHours","maxTime","addTeachingMins","teacher","teachingMins","forEach","e","resourceId","duration","resourceTitle","name","moveEvent","event","start","end","isAllDay","droppedOnAllDaySlot","idx","indexOf","allDay","updatedEvent","nextEvents","splice","handleUpdate","Object","values","eventStyleGetter","hexColor","type","backgroundColor","style","color","border","display","width","maxHeight","week","day"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport { WorkWeek } from \"./CustomView\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nconst Schedule = props => {\n  const [events, setEvents] = useState(eventsList);\n  const [teacherData, setTeacherData] = useState(teachersList);\n  const [didChange, setDidChange] = useState(false);\n\n  // Limit displayed hours of the day\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n\n  const addTeachingMins = () => {\n    for (let teacher in teacherData) {\n      teacherData[teacher].teachingMins = 0;\n    }\n    events.forEach(e => {\n      // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n      teacherData[e.resourceId].teachingMins += e.duration;\n      setTeacherData([...teacherData]);\n      teacherData[e.resourceId].resourceTitle = `${\n        teacherData[e.resourceId].name\n      } ${teacherData[e.resourceId].teachingMins}`;\n    });\n  };\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    const idx = events.indexOf(event);\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const updatedEvent = { ...event, resourceId, start, end, allDay };\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n\n    setEvents(nextEvents);\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const handleUpdate = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end,\n      isAllDay: droppedOnAllDaySlot\n    });\n  };\n\n  useEffect(() => {\n    addTeachingMins();\n  }, [Object.values(teacherData)]);\n\n  // Style events based on event.type\n  const eventStyleGetter = event => {\n    let hexColor;\n    switch (event.type) {\n      case \"pl\":\n        hexColor = \"309632\";\n        break;\n      case \"kids\":\n        hexColor = \"c47900\";\n        break;\n      case \"gs\":\n        hexColor = \"52167d\";\n        break;\n      case \"prem\":\n        hexColor = \"781419\";\n        break;\n      default:\n        hexColor = \"3767a6\";\n        break;\n    }\n\n    let backgroundColor = \"#\" + hexColor;\n    let style = {\n      backgroundColor: backgroundColor,\n      color: \"white\",\n      border: 0,\n      display: \"block\"\n    };\n    return {\n      style: style\n    };\n  };\n\n  return (\n    <div>\n      <DragAndDropCalendar\n        style={{ width: \"95vw\", maxHeight: \"100%\" }}\n        localizer={localizer}\n        views={{ week: WorkWeek, day: true }}\n        defaultView=\"day\"\n        events={events}\n        onEventDrop={handleUpdate}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        resources={teacherData}\n        resourceIdAccessor=\"resourceId\"\n        resourceTitleAccessor=\"resourceTitle\"\n        selectable\n        eventPropGetter={eventStyleGetter}\n        step={30}\n        timeslots={2}\n        min={minTime}\n        max={maxTime}\n      />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}