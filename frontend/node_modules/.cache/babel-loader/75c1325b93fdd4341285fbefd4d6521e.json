{"ast":null,"code":"import axios from \"axios\";\nconst API_URI = \"http://localhost:5000\";\n\nconst getTeachers = async setTeachers => {\n  await axios.get(`${API_URI}/teachers/`).then(res => {\n    if (res.data.length > 0) {\n      console.log(res.data);\n      setTeachers(res.data);\n    }\n  }).catch(err => console.log(err));\n};\n\nconst getLessons = async setEvents => {\n  await axios.get(`${API_URI}/lessons/`).then(res => {\n    if (res.data.length > 0) {\n      res.data.map(event => {\n        event.start = new Date(event.start);\n        event.end = new Date(event.end);\n      });\n      setEvents(res.data);\n    }\n  }).catch(err => console.log(err));\n};\n\nconst addLesson = async (events, newEvent, setEvents) => {\n  await axios.post(`${API_URI}/lessons/add`, newEvent).then(res => console.log(res.data)).catch(err => console.log(err));\n  setEvents([...events, newEvent]);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios.post(`${API_URI}/teachers/add`, newTeacher).then(res => console.log(res.data)).catch(err => console.log(err));\n  setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async teacher => {\n  await axios.put(`${API_URI}/teachers/update/${teacher._id}`, {\n    name: teacher.name,\n    teachingMins: teacher.teachingMins\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nexport { getTeachers, getLessons, addLesson, addTeacher, updateTeacher };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/frontend/src/axiosCalls.js"],"names":["axios","API_URI","getTeachers","setTeachers","get","then","res","data","length","console","log","catch","err","getLessons","setEvents","map","event","start","Date","end","addLesson","events","newEvent","post","addTeacher","teachers","newTeacher","updateTeacher","teacher","put","_id","name","teachingMins","headers"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst API_URI = \"http://localhost:5000\";\n\nconst getTeachers = async setTeachers => {\n  await axios\n    .get(`${API_URI}/teachers/`)\n    .then(res => {\n      if (res.data.length > 0) {\n        console.log(res.data);\n        setTeachers(res.data);\n      }\n    })\n    .catch(err => console.log(err));\n};\n\nconst getLessons = async setEvents => {\n  await axios\n    .get(`${API_URI}/lessons/`)\n    .then(res => {\n      if (res.data.length > 0) {\n        res.data.map(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n        });\n        setEvents(res.data);\n      }\n    })\n    .catch(err => console.log(err));\n};\n\nconst addLesson = async (events, newEvent, setEvents) => {\n  await axios\n    .post(`${API_URI}/lessons/add`, newEvent)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  setEvents([...events, newEvent]);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios\n    .post(`${API_URI}/teachers/add`, newTeacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async teacher => {\n  await axios\n    .put(\n      `${API_URI}/teachers/update/${teacher._id}`,\n      {\n        name: teacher.name,\n        teachingMins: teacher.teachingMins\n      },\n      { headers: { \"Content-Type\": \"application/json\" } }\n    )\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nexport { getTeachers, getLessons, addLesson, addTeacher, updateTeacher };\n"]},"metadata":{},"sourceType":"module"}