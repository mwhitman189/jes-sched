{"ast":null,"code":"var _jsxFileName = \"/home/miles/webdev/jes-sched/frontend/src/components/CustomView.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-big-calendar\";\nimport TimeGrid from \"react-big-calendar/lib/TimeGrid\";\nimport * as dates from \"date-arithmetic\";\nimport { momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nmoment.locale(\"jp\", {\n  week: {\n    dow: 1\n  }\n});\nconst localizer = momentLocalizer(moment);\n\nconst WorkWeek = props => {\n  let date = props.date;\n  let range = WorkWeek.range(date);\n  return React.createElement(TimeGrid, Object.assign({}, props, {\n    range: range,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nWorkWeek.range = date => {\n  // Set start date to the current work week's Monday\n  let gotDate = date.getDate();\n  gotDate.setHours(0, 0, 0, 0); // Check the current date's day as integer from 0(Sun) to 6(Sat)\n\n  switch (date.getDay()) {\n    case 0:\n      date.setDate(gotDate + 1);\n      break;\n\n    case 1:\n      date.setDate(gotDate);\n      break;\n\n    case 2:\n      date.setDate(gotDate - 1);\n      break;\n\n    case 3:\n      date.setDate(gotDate - 2);\n      break;\n\n    case 4:\n      date.setDate(gotDate - 3);\n      break;\n\n    case 5:\n      date.setDate(gotDate - 4);\n      break;\n\n    case 6:\n      date.setDate(gotDate - 5);\n      break;\n\n    default:\n      break;\n  }\n\n  let start = date;\n  let end = dates.add(start, 5, \"day\");\n  let current = start;\n  let range = [];\n\n  while (dates.lte(current, end, \"day\")) {\n    range.push(current);\n    current = dates.add(current, 1, \"day\");\n  }\n\n  console.log(range);\n  return range;\n}; // Set navigation button behavior\n\n\nWorkWeek.navigate = (date, action) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      return dates.subtract(date, 7, \"day\");\n\n    case Navigate.NEXT:\n      return dates.add(date, 7, \"day\");\n\n    default:\n      return date;\n  }\n};\n\nWorkWeek.title = date => {\n  return `${date.toLocaleDateString()}`;\n};\n\nexport { WorkWeek };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/frontend/src/components/CustomView.js"],"names":["React","Navigate","TimeGrid","dates","momentLocalizer","moment","locale","week","dow","localizer","WorkWeek","props","date","range","gotDate","getDate","setHours","getDay","setDate","start","end","add","current","lte","push","console","log","navigate","action","PREVIOUS","subtract","NEXT","title","toLocaleDateString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Navigate } from \"react-big-calendar\";\nimport TimeGrid from \"react-big-calendar/lib/TimeGrid\";\nimport * as dates from \"date-arithmetic\";\nimport { momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\n\nmoment.locale(\"jp\", {\n  week: {\n    dow: 1\n  }\n});\nconst localizer = momentLocalizer(moment);\n\nconst WorkWeek = props => {\n  let { date } = props;\n  let range = WorkWeek.range(date);\n\n  return <TimeGrid {...props} range={range} />;\n};\n\nWorkWeek.range = date => {\n  // Set start date to the current work week's Monday\n  let gotDate = date.getDate();\n  gotDate.setHours(0, 0, 0, 0);\n  // Check the current date's day as integer from 0(Sun) to 6(Sat)\n  switch (date.getDay()) {\n    case 0:\n      date.setDate(gotDate + 1);\n      break;\n\n    case 1:\n      date.setDate(gotDate);\n      break;\n\n    case 2:\n      date.setDate(gotDate - 1);\n      break;\n\n    case 3:\n      date.setDate(gotDate - 2);\n      break;\n\n    case 4:\n      date.setDate(gotDate - 3);\n      break;\n\n    case 5:\n      date.setDate(gotDate - 4);\n      break;\n\n    case 6:\n      date.setDate(gotDate - 5);\n      break;\n\n    default:\n      break;\n  }\n\n  let start = date;\n  let end = dates.add(start, 5, \"day\");\n  let current = start;\n  let range = [];\n\n  while (dates.lte(current, end, \"day\")) {\n    range.push(current);\n    current = dates.add(current, 1, \"day\");\n  }\n  console.log(range);\n  return range;\n};\n\n// Set navigation button behavior\nWorkWeek.navigate = (date, action) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      return dates.subtract(date, 7, \"day\");\n\n    case Navigate.NEXT:\n      return dates.add(date, 7, \"day\");\n\n    default:\n      return date;\n  }\n};\n\nWorkWeek.title = date => {\n  return `${date.toLocaleDateString()}`;\n};\n\nexport { WorkWeek };\n"]},"metadata":{},"sourceType":"module"}