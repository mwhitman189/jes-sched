{"ast":null,"code":"var _jsxFileName = \"/home/miles/webdev/jes-sched/src/components/CustomViews.js\";\nimport React from \"react\";\nimport { Calendar, Views, Navigate } from \"react-big-calendar\";\nimport TimeGrid from \"react-big-calendar/lib/TimeGrid\";\nimport * as dates from \"date-arithmetic\";\n\nconst WorkWeek = () => {\n  const date = this.props.date;\n  const range = WorkWeek.range(date);\n  return React.createElement(TimeGrid, Object.assign({}, this.props, {\n    range: range,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nWorkWeek.range = date => {\n  // Set start date to the current work week's Monday\n  let start = date;\n  let gotDate = date.getDate(); // Check the current date's day as integer from 1(Mon) to 7(Sun)\n\n  switch (date.getDay()) {\n    case 2:\n      date.setDate(gotDate - 1);\n      break;\n\n    case 3:\n      date.setDate(gotDate - 2);\n      break;\n\n    case 4:\n      date.setDate(gotDate - 3);\n      break;\n\n    case 5:\n      date.setDate(gotDate - 4);\n      break;\n\n    case 6:\n      date.setDate(gotDate - 5);\n      break;\n\n    case 7:\n      date.setDate(gotDate - 6);\n      break;\n\n    default:\n      break;\n  }\n\n  let end = dates.add(start, 5, \"day\");\n  let current = start;\n  let range = [];\n\n  while (dates.lte(current, end, \"day\")) {\n    range.push(current);\n    current = dates.add(current, 1, \"day\");\n  }\n\n  return range;\n}; // Set navigation button behavior\n\n\nWorkWeek.navigate = (date, action) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      return dates.subtract(date, 7, \"day\");\n\n    case Navigate.NEXT:\n      return dates.add(date, 7, \"day\");\n\n    default:\n      return date;\n  }\n};\n\nWorkWeek.title = date => {\n  console.log(date);\n  return \"\".concat(date.toLocaleDateString());\n};\n\nexport { WorkWeek };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/src/components/CustomViews.js"],"names":["React","Calendar","Views","Navigate","TimeGrid","dates","WorkWeek","date","props","range","start","gotDate","getDate","getDay","setDate","end","add","current","lte","push","navigate","action","PREVIOUS","subtract","NEXT","title","console","log","toLocaleDateString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,QAA1B,QAA0C,oBAA1C;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,QACbC,IADa,GACJ,KAAKC,KADD,CACbD,IADa;AAErB,QAAME,KAAK,GAAGH,QAAQ,CAACG,KAAT,CAAeF,IAAf,CAAd;AAEA,SAAO,oBAAC,QAAD,oBAAc,KAAKC,KAAnB;AAA0B,IAAA,KAAK,EAAEC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CALD;;AAOAH,QAAQ,CAACG,KAAT,GAAiBF,IAAI,IAAI;AACvB;AACA,MAAIG,KAAK,GAAGH,IAAZ;AACA,MAAII,OAAO,GAAGJ,IAAI,CAACK,OAAL,EAAd,CAHuB,CAIvB;;AACA,UAAQL,IAAI,CAACM,MAAL,EAAR;AACE,SAAK,CAAL;AACEN,MAAAA,IAAI,CAACO,OAAL,CAAaH,OAAO,GAAG,CAAvB;AACA;;AAEF,SAAK,CAAL;AACEJ,MAAAA,IAAI,CAACO,OAAL,CAAaH,OAAO,GAAG,CAAvB;AACA;;AAEF,SAAK,CAAL;AACEJ,MAAAA,IAAI,CAACO,OAAL,CAAaH,OAAO,GAAG,CAAvB;AACA;;AAEF,SAAK,CAAL;AACEJ,MAAAA,IAAI,CAACO,OAAL,CAAaH,OAAO,GAAG,CAAvB;AACA;;AAEF,SAAK,CAAL;AACEJ,MAAAA,IAAI,CAACO,OAAL,CAAaH,OAAO,GAAG,CAAvB;AACA;;AAEF,SAAK,CAAL;AACEJ,MAAAA,IAAI,CAACO,OAAL,CAAaH,OAAO,GAAG,CAAvB;AACA;;AAEF;AACE;AA1BJ;;AA6BA,MAAII,GAAG,GAAGV,KAAK,CAACW,GAAN,CAAUN,KAAV,EAAiB,CAAjB,EAAoB,KAApB,CAAV;AACA,MAAIO,OAAO,GAAGP,KAAd;AACA,MAAID,KAAK,GAAG,EAAZ;;AAEA,SAAOJ,KAAK,CAACa,GAAN,CAAUD,OAAV,EAAmBF,GAAnB,EAAwB,KAAxB,CAAP,EAAuC;AACrCN,IAAAA,KAAK,CAACU,IAAN,CAAWF,OAAX;AACAA,IAAAA,OAAO,GAAGZ,KAAK,CAACW,GAAN,CAAUC,OAAV,EAAmB,CAAnB,EAAsB,KAAtB,CAAV;AACD;;AACD,SAAOR,KAAP;AACD,CA3CD,C,CA6CA;;;AACAH,QAAQ,CAACc,QAAT,GAAoB,CAACb,IAAD,EAAOc,MAAP,KAAkB;AACpC,UAAQA,MAAR;AACE,SAAKlB,QAAQ,CAACmB,QAAd;AACE,aAAOjB,KAAK,CAACkB,QAAN,CAAehB,IAAf,EAAqB,CAArB,EAAwB,KAAxB,CAAP;;AAEF,SAAKJ,QAAQ,CAACqB,IAAd;AACE,aAAOnB,KAAK,CAACW,GAAN,CAAUT,IAAV,EAAgB,CAAhB,EAAmB,KAAnB,CAAP;;AAEF;AACE,aAAOA,IAAP;AARJ;AAUD,CAXD;;AAaAD,QAAQ,CAACmB,KAAT,GAAiBlB,IAAI,IAAI;AACvBmB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACA,mBAAUA,IAAI,CAACqB,kBAAL,EAAV;AACD,CAHD;;AAKA,SAAStB,QAAT","sourcesContent":["import React from \"react\";\nimport { Calendar, Views, Navigate } from \"react-big-calendar\";\nimport TimeGrid from \"react-big-calendar/lib/TimeGrid\";\nimport * as dates from \"date-arithmetic\";\n\nconst WorkWeek = () => {\n  const { date } = this.props;\n  const range = WorkWeek.range(date);\n\n  return <TimeGrid {...this.props} range={range} />;\n};\n\nWorkWeek.range = date => {\n  // Set start date to the current work week's Monday\n  let start = date;\n  let gotDate = date.getDate();\n  // Check the current date's day as integer from 1(Mon) to 7(Sun)\n  switch (date.getDay()) {\n    case 2:\n      date.setDate(gotDate - 1);\n      break;\n\n    case 3:\n      date.setDate(gotDate - 2);\n      break;\n\n    case 4:\n      date.setDate(gotDate - 3);\n      break;\n\n    case 5:\n      date.setDate(gotDate - 4);\n      break;\n\n    case 6:\n      date.setDate(gotDate - 5);\n      break;\n\n    case 7:\n      date.setDate(gotDate - 6);\n      break;\n\n    default:\n      break;\n  }\n\n  let end = dates.add(start, 5, \"day\");\n  let current = start;\n  let range = [];\n\n  while (dates.lte(current, end, \"day\")) {\n    range.push(current);\n    current = dates.add(current, 1, \"day\");\n  }\n  return range;\n};\n\n// Set navigation button behavior\nWorkWeek.navigate = (date, action) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      return dates.subtract(date, 7, \"day\");\n\n    case Navigate.NEXT:\n      return dates.add(date, 7, \"day\");\n\n    default:\n      return date;\n  }\n};\n\nWorkWeek.title = date => {\n  console.log(date);\n  return `${date.toLocaleDateString()}`;\n};\n\nexport { WorkWeek };\n"]},"metadata":{},"sourceType":"module"}