{"ast":null,"code":"import _defineProperty from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/src/components/Schedule.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport { WorkWeek } from \"./CustomView\";\nimport EventForm from \"./EventForm\";\nimport useToggle from \"../hooks/useToggle\";\nimport useFormState from \"../hooks/useFormState\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport roomList from \"../rooms\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Schedule = props => {\n  const classes = useStyles();\n\n  const _useState = useState(eventsList),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const _useState3 = useState(teachersList),\n        _useState4 = _slicedToArray(_useState3, 2),\n        teacherList = _useState4[0],\n        setTeacherList = _useState4[1];\n\n  const _useToggle = useToggle(false),\n        _useToggle2 = _slicedToArray(_useToggle, 2),\n        isOpen = _useToggle2[0],\n        toggleIsOpen = _useToggle2[1];\n\n  const _useFormState = useFormState(\"\"),\n        _useFormState2 = _slicedToArray(_useFormState, 3),\n        title = _useFormState2[0],\n        handleTitleChange = _useFormState2[1],\n        titleReset = _useFormState2[2];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        startTime = _useState6[0],\n        setStartTime = _useState6[1];\n\n  const _useFormState3 = useFormState(\"\"),\n        _useFormState4 = _slicedToArray(_useFormState3, 3),\n        duration = _useFormState4[0],\n        handleDurationChange = _useFormState4[1],\n        durationReset = _useFormState4[2];\n\n  const _useFormState5 = useFormState(\"\"),\n        _useFormState6 = _slicedToArray(_useFormState5, 3),\n        resource = _useFormState6[0],\n        handleResourceChange = _useFormState6[1],\n        resourceReset = _useFormState6[2];\n\n  const _useFormState7 = useFormState(\"\"),\n        _useFormState8 = _slicedToArray(_useFormState7, 3),\n        room = _useFormState8[0],\n        handleRoomChange = _useFormState8[1],\n        roomReset = _useFormState8[2];\n\n  useEffect(() => {\n    durationReset();\n    titleReset();\n    resourceReset();\n    roomReset();\n    addTeachingMins();\n  }, [events]); // Limit displayed hours of the day\n\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n\n  const addTeachingMins = () => {\n    teacherList.forEach(teacher => {\n      return teacher.teachingMins = 0;\n    });\n    events.forEach(e => {\n      const index = teacherList.findIndex(teacher => teacher.resourceId === e.resourceId); // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n\n      teacherList[index].teachingMins += parseInt(e.duration);\n      setTeacherList([...teacherList]);\n      teacherList[index].resourceTitle = \"\".concat(teacherList[index].name, \" \").concat(teacherList[index].teachingMins);\n    });\n  };\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const idx = events.indexOf(event);\n\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end\n    });\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n    setEvents(nextEvents); // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const handleUpdate = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end\n    });\n  };\n\n  const handleSelect = ({\n    start\n  }) => {\n    toggleIsOpen();\n    setStartTime(start);\n  };\n\n  const addEvent = () => {\n    setEvents([...events, {\n      title: \"\".concat(title, \" -- \").concat(room),\n      start: startTime,\n      end: moment(startTime).add(duration, \"m\").toDate(),\n      duration: duration,\n      resourceId: parseInt(resource)\n    }]);\n  };\n\n  const handleAddEvent = () => {\n    addEvent();\n    toggleIsOpen();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, isOpen && EventForm, React.createElement(DragAndDropCalendar, {\n    style: {\n      width: \"95vw\",\n      maxHeight: \"100%\"\n    },\n    localizer: localizer,\n    views: {\n      week: WorkWeek,\n      day: true\n    },\n    defaultView: \"day\",\n    events: events,\n    onEventDrop: handleUpdate,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    resources: teacherList,\n    resourceIdAccessor: \"resourceId\",\n    resourceTitleAccessor: \"resourceTitle\",\n    selectable: true,\n    eventPropGetter: // Hide a dummy event that fixes drag and drop bug\n    event => {\n      if (event.hide) {\n        return {\n          style: {\n            display: \"none\"\n          }\n        };\n      }\n    },\n    step: 30,\n    timeslots: 2,\n    min: minTime,\n    max: maxTime,\n    onSelectSlot: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/src/components/Schedule.js"],"names":["React","useState","useEffect","Calendar","momentLocalizer","withDragAndDrop","moment","WorkWeek","EventForm","useToggle","useFormState","eventsList","teachersList","roomList","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","makeStyles","InputLabel","FormControl","Select","localizer","DragAndDropCalendar","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Schedule","props","classes","events","setEvents","teacherList","setTeacherList","isOpen","toggleIsOpen","title","handleTitleChange","titleReset","startTime","setStartTime","duration","handleDurationChange","durationReset","resource","handleResourceChange","resourceReset","room","handleRoomChange","roomReset","addTeachingMins","minTime","Date","setHours","maxTime","forEach","teacher","teachingMins","e","index","findIndex","resourceId","parseInt","resourceTitle","name","moveEvent","event","start","end","idx","indexOf","updatedEvent","nextEvents","splice","handleUpdate","handleSelect","addEvent","add","toDate","handleAddEvent","width","maxHeight","week","day","hide","style","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport { WorkWeek } from \"./CustomView\";\nimport EventForm from \"./EventForm\";\nimport useToggle from \"../hooks/useToggle\";\nimport useFormState from \"../hooks/useFormState\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport roomList from \"../rooms\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Schedule = props => {\n  const classes = useStyles();\n  const [events, setEvents] = useState(eventsList);\n  const [teacherList, setTeacherList] = useState(teachersList);\n  const [isOpen, toggleIsOpen] = useToggle(false);\n  const [title, handleTitleChange, titleReset] = useFormState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [duration, handleDurationChange, durationReset] = useFormState(\"\");\n  const [resource, handleResourceChange, resourceReset] = useFormState(\"\");\n  const [room, handleRoomChange, roomReset] = useFormState(\"\");\n\n  useEffect(() => {\n    durationReset();\n    titleReset();\n    resourceReset();\n    roomReset();\n    addTeachingMins();\n  }, [events]);\n\n  // Limit displayed hours of the day\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n\n  const addTeachingMins = () => {\n    teacherList.forEach(teacher => {\n      return (teacher.teachingMins = 0);\n    });\n    events.forEach(e => {\n      const index = teacherList.findIndex(\n        teacher => teacher.resourceId === e.resourceId\n      );\n      // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n      teacherList[index].teachingMins += parseInt(e.duration);\n      setTeacherList([...teacherList]);\n      teacherList[\n        index\n      ].resourceTitle = `${teacherList[index].name} ${teacherList[index].teachingMins}`;\n    });\n  };\n\n  const moveEvent = ({ event, resourceId, start, end }) => {\n    const idx = events.indexOf(event);\n\n    const updatedEvent = { ...event, resourceId, start, end };\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n\n    setEvents(nextEvents);\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const handleUpdate = ({ event, resourceId, start, end }) => {\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end\n    });\n  };\n\n  const handleSelect = ({ start }) => {\n    toggleIsOpen();\n    setStartTime(start);\n  };\n\n  const addEvent = () => {\n    setEvents([\n      ...events,\n      {\n        title: `${title} -- ${room}`,\n        start: startTime,\n        end: moment(startTime)\n          .add(duration, \"m\")\n          .toDate(),\n        duration: duration,\n        resourceId: parseInt(resource)\n      }\n    ]);\n  };\n\n  const handleAddEvent = () => {\n    addEvent();\n    toggleIsOpen();\n  };\n\n  return (\n    <div>\n      {isOpen && EventForm}\n      <DragAndDropCalendar\n        style={{ width: \"95vw\", maxHeight: \"100%\" }}\n        localizer={localizer}\n        views={{ week: WorkWeek, day: true }}\n        defaultView=\"day\"\n        events={events}\n        onEventDrop={handleUpdate}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        resources={teacherList}\n        resourceIdAccessor=\"resourceId\"\n        resourceTitleAccessor=\"resourceTitle\"\n        selectable\n        eventPropGetter={\n          // Hide a dummy event that fixes drag and drop bug\n          event => {\n            if (event.hide) {\n              return { style: { display: \"none\" } };\n            }\n          }\n        }\n        step={30}\n        timeslots={2}\n        min={minTime}\n        max={maxTime}\n        onSelectSlot={handleSelect}\n      />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}