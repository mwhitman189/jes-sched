{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/frontend/src/components/Payroll.js\";\nimport React, { useState, useContext, useRef } from \"react\";\nimport moment from \"moment\";\nimport ReactToPrint from \"react-to-print\";\nimport TeachersContext from \"../context/TeachersContext\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport PayrollSheet from \"./PayrollSheet\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { blue } from \"@material-ui/core/colors\";\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction createData(date, month, teachingHours, outsideDutyHours, holidayHours, travelAllowance, travelExpenses) {\n  return {\n    date,\n    month,\n    teachingHours,\n    outsideDutyHours,\n    holidayHours,\n    travelAllowance,\n    travelExpenses\n  };\n}\n\nconst Payroll = props => {\n  const componentRef = useRef();\n  const classes = useStyles();\n\n  const _useContext = useContext(TeachersContext),\n        teachers = _useContext.teachers;\n\n  const _useState = useState(\"teacherSelect\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        stage = _useState2[0],\n        setStage = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        rows = _useState4[0],\n        setRows = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentTeacher = _useState6[0],\n        setCurrentTeacher = _useState6[1];\n\n  const events = props.events;\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  const daysInMonth = moment(now).daysInMonth();\n\n  const showPayrollSheet = teacher => {\n    setCurrentTeacher(teacher.resourceId);\n    const teachingMinsByDate = createPayPeriodData(events, teacher, monthStart, monthEnd);\n    const rows = [];\n\n    for (let i = 1; i <= daysInMonth; i++) {\n      let newRow;\n\n      if (teachingMinsByDate[i]) {\n        newRow = createData(i, now.getMonth(\"MMM\"), teachingMinsByDate[i].teachingMins, teachingMinsByDate[i].outsideDutyMins, teachingMinsByDate[i].holidayMins, teachingMinsByDate[i].travelAllowance, teachingMinsByDate[i].travelExpenses);\n      } else {\n        newRow = createData(i, now.getMonth(\"MMM\"), 0, 0, 0, 0, 0);\n      }\n\n      rows.push(newRow);\n    }\n\n    setRows(rows);\n    setStage(\"payrollSheet\");\n  };\n\n  const hideForm = () => {\n    setStage(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    onClose: hideForm,\n    \"aria-labelledby\": \"teacher-select-title\",\n    open: stage === \"teacherSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"teacher-select-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Payroll: Select a teacher\"), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, teachers.map(t => React.createElement(ListItem, {\n    button: true,\n    onClick: () => showPayrollSheet(t),\n    key: t.resourceId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(PersonIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: t.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }))))), React.createElement(Dialog, {\n    onClose: hideForm,\n    \"aria-labelledby\": \"payroll-sheet-dialog\",\n    open: stage === \"payrollSheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(ReactToPrint, {\n    trigger: () => React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Print this out!\"),\n    content: () => componentRef.current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(PayrollSheet, {\n    classes: classes,\n    rows: rows,\n    currentTeacher: currentTeacher,\n    ref: componentRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })));\n};\n\nexport default Payroll;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/frontend/src/components/Payroll.js"],"names":["React","useState","useContext","useRef","moment","ReactToPrint","TeachersContext","createPayPeriodData","PayrollSheet","makeStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","Dialog","PersonIcon","DialogTitle","blue","useStyles","avatar","backgroundColor","color","createData","date","month","teachingHours","outsideDutyHours","holidayHours","travelAllowance","travelExpenses","Payroll","props","componentRef","classes","teachers","stage","setStage","rows","setRows","currentTeacher","setCurrentTeacher","events","now","Date","monthStart","getFullYear","getMonth","monthEnd","daysInMonth","showPayrollSheet","teacher","resourceId","teachingMinsByDate","i","newRow","teachingMins","outsideDutyMins","holidayMins","push","hideForm","map","t","name","current"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport moment from \"moment\";\nimport ReactToPrint from \"react-to-print\";\nimport TeachersContext from \"../context/TeachersContext\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport PayrollSheet from \"./PayrollSheet\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport { blue } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction createData(\n  date,\n  month,\n  teachingHours,\n  outsideDutyHours,\n  holidayHours,\n  travelAllowance,\n  travelExpenses\n) {\n  return {\n    date,\n    month,\n    teachingHours,\n    outsideDutyHours,\n    holidayHours,\n    travelAllowance,\n    travelExpenses\n  };\n}\n\nconst Payroll = props => {\n  const componentRef = useRef();\n  const classes = useStyles();\n\n  const { teachers } = useContext(TeachersContext);\n  const [stage, setStage] = useState(\"teacherSelect\");\n  const [rows, setRows] = useState([]);\n  const [currentTeacher, setCurrentTeacher] = useState(\"\");\n  const { events } = props;\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  const daysInMonth = moment(now).daysInMonth();\n\n  const showPayrollSheet = teacher => {\n    setCurrentTeacher(teacher.resourceId);\n    const teachingMinsByDate = createPayPeriodData(\n      events,\n      teacher,\n      monthStart,\n      monthEnd\n    );\n\n    const rows = [];\n    for (let i = 1; i <= daysInMonth; i++) {\n      let newRow;\n      if (teachingMinsByDate[i]) {\n        newRow = createData(\n          i,\n          now.getMonth(\"MMM\"),\n          teachingMinsByDate[i].teachingMins,\n          teachingMinsByDate[i].outsideDutyMins,\n          teachingMinsByDate[i].holidayMins,\n          teachingMinsByDate[i].travelAllowance,\n          teachingMinsByDate[i].travelExpenses\n        );\n      } else {\n        newRow = createData(i, now.getMonth(\"MMM\"), 0, 0, 0, 0, 0);\n      }\n      rows.push(newRow);\n    }\n    setRows(rows);\n    setStage(\"payrollSheet\");\n  };\n\n  const hideForm = () => {\n    setStage(\"\");\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={hideForm}\n        aria-labelledby=\"teacher-select-title\"\n        open={stage === \"teacherSelect\"}\n      >\n        <DialogTitle id=\"teacher-select-title\">\n          Payroll: Select a teacher\n        </DialogTitle>\n        <List>\n          {teachers.map(t => (\n            <ListItem\n              button\n              onClick={() => showPayrollSheet(t)}\n              key={t.resourceId}\n            >\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={t.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Dialog>\n      <Dialog\n        onClose={hideForm}\n        aria-labelledby=\"payroll-sheet-dialog\"\n        open={stage === \"payrollSheet\"}\n      >\n        <ReactToPrint\n          trigger={() => <button>Print this out!</button>}\n          content={() => componentRef.current}\n        />\n        <PayrollSheet\n          classes={classes}\n          rows={rows}\n          currentTeacher={currentTeacher}\n          ref={componentRef}\n        />\n      </Dialog>\n    </div>\n  );\n};\nexport default Payroll;\n"]},"metadata":{},"sourceType":"module"}