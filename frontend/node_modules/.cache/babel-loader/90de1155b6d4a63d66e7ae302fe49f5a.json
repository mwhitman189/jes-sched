{"ast":null,"code":"import _defineProperty from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/src/components/Schedule.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport { WorkWeek } from \"./CustomView\";\nimport useToggle from \"../hooks/useToggle\";\nimport useFormState from \"../hooks/useFormState\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Schedule = props => {\n  const _useState = useState(eventsList),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const _useState3 = useState(teachersList),\n        _useState4 = _slicedToArray(_useState3, 2),\n        teacherList = _useState4[0],\n        setTeacherList = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        didChange = _useState6[0],\n        setDidChange = _useState6[1];\n\n  const _useToggle = useToggle(true),\n        _useToggle2 = _slicedToArray(_useToggle, 2),\n        isOpen = _useToggle2[0],\n        toggleIsOpen = _useToggle2[1];\n\n  const _useFormState = useFormState(\"\"),\n        _useFormState2 = _slicedToArray(_useFormState, 3),\n        title = _useFormState2[0],\n        handleTitleChange = _useFormState2[1],\n        titleReset = _useFormState2[2];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        startTime = _useState8[0],\n        setStartTime = _useState8[1];\n\n  const _useFormState3 = useFormState(\"\"),\n        _useFormState4 = _slicedToArray(_useFormState3, 3),\n        duration = _useFormState4[0],\n        handleDurationChange = _useFormState4[1],\n        durationReset = _useFormState4[2];\n\n  const _useFormState5 = useFormState(\"\"),\n        _useFormState6 = _slicedToArray(_useFormState5, 3),\n        resource = _useFormState6[0],\n        handleResourceChange = _useFormState6[1],\n        resourceReset = _useFormState6[2];\n\n  const classes = props.classes;\n  useEffect(() => {\n    toggleIsOpen();\n    durationReset();\n    titleReset();\n    addTeachingMins();\n  }, [events]);\n  useEffect(() => {\n    addTeachingMins();\n    setDidChange(false);\n  }, [didChange]); // Limit displayed hours of the day\n\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n\n  const addTeachingMins = () => {\n    teacherList.forEach(teacher => {\n      return teacher.teachingMins = 0;\n    });\n    events.forEach(e => {\n      const index = teacherList.findIndex(teacher => teacher.resourceId === e.resourceId); // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n\n      teacherList[index].teachingMins += parseInt(e.duration);\n      setTeacherList([...teacherList]);\n      teacherList[index].resourceTitle = \"\".concat(teacherList[index].name, \" \").concat(teacherList[index].teachingMins);\n    });\n  };\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    const idx = events.indexOf(event);\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end,\n      allDay\n    });\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n    setEvents(nextEvents); // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const handleUpdate = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end,\n      isAllDay: droppedOnAllDaySlot\n    });\n    setDidChange(true);\n  };\n\n  const handleSelect = ({\n    start\n  }) => {\n    toggleIsOpen();\n    setStartTime(start);\n  };\n\n  const addEvent = () => {\n    setEvents([...events, {\n      title: title,\n      start: startTime,\n      end: moment(startTime).add(duration, \"m\").toDate(),\n      duration: duration,\n      resourceId: 1\n    }]);\n  };\n\n  const newEventForm = React.createElement(Dialog, {\n    open: isOpen,\n    onClose: toggleIsOpen,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Subscribe\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Please enter the start time and class duration\"), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"title\",\n    label: \"Class Name\",\n    type: \"text\",\n    value: title,\n    onChange: handleTitleChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"duration\",\n    label: \"Class Duration\",\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    value: duration,\n    onChange: handleDurationChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"resource\",\n    label: \"Class Duration\",\n    type: \"text\",\n    value: resource,\n    onChange: handleResourceChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    native: true,\n    value: state.age,\n    onChange: handleChange(\"age\"),\n    inputProps: {\n      name: \"age\",\n      id: \"age-native-simple\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Thirty\")))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggleIsOpen,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: addEvent,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Add Class\")));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, isOpen && newEventForm, React.createElement(DragAndDropCalendar, {\n    style: {\n      width: \"95vw\",\n      maxHeight: \"100%\"\n    },\n    localizer: localizer,\n    views: {\n      week: WorkWeek,\n      day: true\n    },\n    defaultView: \"day\",\n    events: events,\n    onEventDrop: handleUpdate,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    resources: teacherList,\n    resourceIdAccessor: \"resourceId\",\n    resourceTitleAccessor: \"resourceTitle\",\n    selectable: true // eventPropGetter={eventStyleGetter}\n    ,\n    step: 30,\n    timeslots: 2,\n    min: minTime,\n    max: maxTime,\n    onSelectSlot: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/src/components/Schedule.js"],"names":["React","useState","useEffect","Calendar","momentLocalizer","withDragAndDrop","moment","WorkWeek","useToggle","useFormState","eventsList","teachersList","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","makeStyles","InputLabel","FormHelperText","FormControl","Select","NativeSelect","localizer","DragAndDropCalendar","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Schedule","props","events","setEvents","teacherList","setTeacherList","didChange","setDidChange","isOpen","toggleIsOpen","title","handleTitleChange","titleReset","startTime","setStartTime","duration","handleDurationChange","durationReset","resource","handleResourceChange","resourceReset","classes","addTeachingMins","minTime","Date","setHours","maxTime","forEach","teacher","teachingMins","e","index","findIndex","resourceId","parseInt","resourceTitle","name","moveEvent","event","start","end","isAllDay","droppedOnAllDaySlot","idx","indexOf","allDay","updatedEvent","nextEvents","splice","handleUpdate","handleSelect","addEvent","add","toDate","newEventForm","state","age","handleChange","id","width","maxHeight","week","day"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport { WorkWeek } from \"./CustomView\";\nimport useToggle from \"../hooks/useToggle\";\nimport useFormState from \"../hooks/useFormState\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\n\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Schedule = props => {\n  const [events, setEvents] = useState(eventsList);\n  const [teacherList, setTeacherList] = useState(teachersList);\n  const [didChange, setDidChange] = useState(false);\n  const [isOpen, toggleIsOpen] = useToggle(true);\n  const [title, handleTitleChange, titleReset] = useFormState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [duration, handleDurationChange, durationReset] = useFormState(\"\");\n  const [resource, handleResourceChange, resourceReset] = useFormState(\"\");\n\n  const { classes } = props;\n\n  useEffect(() => {\n    toggleIsOpen();\n    durationReset();\n    titleReset();\n    addTeachingMins();\n  }, [events]);\n\n  useEffect(() => {\n    addTeachingMins();\n    setDidChange(false);\n  }, [didChange]);\n\n  // Limit displayed hours of the day\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n\n  const addTeachingMins = () => {\n    teacherList.forEach(teacher => {\n      return (teacher.teachingMins = 0);\n    });\n    events.forEach(e => {\n      const index = teacherList.findIndex(\n        teacher => teacher.resourceId === e.resourceId\n      );\n      // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n      teacherList[index].teachingMins += parseInt(e.duration);\n      setTeacherList([...teacherList]);\n      teacherList[\n        index\n      ].resourceTitle = `${teacherList[index].name} ${teacherList[index].teachingMins}`;\n    });\n  };\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    const idx = events.indexOf(event);\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const updatedEvent = { ...event, resourceId, start, end, allDay };\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n\n    setEvents(nextEvents);\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const handleUpdate = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end,\n      isAllDay: droppedOnAllDaySlot\n    });\n    setDidChange(true);\n  };\n\n  const handleSelect = ({ start }) => {\n    toggleIsOpen();\n    setStartTime(start);\n  };\n\n  const addEvent = () => {\n    setEvents([\n      ...events,\n      {\n        title: title,\n        start: startTime,\n        end: moment(startTime)\n          .add(duration, \"m\")\n          .toDate(),\n        duration: duration,\n        resourceId: 1\n      }\n    ]);\n  };\n\n  const newEventForm = (\n    <Dialog\n      open={isOpen}\n      onClose={toggleIsOpen}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please enter the start time and class duration\n        </DialogContentText>\n        <FormControl className={classes.formControl}>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Class Name\"\n            type=\"text\"\n            value={title}\n            onChange={handleTitleChange}\n            fullWidth\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            margin=\"dense\"\n            id=\"duration\"\n            label=\"Class Duration\"\n            type=\"text\"\n            pattern=\"[0-9]*\"\n            value={duration}\n            onChange={handleDurationChange}\n            fullWidth\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            margin=\"dense\"\n            id=\"resource\"\n            label=\"Class Duration\"\n            type=\"text\"\n            value={resource}\n            onChange={handleResourceChange}\n            fullWidth\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n          <Select\n            native\n            value={state.age}\n            onChange={handleChange(\"age\")}\n            inputProps={{\n              name: \"age\",\n              id: \"age-native-simple\"\n            }}\n          >\n            <option value=\"\" />\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={toggleIsOpen} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={addEvent} color=\"primary\">\n          Add Class\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return (\n    <div>\n      {isOpen && newEventForm}\n      <DragAndDropCalendar\n        style={{ width: \"95vw\", maxHeight: \"100%\" }}\n        localizer={localizer}\n        views={{ week: WorkWeek, day: true }}\n        defaultView=\"day\"\n        events={events}\n        onEventDrop={handleUpdate}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        resources={teacherList}\n        resourceIdAccessor=\"resourceId\"\n        resourceTitleAccessor=\"resourceTitle\"\n        selectable\n        // eventPropGetter={eventStyleGetter}\n        step={30}\n        timeslots={2}\n        min={minTime}\n        max={maxTime}\n        onSelectSlot={handleSelect}\n      />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}