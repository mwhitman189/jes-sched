{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/frontend/src/components/Schedule.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { WorkWeek } from \"./CustomView\";\nimport EventForm from \"./EventForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport LessonEvent from \"./LessonEvent\";\nimport useFormState from \"../hooks/useInputState\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\nconst API_URI = \"http://localhost:5000\";\n\nconst Schedule = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        formType = _useState2[0],\n        setFormType = _useState2[1];\n\n  const _useState3 = useState([{\n    id: 1,\n    title: \"Dummy Event to fix drag and drop bug\",\n    start: new Date(),\n    end: new Date(),\n    room: 2,\n    duration: 0,\n    resourceId: 1,\n    hide: true\n  }]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        events = _useState4[0],\n        setEvents = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        teachers = _useState6[0],\n        setTeachers = _useState6[1];\n\n  const _useFormState = useFormState(new Date()),\n        _useFormState2 = _slicedToArray(_useFormState, 3),\n        startTime = _useFormState2[0],\n        updateStartTime = _useFormState2[1],\n        startTimeReset = _useFormState2[2];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        selectedEvent = _useState8[0],\n        setSelectedEvent = _useState8[1]; // Limit displayed hours of the day\n\n\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n  useEffect(() => {\n    axios.get(`${API_URI}/lessons/`).then(response => {\n      if (response.data.length > 0) {\n        response.data.map(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n        });\n        setEvents(response.data);\n      }\n    });\n    axios.get(`${API_URI}/teachers/`).then(response => {\n      if (response.data.length > 0) {\n        console.log(response.data);\n        setTeachers(response.data);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    addTeachingMins();\n  }, [events]);\n\n  const addTeachingMins = () => {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      return teacher.teachingMins = 0;\n    });\n    events.forEach(e => {\n      const idx = teachers.findIndex(teacher => teacher.resourceId === e.resourceId);\n      teachers[idx].teachingMins += parseInt(e.duration);\n      setTeachers([...teachers]);\n      teachers[idx].resourceTitle = `${teachers[idx].name} ${teachers[idx].teachingMins}`;\n    });\n    console.log(teachers);\n    teachers.forEach(teacher => {\n      console.log(teacher.resourceId);\n      axios.put(`${API_URI}/teachers/update/${teacher.resourceId}`, {\n        teachingMins: teacher.teachingMins\n      }).then(res => console.log(res)).catch(err => console.log(err));\n    });\n  }; // TODO: Add a function to open the new class form with the current data populated, for validation\n\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const idx = events.indexOf(event);\n\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end\n    });\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n    setEvents(nextEvents); // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const addEvent = newEvent => {\n    axios.post(`${API_URI}/lessons/add`, newEvent).then(res => console.log(res.data));\n    setEvents([...events, newEvent]);\n  };\n\n  const editEvent = updatedEvent => {\n    const idx = events.indexOf(updatedEvent);\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n    setEvents(nextEvents);\n  };\n\n  const handleMove = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (!validateRoom(otherEvents, event.room, start, parseInt(event.duration))) {\n      alert(\"That room is unavailable\");\n    } else if (!validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))) {\n      alert(\"That teacher is unavailable\");\n    } else {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end\n      });\n    }\n  };\n\n  const handleAddEvent = newEvent => {\n    addEvent(newEvent);\n    setFormType(\"event\");\n  };\n\n  const handleEditEvent = updatedEvent => {\n    editEvent(updatedEvent);\n    setFormType(\"event\");\n    setSelectedEvent();\n  };\n\n  const handleSelect = ({\n    start\n  }) => {\n    setFormType(\"event\");\n    updateStartTime(start);\n  };\n\n  const handleDoubleClick = event => {\n    setSelectedEvent(event);\n    setFormType(\"event\");\n  };\n\n  const addTeacher = newTeacher => {\n    axios.post(`${API_URI}/teachers/add`, newTeacher).then(res => console.log(res.data));\n    setTeachers([...teachers, newTeacher]);\n  };\n\n  const handleAddTeacher = newTeacher => {\n    addTeacher(newTeacher);\n    setFormType(\"\");\n  };\n\n  const handleBtnClick = () => {\n    setFormType(\"teacher\");\n  }; // Style events based on event.type\n\n\n  const eventStyleGetter = event => {\n    // Hide a dummy event that fixes drag and drop bug\n    if (event.hide) {\n      return {\n        style: {\n          display: \"none\"\n        }\n      };\n    }\n\n    let hexColor;\n\n    switch (event.type) {\n      case \"pl\":\n        hexColor = \"#e6ba1f\";\n        break;\n\n      case \"beg\":\n        hexColor = \"#8adec1\";\n        break;\n\n      case \"el\":\n        hexColor = \"#33dea2\";\n        break;\n\n      case \"lint\":\n        hexColor = \"#1cbd85\";\n        break;\n\n      case \"hint\":\n        hexColor = \"#0b8a5e\";\n        break;\n\n      case \"adv\":\n        hexColor = \"#04593c\";\n        break;\n\n      case \"lb\":\n        hexColor = \"#97dd1a\";\n        break;\n\n      case \"lg1\":\n        hexColor = \"#ca161e\";\n        break;\n\n      case \"lg2\":\n        hexColor = \"#fdc100\";\n        break;\n\n      case \"lg3\":\n        hexColor = \"#0065bd\";\n        break;\n\n      case \"lg4\":\n        hexColor = \"#00ae3e\";\n        break;\n\n      case \"lg5\":\n        hexColor = \"#ff8d2a\";\n        break;\n\n      case \"lg6\":\n        hexColor = \"#8f178e\";\n        break;\n\n      case \"gs\":\n        hexColor = \"#670084\";\n        break;\n\n      case \"ct1\":\n        hexColor = \"#d90000\";\n        break;\n\n      case \"ct2\":\n        hexColor = \"#0076d0\";\n        break;\n\n      case \"ct3\":\n        hexColor = \"#008935\";\n        break;\n\n      case \"prm\":\n        hexColor = \"#7d190b\";\n        break;\n\n      default:\n        hexColor = \"#7c9ae6\";\n        break;\n    }\n\n    let backgroundColor = hexColor;\n    let style = {\n      backgroundColor: backgroundColor,\n      color: \"white\",\n      border: 0,\n      display: \"block\"\n    };\n    return {\n      style: style\n    };\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, formType === \"event\" && React.createElement(EventForm, {\n    formType: formType,\n    setFormType: setFormType,\n    addEvent: handleAddEvent,\n    addTeachingMins: addTeachingMins,\n    events: events,\n    teachers: teachers,\n    startTime: startTime,\n    updateStartTime: updateStartTime,\n    startTimeReset: startTimeReset,\n    editEvent: handleEditEvent,\n    event: selectedEvent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }), formType === \"teacher\" && React.createElement(TeacherForm, {\n    formType: formType,\n    setFormType: setFormType,\n    addTeacher: handleAddTeacher,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleBtnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \"New Teacher\"), React.createElement(DragAndDropCalendar, {\n    style: {\n      width: \"100vw\",\n      maxHeight: \"100vh\"\n    },\n    localizer: localizer,\n    views: {\n      week: WorkWeek,\n      day: true\n    },\n    defaultView: \"day\",\n    events: events,\n    onEventDrop: handleMove,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    resources: teachers,\n    resourceIdAccessor: \"resourceId\",\n    resourceTitleAccessor: \"resourceTitle\",\n    selectable: true,\n    onDoubleClickEvent: handleDoubleClick,\n    eventPropGetter: eventStyleGetter,\n    step: 30,\n    timeslots: 2,\n    min: minTime,\n    max: maxTime,\n    onSelectSlot: handleSelect,\n    components: {\n      day: {\n        event: LessonEvent\n      }\n    },\n    resizableAccessor: () => false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/frontend/src/components/Schedule.js"],"names":["React","useState","useEffect","Calendar","momentLocalizer","withDragAndDrop","moment","axios","WorkWeek","EventForm","TeacherForm","LessonEvent","useFormState","validateRoom","validateTeacher","eventsList","teachersList","localizer","DragAndDropCalendar","API_URI","Schedule","formType","setFormType","id","title","start","Date","end","room","duration","resourceId","hide","events","setEvents","teachers","setTeachers","startTime","updateStartTime","startTimeReset","selectedEvent","setSelectedEvent","minTime","setHours","maxTime","get","then","response","data","length","map","event","console","log","addTeachingMins","forEach","teacher","teachingMins","e","idx","findIndex","parseInt","resourceTitle","name","put","res","catch","err","moveEvent","indexOf","updatedEvent","nextEvents","splice","addEvent","newEvent","post","editEvent","handleMove","otherEvents","slice","alert","handleAddEvent","handleEditEvent","handleSelect","handleDoubleClick","addTeacher","newTeacher","handleAddTeacher","handleBtnClick","eventStyleGetter","style","display","hexColor","type","backgroundColor","color","border","width","maxHeight","week","day"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport { WorkWeek } from \"./CustomView\";\nimport EventForm from \"./EventForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport LessonEvent from \"./LessonEvent\";\nimport useFormState from \"../hooks/useInputState\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\n\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\nconst API_URI = \"http://localhost:5000\";\n\nconst Schedule = () => {\n  const [formType, setFormType] = useState(\"\");\n  const [events, setEvents] = useState([\n    {\n      id: 1,\n      title: \"Dummy Event to fix drag and drop bug\",\n      start: new Date(),\n      end: new Date(),\n      room: 2,\n      duration: 0,\n      resourceId: 1,\n      hide: true\n    }\n  ]);\n  const [teachers, setTeachers] = useState(\"\");\n  const [startTime, updateStartTime, startTimeReset] = useFormState(new Date());\n  const [selectedEvent, setSelectedEvent] = useState(\"\");\n\n  // Limit displayed hours of the day\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n\n  useEffect(() => {\n    axios.get(`${API_URI}/lessons/`).then(response => {\n      if (response.data.length > 0) {\n        response.data.map(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n        });\n        setEvents(response.data);\n      }\n    });\n\n    axios.get(`${API_URI}/teachers/`).then(response => {\n      if (response.data.length > 0) {\n        console.log(response.data);\n        setTeachers(response.data);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    addTeachingMins();\n  }, [events]);\n\n  const addTeachingMins = () => {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      return (teacher.teachingMins = 0);\n    });\n    events.forEach(e => {\n      const idx = teachers.findIndex(\n        teacher => teacher.resourceId === e.resourceId\n      );\n      teachers[idx].teachingMins += parseInt(e.duration);\n      setTeachers([...teachers]);\n      teachers[\n        idx\n      ].resourceTitle = `${teachers[idx].name} ${teachers[idx].teachingMins}`;\n    });\n    console.log(teachers);\n    teachers.forEach(teacher => {\n      console.log(teacher.resourceId);\n      axios\n        .put(`${API_URI}/teachers/update/${teacher.resourceId}`, {\n          teachingMins: teacher.teachingMins\n        })\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n    });\n  };\n\n  // TODO: Add a function to open the new class form with the current data populated, for validation\n  const moveEvent = ({ event, resourceId, start, end }) => {\n    const idx = events.indexOf(event);\n\n    const updatedEvent = { ...event, resourceId, start, end };\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n\n    setEvents(nextEvents);\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const addEvent = newEvent => {\n    axios\n      .post(`${API_URI}/lessons/add`, newEvent)\n      .then(res => console.log(res.data));\n    setEvents([...events, newEvent]);\n  };\n\n  const editEvent = updatedEvent => {\n    const idx = events.indexOf(updatedEvent);\n    const nextEvents = [...events];\n\n    nextEvents.splice(idx, 1, updatedEvent);\n    setEvents(nextEvents);\n  };\n\n  const handleMove = ({ event, resourceId, start, end }) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n    if (\n      !validateRoom(otherEvents, event.room, start, parseInt(event.duration))\n    ) {\n      alert(\"That room is unavailable\");\n    } else if (\n      !validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))\n    ) {\n      alert(\"That teacher is unavailable\");\n    } else {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end\n      });\n    }\n  };\n\n  const handleAddEvent = newEvent => {\n    addEvent(newEvent);\n    setFormType(\"event\");\n  };\n\n  const handleEditEvent = updatedEvent => {\n    editEvent(updatedEvent);\n    setFormType(\"event\");\n    setSelectedEvent();\n  };\n\n  const handleSelect = ({ start }) => {\n    setFormType(\"event\");\n    updateStartTime(start);\n  };\n\n  const handleDoubleClick = event => {\n    setSelectedEvent(event);\n    setFormType(\"event\");\n  };\n\n  const addTeacher = newTeacher => {\n    axios\n      .post(`${API_URI}/teachers/add`, newTeacher)\n      .then(res => console.log(res.data));\n    setTeachers([...teachers, newTeacher]);\n  };\n\n  const handleAddTeacher = newTeacher => {\n    addTeacher(newTeacher);\n    setFormType(\"\");\n  };\n\n  const handleBtnClick = () => {\n    setFormType(\"teacher\");\n  };\n\n  // Style events based on event.type\n  const eventStyleGetter = event => {\n    // Hide a dummy event that fixes drag and drop bug\n    if (event.hide) {\n      return { style: { display: \"none\" } };\n    }\n    let hexColor;\n    switch (event.type) {\n      case \"pl\":\n        hexColor = \"#e6ba1f\";\n        break;\n      case \"beg\":\n        hexColor = \"#8adec1\";\n        break;\n      case \"el\":\n        hexColor = \"#33dea2\";\n        break;\n      case \"lint\":\n        hexColor = \"#1cbd85\";\n        break;\n      case \"hint\":\n        hexColor = \"#0b8a5e\";\n        break;\n      case \"adv\":\n        hexColor = \"#04593c\";\n        break;\n      case \"lb\":\n        hexColor = \"#97dd1a\";\n        break;\n      case \"lg1\":\n        hexColor = \"#ca161e\";\n        break;\n      case \"lg2\":\n        hexColor = \"#fdc100\";\n        break;\n      case \"lg3\":\n        hexColor = \"#0065bd\";\n        break;\n      case \"lg4\":\n        hexColor = \"#00ae3e\";\n        break;\n      case \"lg5\":\n        hexColor = \"#ff8d2a\";\n        break;\n      case \"lg6\":\n        hexColor = \"#8f178e\";\n        break;\n      case \"gs\":\n        hexColor = \"#670084\";\n        break;\n      case \"ct1\":\n        hexColor = \"#d90000\";\n        break;\n      case \"ct2\":\n        hexColor = \"#0076d0\";\n        break;\n      case \"ct3\":\n        hexColor = \"#008935\";\n        break;\n      case \"prm\":\n        hexColor = \"#7d190b\";\n        break;\n      default:\n        hexColor = \"#7c9ae6\";\n        break;\n    }\n\n    let backgroundColor = hexColor;\n    let style = {\n      backgroundColor: backgroundColor,\n      color: \"white\",\n      border: 0,\n      display: \"block\"\n    };\n    return {\n      style: style\n    };\n  };\n\n  return (\n    <div>\n      {formType === \"event\" && (\n        <EventForm\n          formType={formType}\n          setFormType={setFormType}\n          addEvent={handleAddEvent}\n          addTeachingMins={addTeachingMins}\n          events={events}\n          teachers={teachers}\n          startTime={startTime}\n          updateStartTime={updateStartTime}\n          startTimeReset={startTimeReset}\n          editEvent={handleEditEvent}\n          event={selectedEvent}\n        />\n      )}\n      {formType === \"teacher\" && (\n        <TeacherForm\n          formType={formType}\n          setFormType={setFormType}\n          addTeacher={handleAddTeacher}\n        />\n      )}\n      <button onClick={handleBtnClick}>New Teacher</button>\n      <DragAndDropCalendar\n        style={{ width: \"100vw\", maxHeight: \"100vh\" }}\n        localizer={localizer}\n        views={{ week: WorkWeek, day: true }}\n        defaultView=\"day\"\n        events={events}\n        onEventDrop={handleMove}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        resources={teachers}\n        resourceIdAccessor=\"resourceId\"\n        resourceTitleAccessor=\"resourceTitle\"\n        selectable\n        onDoubleClickEvent={handleDoubleClick}\n        eventPropGetter={eventStyleGetter}\n        step={30}\n        timeslots={2}\n        min={minTime}\n        max={maxTime}\n        onSelectSlot={handleSelect}\n        components={{\n          day: { event: LessonEvent }\n        }}\n        resizableAccessor={() => false}\n      />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}