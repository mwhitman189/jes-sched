{"ast":null,"code":"var _jsxFileName = \"/home/miles/webdev/jes-sched/frontend/src/components/CustomView.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-big-calendar\";\nimport TimeGrid from \"react-big-calendar/lib/TimeGrid\";\nimport * as dates from \"date-arithmetic\";\n\nconst WorkWeek = (props, {\n  teachers\n}) => {\n  let date = props.date;\n  let range = WorkWeek.range(date);\n  console.log(teachers);\n  WorkWeek({\n    teachers\n  });\n  return React.createElement(TimeGrid, Object.assign({}, props, {\n    range: range,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nWorkWeek.range = date => {\n  // Set start date to the current work week's Monday\n  let start = date;\n  let gotDate = date.getDate(); // Check the current date's day as integer from 1(Mon) to 7(Sun)\n\n  switch (date.getDay()) {\n    case 2:\n      date.setDate(gotDate - 1);\n      break;\n\n    case 3:\n      date.setDate(gotDate - 2);\n      break;\n\n    case 4:\n      date.setDate(gotDate - 3);\n      break;\n\n    case 5:\n      date.setDate(gotDate - 4);\n      break;\n\n    case 6:\n      date.setDate(gotDate - 5);\n      break;\n\n    case 7:\n      date.setDate(gotDate - 6);\n      break;\n\n    default:\n      break;\n  }\n\n  let end = dates.add(start, 5, \"day\");\n  let current = start;\n  let range = [];\n\n  while (dates.lte(current, end, \"day\")) {\n    range.push(current);\n    current = dates.add(current, 1, \"day\");\n  }\n\n  return range;\n}; // Set navigation button behavior\n\n\nWorkWeek.navigate = (date, action) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      return dates.subtract(date, 7, \"day\");\n\n    case Navigate.NEXT:\n      return dates.add(date, 7, \"day\");\n\n    default:\n      return date;\n  }\n};\n\nWorkWeek.title = (date, teachers) => {\n  console.log(teachers);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, `${date.toLocaleDateString()}`), teachers.map(t => {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, `${t.name}: ${t.teachingMins}`);\n  }));\n};\n\nexport { WorkWeek };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/frontend/src/components/CustomView.js"],"names":["React","Navigate","TimeGrid","dates","WorkWeek","props","teachers","date","range","console","log","start","gotDate","getDate","getDay","setDate","end","add","current","lte","push","navigate","action","PREVIOUS","subtract","NEXT","title","toLocaleDateString","map","t","name","teachingMins"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Navigate } from \"react-big-calendar\";\nimport TimeGrid from \"react-big-calendar/lib/TimeGrid\";\nimport * as dates from \"date-arithmetic\";\n\nconst WorkWeek = (props, { teachers }) => {\n  let { date } = props;\n  let range = WorkWeek.range(date);\n  console.log(teachers);\n  WorkWeek({ teachers });\n\n  return <TimeGrid {...props} range={range} />;\n};\n\nWorkWeek.range = date => {\n  // Set start date to the current work week's Monday\n  let start = date;\n  let gotDate = date.getDate();\n  // Check the current date's day as integer from 1(Mon) to 7(Sun)\n  switch (date.getDay()) {\n    case 2:\n      date.setDate(gotDate - 1);\n      break;\n\n    case 3:\n      date.setDate(gotDate - 2);\n      break;\n\n    case 4:\n      date.setDate(gotDate - 3);\n      break;\n\n    case 5:\n      date.setDate(gotDate - 4);\n      break;\n\n    case 6:\n      date.setDate(gotDate - 5);\n      break;\n\n    case 7:\n      date.setDate(gotDate - 6);\n      break;\n\n    default:\n      break;\n  }\n\n  let end = dates.add(start, 5, \"day\");\n  let current = start;\n  let range = [];\n\n  while (dates.lte(current, end, \"day\")) {\n    range.push(current);\n    current = dates.add(current, 1, \"day\");\n  }\n  return range;\n};\n\n// Set navigation button behavior\nWorkWeek.navigate = (date, action) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      return dates.subtract(date, 7, \"day\");\n\n    case Navigate.NEXT:\n      return dates.add(date, 7, \"day\");\n\n    default:\n      return date;\n  }\n};\n\nWorkWeek.title = (date, teachers) => {\n  console.log(teachers);\n  return (\n    <div>\n      <div>{`${date.toLocaleDateString()}`}</div>\n      {teachers.map(t => {\n        return <span>{`${t.name}: ${t.teachingMins}`}</span>;\n      })}\n    </div>\n  );\n};\n\nexport { WorkWeek };\n"]},"metadata":{},"sourceType":"module"}