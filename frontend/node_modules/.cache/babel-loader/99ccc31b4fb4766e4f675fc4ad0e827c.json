{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/src/components/EventForm.js\";\nimport React, { useEffect } from \"react\";\nimport moment from \"moment\";\nimport useFormState from \"../hooks/useFormState\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport roomList from \"../rooms\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function EventForm(props) {\n  const classes = useStyles();\n\n  const _useFormState = useFormState(\"\"),\n        _useFormState2 = _slicedToArray(_useFormState, 3),\n        title = _useFormState2[0],\n        handleTitleChange = _useFormState2[1],\n        titleReset = _useFormState2[2];\n\n  const _useFormState3 = useFormState(\"\"),\n        _useFormState4 = _slicedToArray(_useFormState3, 3),\n        duration = _useFormState4[0],\n        handleDurationChange = _useFormState4[1],\n        durationReset = _useFormState4[2];\n\n  const _useFormState5 = useFormState(\"\"),\n        _useFormState6 = _slicedToArray(_useFormState5, 3),\n        resource = _useFormState6[0],\n        handleResourceChange = _useFormState6[1],\n        resourceReset = _useFormState6[2];\n\n  const _useFormState7 = useFormState(\"\"),\n        _useFormState8 = _slicedToArray(_useFormState7, 3),\n        room = _useFormState8[0],\n        handleRoomChange = _useFormState8[1],\n        roomReset = _useFormState8[2];\n\n  const addEvent = props.addEvent,\n        isOpen = props.isOpen,\n        toggleIsOpen = props.toggleIsOpen,\n        addTeachingMins = props.addTeachingMins,\n        events = props.events,\n        teacherList = props.teacherList,\n        startTime = props.startTime,\n        setStartTime = props.setStartTime;\n  useEffect(() => {\n    durationReset();\n    titleReset();\n    resourceReset();\n    roomReset();\n    addTeachingMins();\n  }, [events]);\n\n  const handleAddEvent = () => {\n    addEvent({\n      title: \"\".concat(title, \" -- \").concat(room),\n      start: startTime,\n      end: moment(startTime).add(duration, \"m\").toDate(),\n      duration: duration,\n      resourceId: parseInt(resource)\n    });\n  };\n\n  return React.createElement(Dialog, {\n    open: isOpen,\n    onClose: toggleIsOpen,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"New Lesson\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Enter Lesson Info\"), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"title\",\n    label: \"Class Name\",\n    type: \"text\",\n    value: title,\n    onChange: handleTitleChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"startTime\",\n    label: \"Start Time\",\n    type: \"text\",\n    value: startTime,\n    onChange: setStartTime,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"duration\",\n    label: \"Class Duration\",\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    value: duration,\n    onChange: handleDurationChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"resource\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Teacher\"), React.createElement(Select, {\n    native: true,\n    id: \"resource\",\n    value: resource,\n    onChange: handleResourceChange,\n    name: \"resource\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), teacherList.map(t => React.createElement(\"option\", {\n    key: \"teacher-\".concat(t.resourceId),\n    value: t.resourceId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, t.name)))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"room\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Room #\"), React.createElement(Select, {\n    native: true,\n    id: \"room\",\n    value: room,\n    onChange: handleRoomChange,\n    name: \"room\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), roomList.map(r => React.createElement(\"option\", {\n    key: \"room-\".concat(r),\n    value: r,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, r))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggleIsOpen,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleAddEvent,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Add Class\")));\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/src/components/EventForm.js"],"names":["React","useEffect","moment","useFormState","makeStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","InputLabel","FormControl","Select","roomList","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","EventForm","props","classes","title","handleTitleChange","titleReset","duration","handleDurationChange","durationReset","resource","handleResourceChange","resourceReset","room","handleRoomChange","roomReset","addEvent","isOpen","toggleIsOpen","addTeachingMins","events","teacherList","startTime","setStartTime","handleAddEvent","start","end","add","toDate","resourceId","parseInt","map","t","name","r"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport moment from \"moment\";\nimport useFormState from \"../hooks/useFormState\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport roomList from \"../rooms\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function EventForm(props) {\n  const classes = useStyles();\n\n  const [title, handleTitleChange, titleReset] = useFormState(\"\");\n  const [duration, handleDurationChange, durationReset] = useFormState(\"\");\n  const [resource, handleResourceChange, resourceReset] = useFormState(\"\");\n  const [room, handleRoomChange, roomReset] = useFormState(\"\");\n  const {\n    addEvent,\n    isOpen,\n    toggleIsOpen,\n    addTeachingMins,\n    events,\n    teacherList,\n    startTime,\n    setStartTime\n  } = props;\n\n  useEffect(() => {\n    durationReset();\n    titleReset();\n    resourceReset();\n    roomReset();\n    addTeachingMins();\n  }, [events]);\n\n  const handleAddEvent = () => {\n    addEvent({\n      title: `${title} -- ${room}`,\n      start: startTime,\n      end: moment(startTime)\n        .add(duration, \"m\")\n        .toDate(),\n      duration: duration,\n      resourceId: parseInt(resource)\n    });\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={toggleIsOpen}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">New Lesson</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Enter Lesson Info</DialogContentText>\n        <FormControl className={classes.formControl}>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Class Name\"\n            type=\"text\"\n            value={title}\n            onChange={handleTitleChange}\n            fullWidth\n            required\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"startTime\"\n            label=\"Start Time\"\n            type=\"text\"\n            value={startTime}\n            onChange={setStartTime}\n            fullWidth\n            required\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            margin=\"dense\"\n            id=\"duration\"\n            label=\"Class Duration\"\n            type=\"text\"\n            pattern=\"[0-9]*\"\n            value={duration}\n            onChange={handleDurationChange}\n            fullWidth\n            required\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"resource\">Teacher</InputLabel>\n          <Select\n            native\n            id=\"resource\"\n            value={resource}\n            onChange={handleResourceChange}\n            name=\"resource\"\n            required\n          >\n            <option value=\"\" />\n            {teacherList.map(t => (\n              <option key={`teacher-${t.resourceId}`} value={t.resourceId}>\n                {t.name}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"room\">Room #</InputLabel>\n          <Select\n            native\n            id=\"room\"\n            value={room}\n            onChange={handleRoomChange}\n            name=\"room\"\n            required\n          >\n            <option value=\"\" />\n            {roomList.map(r => (\n              <option key={`room-${r}`} value={r}>\n                {r}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={toggleIsOpen} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleAddEvent} color=\"primary\">\n          Add Class\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}