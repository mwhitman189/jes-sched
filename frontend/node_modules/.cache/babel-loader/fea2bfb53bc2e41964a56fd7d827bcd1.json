{"ast":null,"code":"var _jsxFileName = \"/home/miles/webdev/jes-sched/frontend/src/components/RecurrenceDialog.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const toggleIsRecurring = props.toggleIsRecurring,\n        formType = props.formType,\n        hideForm = props.hideForm;\n\n  const handleAddRecurrence = () => {\n    toggleIsRecurring(true);\n    hideForm();\n  };\n\n  return React.createElement(Dialog, {\n    open: formType === \"recurrence\",\n    onClose: hideForm,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Add Weekly Recurrence?\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: hideForm,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleAddRecurrence,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Add Recurrences\")));\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/frontend/src/components/RecurrenceDialog.js"],"names":["React","makeStyles","Button","Dialog","DialogActions","DialogTitle","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","EventForm","props","classes","toggleIsRecurring","formType","hideForm","handleAddRecurrence"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GADwB;AAKrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AADA;AALwB,CAAL,CAAN,CAA5B;AAUA,eAAe,SAASI,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AADuC,QAE/BW,iBAF+B,GAEWF,KAFX,CAE/BE,iBAF+B;AAAA,QAEZC,QAFY,GAEWH,KAFX,CAEZG,QAFY;AAAA,QAEFC,QAFE,GAEWJ,KAFX,CAEFI,QAFE;;AAIvC,QAAMC,mBAAmB,GAAG,MAAM;AAChCH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,IAAAA,QAAQ;AACT,GAHD;;AAKA,SACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAED,QAAQ,KAAK,YADrB;AAEE,IAAA,OAAO,EAAEC,QAFX;AAGE,uBAAgB,mBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BALF,EAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,QAAjB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,mBAAjB;AAAsC,IAAA,KAAK,EAAC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,CANF,CADF;AAiBD","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const { toggleIsRecurring, formType, hideForm } = props;\n\n  const handleAddRecurrence = () => {\n    toggleIsRecurring(true);\n    hideForm();\n  };\n\n  return (\n    <Dialog\n      open={formType === \"recurrence\"}\n      onClose={hideForm}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Add Weekly Recurrence?</DialogTitle>\n      <DialogActions>\n        <Button onClick={hideForm} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleAddRecurrence} color=\"primary\">\n          Add Recurrences\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}