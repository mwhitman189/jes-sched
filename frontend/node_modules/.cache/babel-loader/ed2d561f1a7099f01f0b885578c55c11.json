{"ast":null,"code":"import axios from \"axios\";\nimport moment from \"moment\";\nconst API_URI = \"http://localhost:5000\";\n\nconst addTeachingMins = (events, teachers, setTeachers) => {\n  if (teachers.length > 0) {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      teacher.teachingMins = 0;\n      teacher.resourceTitle = `${teacher.name} ${teacher.teachingMins}`;\n    });\n\n    if (events.length > 0) {\n      events.forEach(e => {\n        const idx = teachers.findIndex(teacher => teacher.resourceId === e.resourceId);\n        teachers[idx].teachingMins += parseInt(e.duration);\n        setTeachers([...teachers]);\n        teachers[idx].resourceTitle = `${teachers[idx].name} ${teachers[idx].teachingMins}`;\n      });\n      teachers.forEach(teacher => {\n        updateTeacher(teacher);\n      });\n    }\n  }\n};\n\nconst getTeachers = async setTeachers => {\n  await axios.get(`${API_URI}/teachers/`).then(res => {\n    if (res.data.length > 0) {\n      setTeachers(res.data);\n    }\n  }).catch(err => console.log(err));\n};\n\nconst getLessons = async setEvents => {\n  await axios.get(`${API_URI}/lessons/`).then(res => {\n    if (res.data.length > 0) {\n      res.data.map(event => {\n        event.start = new Date(event.start);\n        event.end = new Date(event.end);\n      });\n      setEvents(res.data);\n    }\n  }).catch(err => console.log(err));\n};\n\nconst addLesson = async (events, newEvent, setEvents) => {\n  await axios.post(`${API_URI}/lessons/add`, newEvent).then(res => console.log(res.data)).catch(err => console.log(err));\n  setEvents([...events, newEvent]);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios.post(`${API_URI}/teachers/add`, newTeacher).then(res => console.log(res.data)).catch(err => console.log(err));\n  setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async teacher => {\n  await axios.put(`${API_URI}/teachers/update/${teacher._id}`, {\n    name: teacher.name,\n    teachingMins: teacher.teachingMins\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst updateEvent = async selectedEvent => {\n  console.log(selectedEvent);\n  await axios.put(`${API_URI}/lessons/update/${event._id}`, {\n    groupId: 3,\n    title: event.title,\n    start: event.startTimeObj,\n    end: moment(event.startTimeObj).add(event.duration, \"m\").toDate(),\n    room: event.room,\n    duration: event.duration,\n    resourceId: parseInt(event.resource),\n    type: event.eventType\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => console.log(res.data)).catch(err => console.log(err)); // const idx = events.indexOf(event);\n  // console.log(idx);\n  // const nextEvents = [...events];\n  // nextEvents.splice(idx, 1, event);\n  // setEvents(nextEvents);\n};\n\nexport { addTeachingMins, getTeachers, getLessons, addLesson, addTeacher, updateTeacher, updateEvent };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/frontend/src/helperFunctions.js"],"names":["axios","moment","API_URI","addTeachingMins","events","teachers","setTeachers","length","forEach","teacher","teachingMins","resourceTitle","name","e","idx","findIndex","resourceId","parseInt","duration","updateTeacher","getTeachers","get","then","res","data","catch","err","console","log","getLessons","setEvents","map","event","start","Date","end","addLesson","newEvent","post","addTeacher","newTeacher","put","_id","headers","updateEvent","selectedEvent","groupId","title","startTimeObj","add","toDate","room","resource","type","eventType"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport moment from \"moment\";\n\nconst API_URI = \"http://localhost:5000\";\n\nconst addTeachingMins = (events, teachers, setTeachers) => {\n  if (teachers.length > 0) {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      teacher.teachingMins = 0;\n      teacher.resourceTitle = `${teacher.name} ${teacher.teachingMins}`;\n    });\n    if (events.length > 0) {\n      events.forEach(e => {\n        const idx = teachers.findIndex(\n          teacher => teacher.resourceId === e.resourceId\n        );\n        teachers[idx].teachingMins += parseInt(e.duration);\n        setTeachers([...teachers]);\n        teachers[\n          idx\n        ].resourceTitle = `${teachers[idx].name} ${teachers[idx].teachingMins}`;\n      });\n\n      teachers.forEach(teacher => {\n        updateTeacher(teacher);\n      });\n    }\n  }\n};\n\nconst getTeachers = async setTeachers => {\n  await axios\n    .get(`${API_URI}/teachers/`)\n    .then(res => {\n      if (res.data.length > 0) {\n        setTeachers(res.data);\n      }\n    })\n    .catch(err => console.log(err));\n};\n\nconst getLessons = async setEvents => {\n  await axios\n    .get(`${API_URI}/lessons/`)\n    .then(res => {\n      if (res.data.length > 0) {\n        res.data.map(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n        });\n        setEvents(res.data);\n      }\n    })\n    .catch(err => console.log(err));\n};\n\nconst addLesson = async (events, newEvent, setEvents) => {\n  await axios\n    .post(`${API_URI}/lessons/add`, newEvent)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  setEvents([...events, newEvent]);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios\n    .post(`${API_URI}/teachers/add`, newTeacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async teacher => {\n  await axios\n    .put(\n      `${API_URI}/teachers/update/${teacher._id}`,\n      {\n        name: teacher.name,\n        teachingMins: teacher.teachingMins\n      },\n      { headers: { \"Content-Type\": \"application/json\" } }\n    )\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst updateEvent = async selectedEvent => {\n  console.log(selectedEvent);\n  await axios\n    .put(\n      `${API_URI}/lessons/update/${event._id}`,\n      {\n        groupId: 3,\n        title: event.title,\n        start: event.startTimeObj,\n        end: moment(event.startTimeObj)\n          .add(event.duration, \"m\")\n          .toDate(),\n        room: event.room,\n        duration: event.duration,\n        resourceId: parseInt(event.resource),\n        type: event.eventType\n      },\n      { headers: { \"Content-Type\": \"application/json\" } }\n    )\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n\n  // const idx = events.indexOf(event);\n  // console.log(idx);\n  // const nextEvents = [...events];\n\n  // nextEvents.splice(idx, 1, event);\n  // setEvents(nextEvents);\n};\n\nexport {\n  addTeachingMins,\n  getTeachers,\n  getLessons,\n  addLesson,\n  addTeacher,\n  updateTeacher,\n  updateEvent\n};\n"]},"metadata":{},"sourceType":"module"}