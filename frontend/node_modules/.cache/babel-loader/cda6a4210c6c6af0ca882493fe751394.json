{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport axios from \"axios\";\nimport { RRule } from \"rrule\";\nimport moment from \"moment\";\n\nvar JapaneseHolidays = require(\"japanese-holidays\");\n\nconst API_URI = \"http://localhost:5000\";\n\nconst getRecurrences = event => {\n  const now = new Date(); // Create start and end dates for the current month to calc\n  // teaching minutes\n\n  const month_start = new Date(now.getFullYear(), now.getMonth(), 1);\n  const month_end = new Date(now.getFullYear(), now.getMonth() + 2, 0); // Create an array of DateTimes for the recurrence of events.\n\n  const rrule = new RRule({\n    freq: RRule.WEEKLY,\n    count: 26,\n    interval: 1,\n    dtstart: new Date(event.start)\n  });\n  const twoMonthsRecurrences = rrule.between(month_start, month_end); // twoMonthsRecurrences.shift();\n\n  console.log(twoMonthsRecurrences);\n  return twoMonthsRecurrences;\n};\n\nconst calcOutsideDutyMins = (eventStart, eventEnd, duration, dhStart, dhEnd) => {\n  // Set beginning of duty hours\n  const dutyHoursStart = moment(new Date(eventStart).setHours(dhStart, 0, 0)); // Calculate difference in hours between the duty hours start time and the lesson start time\n\n  const startDiff = dutyHoursStart.diff(eventStart, \"minutes\");\n  const endDiff = dutyHoursStart.diff(eventEnd, \"minutes\"); // Set end of duty hours\n\n  const dutyHoursEnd = moment(new Date(eventStart).setHours(dhEnd, 0, 0)); // Calculate difference in hours between the duty hours end time and the lesson end time\n\n  const afterDhEndDiff = -dutyHoursEnd.diff(eventEnd, \"minutes\");\n  const afterDhStartDiff = -dutyHoursEnd.diff(eventStart, \"minutes\");\n  let outsideDutyMins;\n\n  if (startDiff <= 0 && afterDhEndDiff <= 0) {\n    outsideDutyMins = 0;\n    return {\n      teachingMins: duration,\n      outsideDutyMins: outsideDutyMins\n    };\n  } else if (startDiff > 0 && endDiff > 0 || afterDhEndDiff > 0 && afterDhStartDiff > 0) {\n    return {\n      teachingMins: 0,\n      outsideDutyMins: duration\n    };\n  } else if (startDiff > 0) {\n    const regularTeachingMins = duration - startDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: startDiff\n    };\n  } else {\n    const regularTeachingMins = duration - afterDhEndDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: afterDhEndDiff\n    };\n  }\n};\n\nconst createPayPeriodData = (events, teacher, monthStart, monthEnd) => {\n  // Creates an object of dates containing minutes worked, by work type\n  const datesData = {};\n  teacher.teachingMins = 0;\n  teacher.outsideDutyMins = 0;\n  teacher.holidayMins = 0;\n  teacher.overThresholdOneMins = 0;\n  teacher.overThresholdTwoMins = 0;\n  events.forEach(e => {\n    if (moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\")) {\n      if (e.resourceId === teacher.resourceId) {\n        const date = e.start.getDate();\n        const day = e.start.getDay(); // Calculate number of minutes to add to first threshold to calc second threshold. (10 hours * 60 mins)\n\n        const secondThreshold = 10 * 60;\n        let teachingMins = 0;\n        let outsideDutyMins = 0;\n        let holidayMins = 0;\n\n        if (JapaneseHolidays.isHoliday(e.start) || e.start.getDay() === (0 || 1)) {\n          holidayMins = parseInt(e.duration);\n          teacher.holidayMins += holidayMins;\n        } else {\n          const totalTeachingMins = calcOutsideDutyMins(e.start, e.end, e.duration, 12, 21);\n          teachingMins = totalTeachingMins.teachingMins;\n          teacher.teachingMins += teachingMins;\n          outsideDutyMins = totalTeachingMins.outsideDutyMins;\n          teacher.outsideDutyMins += outsideDutyMins;\n        }\n\n        if (teacher.teachingMins >= teacher.otThreshold + secondThreshold) {\n          teacher.overThresholdTwoMins += teacher.teachingMins - (teacher.otThreshold + secondThreshold);\n          teacher.overThresholdOneMins += secondThreshold;\n        } else if (teacher.teachingMins >= teacher.otThreshold) {\n          teacher.overThresholdOneMins += teacher.teachingMins - teacher.otThreshold;\n        } // Teaching minutes object to be added to hash table\n\n\n        const dateData = {\n          resourceId: teacher,\n          date: date,\n          day: day,\n          teachingMins: teachingMins,\n          outsideDutyMins: outsideDutyMins,\n          overThresholdOneMins: teacher.overThresholdOneMins,\n          overThresholdTwoMins: teacher.overThresholdTwoMins,\n          holidayMins: holidayMins,\n          travelAllowance: 0,\n          travelExpenses: 0\n        }; // If date already in hash table, add teaching minutes to existing keys, otherwise create\n        // a new date object\n\n        if (datesData[date]) {\n          datesData[date].teachingMins += dateData.teachingMins;\n          datesData[date].outsideDutyMins += dateData.outsideDutyMins;\n          datesData[date].overThresholdOneMins += dateData.overThresholdOneMins;\n          datesData[date].overThresholdTwoMins += dateData.overThresholdTwoMins;\n          datesData[date].holidayMins += dateData.holidayMins;\n          datesData[date].travelAllowance += dateData.travelAllowance;\n          datesData[date].travelExpenses += dateData.travelExpenses;\n        } else {\n          datesData[date] = dateData;\n        }\n      }\n    }\n  });\n  return datesData;\n};\n\nconst addTeachingMins = (events, teachers, setTeachers) => {\n  const now = new Date(); // Create start and end dates for the current month to calc\n  // teaching minutes\n\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n  if (teachers.length > 0) {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      teacher.teachingMins = 0;\n      teacher.outsideDutyMins = 0;\n      teacher.holidayMins = 0;\n      teacher.overThresholdOneMins = 0;\n      teacher.overThresholdTwoMins = 0;\n    });\n    teachers.forEach(teacher => {\n      createPayPeriodData(events, teacher, monthStart, monthEnd);\n      updateTeacher(teacher, teachers, setTeachers);\n    });\n  }\n};\n\nconst getTeachers = async (events, teachers, setTeachers) => {\n  return await axios.get(`${API_URI}/teachers/`).then(res => {\n    if (res.data.length > 0) {\n      setTeachers(res.data);\n    }\n  }).then(addTeachingMins(events, teachers, setTeachers)).catch(err => console.log(err));\n};\n\nconst getLessons = async (events, setEvents) => {\n  return await axios.get(`${API_URI}/lessons/`).then(res => {\n    if (res.data.length > 0) {\n      res.data.map(event => {\n        event.start = new Date(event.start);\n        event.end = new Date(event.end);\n      });\n      setEvents([...res.data, events[0]]);\n    }\n  }).catch(err => console.log(err));\n};\n\nconst addLesson = async (events, event, setEvents) => {\n  const newEvents = [];\n\n  if (event.recur === true) {\n    const recurrences = getRecurrences(event);\n    recurrences.map(r => {\n      const newEvent = _objectSpread({}, event, {\n        start: r,\n        end: moment(r).add(event.duration, \"m\").toDate()\n      });\n\n      if (JapaneseHolidays.isHoliday(r)) {\n        newEvent.isHoliday = true;\n      }\n\n      newEvents.push(newEvent);\n      return newEvents;\n    });\n  }\n\n  if (JapaneseHolidays.isHoliday(event.start)) {\n    event = _objectSpread({}, event, {\n      isHoliday: true\n    });\n  }\n\n  newEvents.push(event);\n  await axios.post(`${API_URI}/lessons/add`, newEvents).then(res => console.log(res.data)).catch(err => console.log(err));\n  return getLessons(events, setEvents);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios.post(`${API_URI}/teachers/add`, newTeacher).then(res => console.log(res.data)).catch(err => console.log(err));\n  return setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async (teacher, teachers, setTeachers) => {\n  const idx = teachers.findIndex(t => t._id === teacher._id);\n  const updatedTeachers = [...teachers];\n\n  const updatedTeacher = _objectSpread({}, teacher, {\n    resourceTitle: teacher.resourceTitle,\n    name: teacher.name,\n    familyName: teacher.familyName,\n    teachingMins: teacher.teachingMins,\n    holidayMins: teacher.holidayMins,\n    outsideDutyMins: teacher.outsideDutyMins,\n    otThreshold: teacher.otThreshold,\n    overThresholdOneMins: teacher.overThresholdOneMins,\n    overThresholdTwoMins: teacher.overThresholdTwoMins\n  });\n\n  updatedTeachers.splice(idx, 1, updatedTeacher);\n  setTeachers(updatedTeachers);\n  return await axios.put(`${API_URI}/teachers/update/${teacher._id}`, updatedTeacher).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst deleteTeacher = async teacher => {\n  return await axios.delete(`${API_URI}/teachers/delete/${teacher._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst deleteEvent = async (events, event, setEvents) => {\n  const newEvents = events.filter(evt => evt._id !== event._id);\n  setEvents(newEvents);\n  return await axios.delete(`${API_URI}/lessons/delete/${event._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst changeEvent = async (events, event, editedEvent, setEvents) => {\n  const idx = events.findIndex(e => e._id === event._id);\n  const nextEvents = [...events];\n  nextEvents.splice(idx, 1, editedEvent);\n  setEvents(nextEvents);\n  return await axios.put(`${API_URI}/lessons/update/${event._id}`, editedEvent).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst addPayment = async newPayment => {\n  return await axios.post(`${API_URI}/payments/add`, newPayment).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nexport { getRecurrences, addTeachingMins, getTeachers, getLessons, addLesson, addTeacher, updateTeacher, deleteTeacher, deleteEvent, changeEvent, addPayment, createPayPeriodData };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/frontend/src/helperFunctions.js"],"names":["axios","RRule","moment","JapaneseHolidays","require","API_URI","getRecurrences","event","now","Date","month_start","getFullYear","getMonth","month_end","rrule","freq","WEEKLY","count","interval","dtstart","start","twoMonthsRecurrences","between","console","log","calcOutsideDutyMins","eventStart","eventEnd","duration","dhStart","dhEnd","dutyHoursStart","setHours","startDiff","diff","endDiff","dutyHoursEnd","afterDhEndDiff","afterDhStartDiff","outsideDutyMins","teachingMins","regularTeachingMins","createPayPeriodData","events","teacher","monthStart","monthEnd","datesData","holidayMins","overThresholdOneMins","overThresholdTwoMins","forEach","e","isBetween","resourceId","date","getDate","day","getDay","secondThreshold","isHoliday","parseInt","totalTeachingMins","end","otThreshold","dateData","travelAllowance","travelExpenses","addTeachingMins","teachers","setTeachers","length","updateTeacher","getTeachers","get","then","res","data","catch","err","getLessons","setEvents","map","addLesson","newEvents","recur","recurrences","r","newEvent","add","toDate","push","post","addTeacher","newTeacher","idx","findIndex","t","_id","updatedTeachers","updatedTeacher","resourceTitle","name","familyName","splice","put","deleteTeacher","delete","deleteEvent","filter","evt","changeEvent","editedEvent","nextEvents","addPayment","newPayment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { RRule } from \"rrule\";\nimport moment from \"moment\";\n\nvar JapaneseHolidays = require(\"japanese-holidays\");\n\nconst API_URI = \"http://localhost:5000\";\n\nconst getRecurrences = event => {\n  const now = new Date();\n  // Create start and end dates for the current month to calc\n  // teaching minutes\n  const month_start = new Date(now.getFullYear(), now.getMonth(), 1);\n  const month_end = new Date(now.getFullYear(), now.getMonth() + 2, 0);\n  // Create an array of DateTimes for the recurrence of events.\n  const rrule = new RRule({\n    freq: RRule.WEEKLY,\n    count: 26,\n    interval: 1,\n    dtstart: new Date(event.start)\n  });\n  const twoMonthsRecurrences = rrule.between(month_start, month_end);\n  // twoMonthsRecurrences.shift();\n  console.log(twoMonthsRecurrences);\n  return twoMonthsRecurrences;\n};\n\nconst calcOutsideDutyMins = (\n  eventStart,\n  eventEnd,\n  duration,\n  dhStart,\n  dhEnd\n) => {\n  // Set beginning of duty hours\n  const dutyHoursStart = moment(new Date(eventStart).setHours(dhStart, 0, 0));\n  // Calculate difference in hours between the duty hours start time and the lesson start time\n  const startDiff = dutyHoursStart.diff(eventStart, \"minutes\");\n  const endDiff = dutyHoursStart.diff(eventEnd, \"minutes\");\n  // Set end of duty hours\n  const dutyHoursEnd = moment(new Date(eventStart).setHours(dhEnd, 0, 0));\n  // Calculate difference in hours between the duty hours end time and the lesson end time\n  const afterDhEndDiff = -dutyHoursEnd.diff(eventEnd, \"minutes\");\n  const afterDhStartDiff = -dutyHoursEnd.diff(eventStart, \"minutes\");\n\n  let outsideDutyMins;\n  if (startDiff <= 0 && afterDhEndDiff <= 0) {\n    outsideDutyMins = 0;\n    return {\n      teachingMins: duration,\n      outsideDutyMins: outsideDutyMins\n    };\n  } else if (\n    (startDiff > 0 && endDiff > 0) ||\n    (afterDhEndDiff > 0 && afterDhStartDiff > 0)\n  ) {\n    return {\n      teachingMins: 0,\n      outsideDutyMins: duration\n    };\n  } else if (startDiff > 0) {\n    const regularTeachingMins = duration - startDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: startDiff\n    };\n  } else {\n    const regularTeachingMins = duration - afterDhEndDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: afterDhEndDiff\n    };\n  }\n};\n\nconst createPayPeriodData = (events, teacher, monthStart, monthEnd) => {\n  // Creates an object of dates containing minutes worked, by work type\n  const datesData = {};\n  teacher.teachingMins = 0;\n  teacher.outsideDutyMins = 0;\n  teacher.holidayMins = 0;\n  teacher.overThresholdOneMins = 0;\n  teacher.overThresholdTwoMins = 0;\n  events.forEach(e => {\n    if (moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\")) {\n      if (e.resourceId === teacher.resourceId) {\n        const date = e.start.getDate();\n        const day = e.start.getDay();\n        // Calculate number of minutes to add to first threshold to calc second threshold. (10 hours * 60 mins)\n        const secondThreshold = 10 * 60;\n        let teachingMins = 0;\n        let outsideDutyMins = 0;\n        let holidayMins = 0;\n\n        if (\n          JapaneseHolidays.isHoliday(e.start) ||\n          e.start.getDay() === (0 || 1)\n        ) {\n          holidayMins = parseInt(e.duration);\n          teacher.holidayMins += holidayMins;\n        } else {\n          const totalTeachingMins = calcOutsideDutyMins(\n            e.start,\n            e.end,\n            e.duration,\n            12,\n            21\n          );\n          teachingMins = totalTeachingMins.teachingMins;\n          teacher.teachingMins += teachingMins;\n          outsideDutyMins = totalTeachingMins.outsideDutyMins;\n          teacher.outsideDutyMins += outsideDutyMins;\n        }\n        if (teacher.teachingMins >= teacher.otThreshold + secondThreshold) {\n          teacher.overThresholdTwoMins +=\n            teacher.teachingMins - (teacher.otThreshold + secondThreshold);\n          teacher.overThresholdOneMins += secondThreshold;\n        } else if (teacher.teachingMins >= teacher.otThreshold) {\n          teacher.overThresholdOneMins +=\n            teacher.teachingMins - teacher.otThreshold;\n        }\n        // Teaching minutes object to be added to hash table\n        const dateData = {\n          resourceId: teacher,\n          date: date,\n          day: day,\n          teachingMins: teachingMins,\n          outsideDutyMins: outsideDutyMins,\n          overThresholdOneMins: teacher.overThresholdOneMins,\n          overThresholdTwoMins: teacher.overThresholdTwoMins,\n          holidayMins: holidayMins,\n          travelAllowance: 0,\n          travelExpenses: 0\n        };\n        // If date already in hash table, add teaching minutes to existing keys, otherwise create\n        // a new date object\n        if (datesData[date]) {\n          datesData[date].teachingMins += dateData.teachingMins;\n          datesData[date].outsideDutyMins += dateData.outsideDutyMins;\n          datesData[date].overThresholdOneMins += dateData.overThresholdOneMins;\n          datesData[date].overThresholdTwoMins += dateData.overThresholdTwoMins;\n          datesData[date].holidayMins += dateData.holidayMins;\n          datesData[date].travelAllowance += dateData.travelAllowance;\n          datesData[date].travelExpenses += dateData.travelExpenses;\n        } else {\n          datesData[date] = dateData;\n        }\n      }\n    }\n  });\n  return datesData;\n};\n\nconst addTeachingMins = (events, teachers, setTeachers) => {\n  const now = new Date();\n  // Create start and end dates for the current month to calc\n  // teaching minutes\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  if (teachers.length > 0) {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      teacher.teachingMins = 0;\n      teacher.outsideDutyMins = 0;\n      teacher.holidayMins = 0;\n      teacher.overThresholdOneMins = 0;\n      teacher.overThresholdTwoMins = 0;\n    });\n    teachers.forEach(teacher => {\n      createPayPeriodData(events, teacher, monthStart, monthEnd);\n      updateTeacher(teacher, teachers, setTeachers);\n    });\n  }\n};\n\nconst getTeachers = async (events, teachers, setTeachers) => {\n  return await axios\n    .get(`${API_URI}/teachers/`)\n    .then(res => {\n      if (res.data.length > 0) {\n        setTeachers(res.data);\n      }\n    })\n    .then(addTeachingMins(events, teachers, setTeachers))\n    .catch(err => console.log(err));\n};\n\nconst getLessons = async (events, setEvents) => {\n  return await axios\n    .get(`${API_URI}/lessons/`)\n    .then(res => {\n      if (res.data.length > 0) {\n        res.data.map(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n        });\n        setEvents([...res.data, events[0]]);\n      }\n    })\n    .catch(err => console.log(err));\n};\n\nconst addLesson = async (events, event, setEvents) => {\n  const newEvents = [];\n  if (event.recur === true) {\n    const recurrences = getRecurrences(event);\n    recurrences.map(r => {\n      const newEvent = {\n        ...event,\n        start: r,\n        end: moment(r)\n          .add(event.duration, \"m\")\n          .toDate()\n      };\n      if (JapaneseHolidays.isHoliday(r)) {\n        newEvent.isHoliday = true;\n      }\n      newEvents.push(newEvent);\n      return newEvents;\n    });\n  }\n  if (JapaneseHolidays.isHoliday(event.start)) {\n    event = { ...event, isHoliday: true };\n  }\n  newEvents.push(event);\n  await axios\n    .post(`${API_URI}/lessons/add`, newEvents)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  return getLessons(events, setEvents);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios\n    .post(`${API_URI}/teachers/add`, newTeacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  return setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async (teacher, teachers, setTeachers) => {\n  const idx = teachers.findIndex(t => t._id === teacher._id);\n  const updatedTeachers = [...teachers];\n\n  const updatedTeacher = {\n    ...teacher,\n    resourceTitle: teacher.resourceTitle,\n    name: teacher.name,\n    familyName: teacher.familyName,\n    teachingMins: teacher.teachingMins,\n    holidayMins: teacher.holidayMins,\n    outsideDutyMins: teacher.outsideDutyMins,\n    otThreshold: teacher.otThreshold,\n    overThresholdOneMins: teacher.overThresholdOneMins,\n    overThresholdTwoMins: teacher.overThresholdTwoMins\n  };\n  updatedTeachers.splice(idx, 1, updatedTeacher);\n\n  setTeachers(updatedTeachers);\n  return await axios\n    .put(`${API_URI}/teachers/update/${teacher._id}`, updatedTeacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst deleteTeacher = async teacher => {\n  return await axios\n    .delete(`${API_URI}/teachers/delete/${teacher._id}`)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst deleteEvent = async (events, event, setEvents) => {\n  const newEvents = events.filter(evt => evt._id !== event._id);\n  setEvents(newEvents);\n  return await axios\n    .delete(`${API_URI}/lessons/delete/${event._id}`)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst changeEvent = async (events, event, editedEvent, setEvents) => {\n  const idx = events.findIndex(e => e._id === event._id);\n  const nextEvents = [...events];\n\n  nextEvents.splice(idx, 1, editedEvent);\n  setEvents(nextEvents);\n\n  return await axios\n    .put(`${API_URI}/lessons/update/${event._id}`, editedEvent)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst addPayment = async newPayment => {\n  return await axios\n    .post(`${API_URI}/payments/add`, newPayment)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nexport {\n  getRecurrences,\n  addTeachingMins,\n  getTeachers,\n  getLessons,\n  addLesson,\n  addTeacher,\n  updateTeacher,\n  deleteTeacher,\n  deleteEvent,\n  changeEvent,\n  addPayment,\n  createPayPeriodData\n};\n"]},"metadata":{},"sourceType":"module"}