{"ast":null,"code":"import _defineProperty from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/src/components/Schedule.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport { WorkWeek } from \"./CustomView\";\nimport EventForm from \"./EventForm\";\nimport useToggle from \"../hooks/useToggle\";\nimport useFormState from \"../hooks/useInputState\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"..../node_modules/react-big-calendar/lib/sass/styles\";\nimport \"../node_modules/react-big-calendar/lib/addons/dragAndDrop/styles\";\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nconst Schedule = () => {\n  const _useState = useState(eventsList),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const _useState3 = useState(teachersList),\n        _useState4 = _slicedToArray(_useState3, 2),\n        teacherList = _useState4[0],\n        setTeacherList = _useState4[1];\n\n  const _useFormState = useFormState(new Date()),\n        _useFormState2 = _slicedToArray(_useFormState, 3),\n        startTime = _useFormState2[0],\n        updateStartTime = _useFormState2[1],\n        startTimeReset = _useFormState2[2];\n\n  const _useToggle = useToggle(false),\n        _useToggle2 = _slicedToArray(_useToggle, 2),\n        isOpen = _useToggle2[0],\n        toggleIsOpen = _useToggle2[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedEvent = _useState6[0],\n        setSelectedEvent = _useState6[1]; // Limit displayed hours of the day\n\n\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n  useEffect(() => {\n    addTeachingMins();\n  }, [events]);\n\n  const addTeachingMins = () => {\n    teacherList.forEach(teacher => {\n      return teacher.teachingMins = 0;\n    });\n    events.forEach(e => {\n      const index = teacherList.findIndex(teacher => teacher.resourceId === e.resourceId); // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n\n      teacherList[index].teachingMins += parseInt(e.duration);\n      setTeacherList([...teacherList]);\n      teacherList[index].resourceTitle = \"\".concat(teacherList[index].name, \" \").concat(teacherList[index].teachingMins);\n    });\n  }; // TODO: Add a function to open the new class form with the current data populated, for validation\n\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const idx = events.indexOf(event);\n\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end\n    });\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n    setEvents(nextEvents); // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const handleMove = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (!validateRoom(otherEvents, event.room, start, parseInt(event.duration))) {} else if (!validateTeacher(otherEvents, event.resourceId, start, parseInt(event.duration))) {} else {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end\n      });\n    }\n  };\n\n  const handleSelect = ({\n    start\n  }) => {\n    toggleIsOpen();\n    updateStartTime(start);\n  };\n\n  const addEvent = newEvent => {\n    setEvents([...events, newEvent]);\n  };\n\n  const editEvent = updatedEvent => {\n    const idx = events.indexOf(updatedEvent);\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n    setEvents(nextEvents);\n  };\n\n  const handleAddEvent = newEvent => {\n    addEvent(newEvent);\n    toggleIsOpen();\n  };\n\n  const handleEditEvent = updatedEvent => {\n    editEvent(updatedEvent);\n    toggleIsOpen();\n    setSelectedEvent();\n  };\n\n  const handleDoubleClick = event => {\n    setSelectedEvent(event);\n    toggleIsOpen();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, isOpen && React.createElement(EventForm, {\n    isOpen: isOpen,\n    toggleIsOpen: toggleIsOpen,\n    addEvent: handleAddEvent,\n    addTeachingMins: addTeachingMins,\n    events: events,\n    teacherList: teacherList,\n    startTime: startTime,\n    updateStartTime: updateStartTime,\n    startTimeReset: startTimeReset,\n    editEvent: handleEditEvent,\n    event: selectedEvent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(DragAndDropCalendar, {\n    style: {\n      width: \"95vw\",\n      maxHeight: \"100vh\"\n    },\n    localizer: localizer,\n    views: {\n      week: WorkWeek,\n      day: true\n    },\n    defaultView: \"day\",\n    events: events,\n    onEventDrop: handleMove,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    resources: teacherList,\n    resourceIdAccessor: \"resourceId\",\n    resourceTitleAccessor: \"resourceTitle\",\n    selectable: true,\n    onDoubleClickEvent: handleDoubleClick,\n    eventPropGetter: // Hide a dummy event that fixes drag and drop bug\n    event => {\n      if (event.hide) {\n        return {\n          style: {\n            display: \"none\"\n          }\n        };\n      }\n    },\n    step: 30,\n    timeslots: 2,\n    min: minTime,\n    max: maxTime,\n    onSelectSlot: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/src/components/Schedule.js"],"names":["React","useState","useEffect","Calendar","momentLocalizer","withDragAndDrop","moment","WorkWeek","EventForm","useToggle","useFormState","validateRoom","validateTeacher","eventsList","teachersList","localizer","DragAndDropCalendar","Schedule","events","setEvents","teacherList","setTeacherList","Date","startTime","updateStartTime","startTimeReset","isOpen","toggleIsOpen","selectedEvent","setSelectedEvent","minTime","setHours","maxTime","addTeachingMins","forEach","teacher","teachingMins","e","index","findIndex","resourceId","parseInt","duration","resourceTitle","name","moveEvent","event","start","end","idx","indexOf","updatedEvent","nextEvents","splice","handleMove","otherEvents","slice","room","handleSelect","addEvent","newEvent","editEvent","handleAddEvent","handleEditEvent","handleDoubleClick","width","maxHeight","week","day","hide","style","display"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,eAA9C;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,OAAOC,YAAP,MAAyB,aAAzB;AACA,OAAO,mDAAP;AACA,OAAO,sDAAP;AACA,OAAO,kEAAP;AAEA,MAAMC,SAAS,GAAGX,eAAe,CAACE,MAAD,CAAjC;AACA,MAAMU,mBAAmB,GAAGX,eAAe,CAACF,QAAD,CAA3C;;AAEA,MAAMc,QAAQ,GAAG,MAAM;AAAA,oBACOhB,QAAQ,CAACY,UAAD,CADf;AAAA;AAAA,QACdK,MADc;AAAA,QACNC,SADM;;AAAA,qBAEiBlB,QAAQ,CAACa,YAAD,CAFzB;AAAA;AAAA,QAEdM,WAFc;AAAA,QAEDC,cAFC;;AAAA,wBAGgCX,YAAY,CAAC,IAAIY,IAAJ,EAAD,CAH5C;AAAA;AAAA,QAGdC,SAHc;AAAA,QAGHC,eAHG;AAAA,QAGcC,cAHd;;AAAA,qBAIUhB,SAAS,CAAC,KAAD,CAJnB;AAAA;AAAA,QAIdiB,MAJc;AAAA,QAINC,YAJM;;AAAA,qBAKqB1B,QAAQ,CAAC,EAAD,CAL7B;AAAA;AAAA,QAKd2B,aALc;AAAA,QAKCC,gBALD,kBAOrB;;;AACA,QAAMC,OAAO,GAAG,IAAIR,IAAJ,EAAhB;AACAQ,EAAAA,OAAO,CAACC,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,QAAMC,OAAO,GAAG,IAAIV,IAAJ,EAAhB;AACAU,EAAAA,OAAO,CAACD,QAAR,CAAiB,EAAjB,EAAqB,CAArB,EAAwB,CAAxB;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,eAAe;AAChB,GAFQ,EAEN,CAACf,MAAD,CAFM,CAAT;;AAIA,QAAMe,eAAe,GAAG,MAAM;AAC5Bb,IAAAA,WAAW,CAACc,OAAZ,CAAoBC,OAAO,IAAI;AAC7B,aAAQA,OAAO,CAACC,YAAR,GAAuB,CAA/B;AACD,KAFD;AAGAlB,IAAAA,MAAM,CAACgB,OAAP,CAAeG,CAAC,IAAI;AAClB,YAAMC,KAAK,GAAGlB,WAAW,CAACmB,SAAZ,CACZJ,OAAO,IAAIA,OAAO,CAACK,UAAR,KAAuBH,CAAC,CAACG,UADxB,CAAd,CADkB,CAIlB;;AACApB,MAAAA,WAAW,CAACkB,KAAD,CAAX,CAAmBF,YAAnB,IAAmCK,QAAQ,CAACJ,CAAC,CAACK,QAAH,CAA3C;AACArB,MAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,CAAD,CAAd;AACAA,MAAAA,WAAW,CACTkB,KADS,CAAX,CAEEK,aAFF,aAEqBvB,WAAW,CAACkB,KAAD,CAAX,CAAmBM,IAFxC,cAEgDxB,WAAW,CAACkB,KAAD,CAAX,CAAmBF,YAFnE;AAGD,KAVD;AAWD,GAfD,CAjBqB,CAkCrB;;;AACA,QAAMS,SAAS,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASN,IAAAA,UAAT;AAAqBO,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,GAAD,KAAuC;AACvD,UAAMC,GAAG,GAAG/B,MAAM,CAACgC,OAAP,CAAeJ,KAAf,CAAZ;;AAEA,UAAMK,YAAY,qBAAQL,KAAR;AAAeN,MAAAA,UAAf;AAA2BO,MAAAA,KAA3B;AAAkCC,MAAAA;AAAlC,MAAlB;;AAEA,UAAMI,UAAU,GAAG,CAAC,GAAGlC,MAAJ,CAAnB;AACAkC,IAAAA,UAAU,CAACC,MAAX,CAAkBJ,GAAlB,EAAuB,CAAvB,EAA0BE,YAA1B;AAEAhC,IAAAA,SAAS,CAACiC,UAAD,CAAT,CARuD,CASvD;AACD,GAVD;;AAYA,QAAME,UAAU,GAAG,CAAC;AAAER,IAAAA,KAAF;AAASN,IAAAA,UAAT;AAAqBO,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,GAAD,KAAuC;AACxD,UAAMC,GAAG,GAAG/B,MAAM,CAACgC,OAAP,CAAeJ,KAAf,CAAZ;AACA,UAAMS,WAAW,GAAG,CAAC,GAAGrC,MAAM,CAACsC,KAAP,CAAa,CAAb,EAAgBP,GAAhB,CAAJ,EAA0B,GAAG/B,MAAM,CAACsC,KAAP,CAAaP,GAAG,GAAG,CAAnB,CAA7B,CAApB;;AACA,QACE,CAACtC,YAAY,CAAC4C,WAAD,EAAcT,KAAK,CAACW,IAApB,EAA0BV,KAA1B,EAAiCN,QAAQ,CAACK,KAAK,CAACJ,QAAP,CAAzC,CADf,EAEE,CACD,CAHD,MAGO,IACL,CAAC9B,eAAe,CACd2C,WADc,EAEdT,KAAK,CAACN,UAFQ,EAGdO,KAHc,EAIdN,QAAQ,CAACK,KAAK,CAACJ,QAAP,CAJM,CADX,EAOL,CACD,CARM,MAQA;AACLG,MAAAA,SAAS,CAAC;AACRC,QAAAA,KADQ;AAERN,QAAAA,UAFQ;AAGRO,QAAAA,KAHQ;AAIRC,QAAAA;AAJQ,OAAD,CAAT;AAMD;AACF,GAtBD;;AAwBA,QAAMU,YAAY,GAAG,CAAC;AAAEX,IAAAA;AAAF,GAAD,KAAe;AAClCpB,IAAAA,YAAY;AACZH,IAAAA,eAAe,CAACuB,KAAD,CAAf;AACD,GAHD;;AAKA,QAAMY,QAAQ,GAAGC,QAAQ,IAAI;AAC3BzC,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY0C,QAAZ,CAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAGV,YAAY,IAAI;AAChC,UAAMF,GAAG,GAAG/B,MAAM,CAACgC,OAAP,CAAeC,YAAf,CAAZ;AACA,UAAMC,UAAU,GAAG,CAAC,GAAGlC,MAAJ,CAAnB;AAEAkC,IAAAA,UAAU,CAACC,MAAX,CAAkBJ,GAAlB,EAAuB,CAAvB,EAA0BE,YAA1B;AACAhC,IAAAA,SAAS,CAACiC,UAAD,CAAT;AACD,GAND;;AAQA,QAAMU,cAAc,GAAGF,QAAQ,IAAI;AACjCD,IAAAA,QAAQ,CAACC,QAAD,CAAR;AACAjC,IAAAA,YAAY;AACb,GAHD;;AAKA,QAAMoC,eAAe,GAAGZ,YAAY,IAAI;AACtCU,IAAAA,SAAS,CAACV,YAAD,CAAT;AACAxB,IAAAA,YAAY;AACZE,IAAAA,gBAAgB;AACjB,GAJD;;AAMA,QAAMmC,iBAAiB,GAAGlB,KAAK,IAAI;AACjCjB,IAAAA,gBAAgB,CAACiB,KAAD,CAAhB;AACAnB,IAAAA,YAAY;AACb,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,IACL,oBAAC,SAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,YAAY,EAAEC,YAFhB;AAGE,IAAA,QAAQ,EAAEmC,cAHZ;AAIE,IAAA,eAAe,EAAE7B,eAJnB;AAKE,IAAA,MAAM,EAAEf,MALV;AAME,IAAA,WAAW,EAAEE,WANf;AAOE,IAAA,SAAS,EAAEG,SAPb;AAQE,IAAA,eAAe,EAAEC,eARnB;AASE,IAAA,cAAc,EAAEC,cATlB;AAUE,IAAA,SAAS,EAAEsC,eAVb;AAWE,IAAA,KAAK,EAAEnC,aAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAgBE,oBAAC,mBAAD;AACE,IAAA,KAAK,EAAE;AAAEqC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KADT;AAEE,IAAA,SAAS,EAAEnD,SAFb;AAGE,IAAA,KAAK,EAAE;AAAEoD,MAAAA,IAAI,EAAE5D,QAAR;AAAkB6D,MAAAA,GAAG,EAAE;AAAvB,KAHT;AAIE,IAAA,WAAW,EAAC,KAJd;AAKE,IAAA,MAAM,EAAElD,MALV;AAME,IAAA,WAAW,EAAEoC,UANf;AAOE,IAAA,aAAa,EAAC,OAPhB;AAQE,IAAA,WAAW,EAAC,KARd;AASE,IAAA,SAAS,EAAElC,WATb;AAUE,IAAA,kBAAkB,EAAC,YAVrB;AAWE,IAAA,qBAAqB,EAAC,eAXxB;AAYE,IAAA,UAAU,MAZZ;AAaE,IAAA,kBAAkB,EAAE4C,iBAbtB;AAcE,IAAA,eAAe,EACb;AACAlB,IAAAA,KAAK,IAAI;AACP,UAAIA,KAAK,CAACuB,IAAV,EAAgB;AACd,eAAO;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX;AAAT,SAAP;AACD;AACF,KApBL;AAsBE,IAAA,IAAI,EAAE,EAtBR;AAuBE,IAAA,SAAS,EAAE,CAvBb;AAwBE,IAAA,GAAG,EAAEzC,OAxBP;AAyBE,IAAA,GAAG,EAAEE,OAzBP;AA0BE,IAAA,YAAY,EAAE0B,YA1BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AA+CD,CAvJD;;AAwJA,eAAezC,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\n\nimport { WorkWeek } from \"./CustomView\";\nimport EventForm from \"./EventForm\";\nimport useToggle from \"../hooks/useToggle\";\nimport useFormState from \"../hooks/useInputState\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"..../node_modules/react-big-calendar/lib/sass/styles\";\nimport \"../node_modules/react-big-calendar/lib/addons/dragAndDrop/styles\";\n\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nconst Schedule = () => {\n  const [events, setEvents] = useState(eventsList);\n  const [teacherList, setTeacherList] = useState(teachersList);\n  const [startTime, updateStartTime, startTimeReset] = useFormState(new Date());\n  const [isOpen, toggleIsOpen] = useToggle(false);\n  const [selectedEvent, setSelectedEvent] = useState(\"\");\n\n  // Limit displayed hours of the day\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n\n  useEffect(() => {\n    addTeachingMins();\n  }, [events]);\n\n  const addTeachingMins = () => {\n    teacherList.forEach(teacher => {\n      return (teacher.teachingMins = 0);\n    });\n    events.forEach(e => {\n      const index = teacherList.findIndex(\n        teacher => teacher.resourceId === e.resourceId\n      );\n      // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n      teacherList[index].teachingMins += parseInt(e.duration);\n      setTeacherList([...teacherList]);\n      teacherList[\n        index\n      ].resourceTitle = `${teacherList[index].name} ${teacherList[index].teachingMins}`;\n    });\n  };\n\n  // TODO: Add a function to open the new class form with the current data populated, for validation\n  const moveEvent = ({ event, resourceId, start, end }) => {\n    const idx = events.indexOf(event);\n\n    const updatedEvent = { ...event, resourceId, start, end };\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n\n    setEvents(nextEvents);\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const handleMove = ({ event, resourceId, start, end }) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n    if (\n      !validateRoom(otherEvents, event.room, start, parseInt(event.duration))\n    ) {\n    } else if (\n      !validateTeacher(\n        otherEvents,\n        event.resourceId,\n        start,\n        parseInt(event.duration)\n      )\n    ) {\n    } else {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end\n      });\n    }\n  };\n\n  const handleSelect = ({ start }) => {\n    toggleIsOpen();\n    updateStartTime(start);\n  };\n\n  const addEvent = newEvent => {\n    setEvents([...events, newEvent]);\n  };\n\n  const editEvent = updatedEvent => {\n    const idx = events.indexOf(updatedEvent);\n    const nextEvents = [...events];\n\n    nextEvents.splice(idx, 1, updatedEvent);\n    setEvents(nextEvents);\n  };\n\n  const handleAddEvent = newEvent => {\n    addEvent(newEvent);\n    toggleIsOpen();\n  };\n\n  const handleEditEvent = updatedEvent => {\n    editEvent(updatedEvent);\n    toggleIsOpen();\n    setSelectedEvent();\n  };\n\n  const handleDoubleClick = event => {\n    setSelectedEvent(event);\n    toggleIsOpen();\n  };\n\n  return (\n    <div>\n      {isOpen && (\n        <EventForm\n          isOpen={isOpen}\n          toggleIsOpen={toggleIsOpen}\n          addEvent={handleAddEvent}\n          addTeachingMins={addTeachingMins}\n          events={events}\n          teacherList={teacherList}\n          startTime={startTime}\n          updateStartTime={updateStartTime}\n          startTimeReset={startTimeReset}\n          editEvent={handleEditEvent}\n          event={selectedEvent}\n        />\n      )}\n      <DragAndDropCalendar\n        style={{ width: \"95vw\", maxHeight: \"100vh\" }}\n        localizer={localizer}\n        views={{ week: WorkWeek, day: true }}\n        defaultView=\"day\"\n        events={events}\n        onEventDrop={handleMove}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        resources={teacherList}\n        resourceIdAccessor=\"resourceId\"\n        resourceTitleAccessor=\"resourceTitle\"\n        selectable\n        onDoubleClickEvent={handleDoubleClick}\n        eventPropGetter={\n          // Hide a dummy event that fixes drag and drop bug\n          event => {\n            if (event.hide) {\n              return { style: { display: \"none\" } };\n            }\n          }\n        }\n        step={30}\n        timeslots={2}\n        min={minTime}\n        max={maxTime}\n        onSelectSlot={handleSelect}\n      />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}