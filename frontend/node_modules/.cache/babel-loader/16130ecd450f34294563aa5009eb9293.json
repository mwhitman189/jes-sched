{"ast":null,"code":"import moment from \"moment\";\n\nfunction validateRoom(events, room, start, duration) {\n  return events.every(event => {\n    if (testDateOverlap([event.start, event.end], [moment(new Date(start)), moment(moment(new Date(start)).add(duration, \"m\").toDate())])) {\n      console.log(\"rooms: \", parseInt(event.room), room);\n      return parseInt(event.room) !== parseInt(room);\n    }\n\n    return true;\n  });\n}\n\nfunction validateTeacher(events, teacher, start, duration) {\n  return events.every(event => {\n    if (testDateOverlap([event.start, event.end], [moment(new Date(start)), moment(moment(new Date(start)).add(duration, \"m\").toDate())])) {\n      console.log(\"teachers: \", parseInt(event.resourceId), teacher);\n      return parseInt(event.resourceId) !== parseInt(teacher);\n    }\n\n    return true;\n  });\n}\n\nfunction testDateOverlap(dateArr, testDateArr) {\n  if (testDateArr[0].isBetween(dateArr[0], dateArr[1], null, \"[]\") || testDateArr[1].isBetween(dateArr[0], dateArr[1], null, \"[]\")) {\n    return true;\n  }\n}\n\nexport { validateRoom, validateTeacher };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/src/validators.js"],"names":["moment","validateRoom","events","room","start","duration","every","event","testDateOverlap","end","Date","add","toDate","console","log","parseInt","validateTeacher","teacher","resourceId","dateArr","testDateArr","isBetween"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,QAA3C,EAAqD;AACnD,SAAOH,MAAM,CAACI,KAAP,CAAaC,KAAK,IAAI;AAC3B,QACEC,eAAe,CACb,CAACD,KAAK,CAACH,KAAP,EAAcG,KAAK,CAACE,GAApB,CADa,EAEb,CACET,MAAM,CAAC,IAAIU,IAAJ,CAASN,KAAT,CAAD,CADR,EAEEJ,MAAM,CACJA,MAAM,CAAC,IAAIU,IAAJ,CAASN,KAAT,CAAD,CAAN,CACGO,GADH,CACON,QADP,EACiB,GADjB,EAEGO,MAFH,EADI,CAFR,CAFa,CADjB,EAYE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,QAAQ,CAACR,KAAK,CAACJ,IAAP,CAA/B,EAA6CA,IAA7C;AACA,aAAOY,QAAQ,CAACR,KAAK,CAACJ,IAAP,CAAR,KAAyBY,QAAQ,CAACZ,IAAD,CAAxC;AACD;;AACD,WAAO,IAAP;AACD,GAlBM,CAAP;AAmBD;;AAED,SAASa,eAAT,CAAyBd,MAAzB,EAAiCe,OAAjC,EAA0Cb,KAA1C,EAAiDC,QAAjD,EAA2D;AACzD,SAAOH,MAAM,CAACI,KAAP,CAAaC,KAAK,IAAI;AAC3B,QACEC,eAAe,CACb,CAACD,KAAK,CAACH,KAAP,EAAcG,KAAK,CAACE,GAApB,CADa,EAEb,CACET,MAAM,CAAC,IAAIU,IAAJ,CAASN,KAAT,CAAD,CADR,EAEEJ,MAAM,CACJA,MAAM,CAAC,IAAIU,IAAJ,CAASN,KAAT,CAAD,CAAN,CACGO,GADH,CACON,QADP,EACiB,GADjB,EAEGO,MAFH,EADI,CAFR,CAFa,CADjB,EAYE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,QAAQ,CAACR,KAAK,CAACW,UAAP,CAAlC,EAAsDD,OAAtD;AACA,aAAOF,QAAQ,CAACR,KAAK,CAACW,UAAP,CAAR,KAA+BH,QAAQ,CAACE,OAAD,CAA9C;AACD;;AACD,WAAO,IAAP;AACD,GAlBM,CAAP;AAmBD;;AAED,SAAST,eAAT,CAAyBW,OAAzB,EAAkCC,WAAlC,EAA+C;AAC7C,MACEA,WAAW,CAAC,CAAD,CAAX,CAAeC,SAAf,CAAyBF,OAAO,CAAC,CAAD,CAAhC,EAAqCA,OAAO,CAAC,CAAD,CAA5C,EAAiD,IAAjD,EAAuD,IAAvD,KACAC,WAAW,CAAC,CAAD,CAAX,CAAeC,SAAf,CAAyBF,OAAO,CAAC,CAAD,CAAhC,EAAqCA,OAAO,CAAC,CAAD,CAA5C,EAAiD,IAAjD,EAAuD,IAAvD,CAFF,EAGE;AACA,WAAO,IAAP;AACD;AACF;;AAED,SAASlB,YAAT,EAAuBe,eAAvB","sourcesContent":["import moment from \"moment\";\n\nfunction validateRoom(events, room, start, duration) {\n  return events.every(event => {\n    if (\n      testDateOverlap(\n        [event.start, event.end],\n        [\n          moment(new Date(start)),\n          moment(\n            moment(new Date(start))\n              .add(duration, \"m\")\n              .toDate()\n          )\n        ]\n      )\n    ) {\n      console.log(\"rooms: \", parseInt(event.room), room);\n      return parseInt(event.room) !== parseInt(room);\n    }\n    return true;\n  });\n}\n\nfunction validateTeacher(events, teacher, start, duration) {\n  return events.every(event => {\n    if (\n      testDateOverlap(\n        [event.start, event.end],\n        [\n          moment(new Date(start)),\n          moment(\n            moment(new Date(start))\n              .add(duration, \"m\")\n              .toDate()\n          )\n        ]\n      )\n    ) {\n      console.log(\"teachers: \", parseInt(event.resourceId), teacher);\n      return parseInt(event.resourceId) !== parseInt(teacher);\n    }\n    return true;\n  });\n}\n\nfunction testDateOverlap(dateArr, testDateArr) {\n  if (\n    testDateArr[0].isBetween(dateArr[0], dateArr[1], null, \"[]\") ||\n    testDateArr[1].isBetween(dateArr[0], dateArr[1], null, \"[]\")\n  ) {\n    return true;\n  }\n}\n\nexport { validateRoom, validateTeacher };\n"]},"metadata":{},"sourceType":"module"}