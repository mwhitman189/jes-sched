{"ast":null,"code":"import moment from \"moment\";\n\nfunction validateRoom(events, room, startTime, duration, newEvent) {\n  return events.every(event => {\n    if (testDateOverlap([event.start, event.end], [moment(new Date(startTime)), moment(moment(new Date(startTime)).add(duration, \"m\").toDate())])) {\n      return parseInt(event.room) !== parseInt(room);\n    }\n\n    return true;\n  });\n}\n\nfunction validateTeacher(events, teacher, startTime, duration) {\n  return events.every(event => {\n    if (testDateOverlap([event.start, event.end], [moment(new Date(startTime)), moment(moment(new Date(startTime)).add(duration, \"m\").toDate())])) {\n      console.log(event.resourceId, teacher);\n      return parseInt(event.resourceId) !== parseInt(teacher);\n    }\n\n    return true;\n  });\n}\n\nfunction testDateOverlap(dateArr, testDateArr) {\n  if (testDateArr[0].isBetween(dateArr[0], dateArr[1]) || testDateArr[1].isBetween(dateArr[0], dateArr[1])) {\n    return true;\n  }\n}\n\nexport { validateRoom, validateTeacher };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/src/validators.js"],"names":["moment","validateRoom","events","room","startTime","duration","newEvent","every","event","testDateOverlap","start","end","Date","add","toDate","parseInt","validateTeacher","teacher","console","log","resourceId","dateArr","testDateArr","isBetween"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,SAApC,EAA+CC,QAA/C,EAAyDC,QAAzD,EAAmE;AACjE,SAAOJ,MAAM,CAACK,KAAP,CAAaC,KAAK,IAAI;AAC3B,QACEC,eAAe,CACb,CAACD,KAAK,CAACE,KAAP,EAAcF,KAAK,CAACG,GAApB,CADa,EAEb,CACEX,MAAM,CAAC,IAAIY,IAAJ,CAASR,SAAT,CAAD,CADR,EAEEJ,MAAM,CACJA,MAAM,CAAC,IAAIY,IAAJ,CAASR,SAAT,CAAD,CAAN,CACGS,GADH,CACOR,QADP,EACiB,GADjB,EAEGS,MAFH,EADI,CAFR,CAFa,CADjB,EAYE;AACA,aAAOC,QAAQ,CAACP,KAAK,CAACL,IAAP,CAAR,KAAyBY,QAAQ,CAACZ,IAAD,CAAxC;AACD;;AACD,WAAO,IAAP;AACD,GAjBM,CAAP;AAkBD;;AAED,SAASa,eAAT,CAAyBd,MAAzB,EAAiCe,OAAjC,EAA0Cb,SAA1C,EAAqDC,QAArD,EAA+D;AAC7D,SAAOH,MAAM,CAACK,KAAP,CAAaC,KAAK,IAAI;AAC3B,QACEC,eAAe,CACb,CAACD,KAAK,CAACE,KAAP,EAAcF,KAAK,CAACG,GAApB,CADa,EAEb,CACEX,MAAM,CAAC,IAAIY,IAAJ,CAASR,SAAT,CAAD,CADR,EAEEJ,MAAM,CACJA,MAAM,CAAC,IAAIY,IAAJ,CAASR,SAAT,CAAD,CAAN,CACGS,GADH,CACOR,QADP,EACiB,GADjB,EAEGS,MAFH,EADI,CAFR,CAFa,CADjB,EAYE;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,UAAlB,EAA8BH,OAA9B;AACA,aAAOF,QAAQ,CAACP,KAAK,CAACY,UAAP,CAAR,KAA+BL,QAAQ,CAACE,OAAD,CAA9C;AACD;;AACD,WAAO,IAAP;AACD,GAlBM,CAAP;AAmBD;;AAED,SAASR,eAAT,CAAyBY,OAAzB,EAAkCC,WAAlC,EAA+C;AAC7C,MACEA,WAAW,CAAC,CAAD,CAAX,CAAeC,SAAf,CAAyBF,OAAO,CAAC,CAAD,CAAhC,EAAqCA,OAAO,CAAC,CAAD,CAA5C,KACAC,WAAW,CAAC,CAAD,CAAX,CAAeC,SAAf,CAAyBF,OAAO,CAAC,CAAD,CAAhC,EAAqCA,OAAO,CAAC,CAAD,CAA5C,CAFF,EAGE;AACA,WAAO,IAAP;AACD;AACF;;AAED,SAASpB,YAAT,EAAuBe,eAAvB","sourcesContent":["import moment from \"moment\";\n\nfunction validateRoom(events, room, startTime, duration, newEvent) {\n  return events.every(event => {\n    if (\n      testDateOverlap(\n        [event.start, event.end],\n        [\n          moment(new Date(startTime)),\n          moment(\n            moment(new Date(startTime))\n              .add(duration, \"m\")\n              .toDate()\n          )\n        ]\n      )\n    ) {\n      return parseInt(event.room) !== parseInt(room);\n    }\n    return true;\n  });\n}\n\nfunction validateTeacher(events, teacher, startTime, duration) {\n  return events.every(event => {\n    if (\n      testDateOverlap(\n        [event.start, event.end],\n        [\n          moment(new Date(startTime)),\n          moment(\n            moment(new Date(startTime))\n              .add(duration, \"m\")\n              .toDate()\n          )\n        ]\n      )\n    ) {\n      console.log(event.resourceId, teacher);\n      return parseInt(event.resourceId) !== parseInt(teacher);\n    }\n    return true;\n  });\n}\n\nfunction testDateOverlap(dateArr, testDateArr) {\n  if (\n    testDateArr[0].isBetween(dateArr[0], dateArr[1]) ||\n    testDateArr[1].isBetween(dateArr[0], dateArr[1])\n  ) {\n    return true;\n  }\n}\n\nexport { validateRoom, validateTeacher };\n"]},"metadata":{},"sourceType":"module"}