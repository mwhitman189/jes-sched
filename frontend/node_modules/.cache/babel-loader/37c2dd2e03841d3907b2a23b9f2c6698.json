{"ast":null,"code":"import _defineProperty from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/src/components/Schedule.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport { WorkWeek } from \"./CustomView\";\nimport useToggle from \"../hooks/useToggle\";\nimport useFormState from \"../hooks/useFormState\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport roomList from \"../rooms\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Schedule = props => {\n  const classes = useStyles();\n\n  const _useState = useState(eventsList),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const _useState3 = useState(teachersList),\n        _useState4 = _slicedToArray(_useState3, 2),\n        teacherList = _useState4[0],\n        setTeacherList = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        didChange = _useState6[0],\n        setDidChange = _useState6[1];\n\n  const _useToggle = useToggle(true),\n        _useToggle2 = _slicedToArray(_useToggle, 2),\n        isOpen = _useToggle2[0],\n        toggleIsOpen = _useToggle2[1];\n\n  const _useFormState = useFormState(\"\"),\n        _useFormState2 = _slicedToArray(_useFormState, 3),\n        title = _useFormState2[0],\n        handleTitleChange = _useFormState2[1],\n        titleReset = _useFormState2[2];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        startTime = _useState8[0],\n        setStartTime = _useState8[1];\n\n  const _useFormState3 = useFormState(\"\"),\n        _useFormState4 = _slicedToArray(_useFormState3, 3),\n        duration = _useFormState4[0],\n        handleDurationChange = _useFormState4[1],\n        durationReset = _useFormState4[2];\n\n  const _useFormState5 = useFormState(\"\"),\n        _useFormState6 = _slicedToArray(_useFormState5, 3),\n        resource = _useFormState6[0],\n        handleResourceChange = _useFormState6[1],\n        resourceReset = _useFormState6[2];\n\n  const _useFormState7 = useFormState(\"\"),\n        _useFormState8 = _slicedToArray(_useFormState7, 3),\n        room = _useFormState8[0],\n        handleRoomChange = _useFormState8[1],\n        roomReset = _useFormState8[2];\n\n  useEffect(() => {\n    toggleIsOpen();\n    durationReset();\n    titleReset();\n    resourceReset();\n    roomReset();\n    addTeachingMins();\n  }, [events]);\n  useEffect(() => {\n    addTeachingMins();\n    setDidChange(false);\n  }, [didChange]); // Limit displayed hours of the day\n\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n\n  const addTeachingMins = () => {\n    teacherList.forEach(teacher => {\n      return teacher.teachingMins = 0;\n    });\n    events.forEach(e => {\n      const index = teacherList.findIndex(teacher => teacher.resourceId === e.resourceId); // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n\n      teacherList[index].teachingMins += parseInt(e.duration);\n      setTeacherList([...teacherList]);\n      teacherList[index].resourceTitle = \"\".concat(teacherList[index].name, \" \").concat(teacherList[index].teachingMins);\n    });\n  };\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    const idx = events.indexOf(event);\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end,\n      allDay\n    });\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n    setEvents(nextEvents); // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const handleUpdate = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end,\n      isAllDay: droppedOnAllDaySlot\n    });\n    setDidChange(true);\n  };\n\n  const handleSelect = ({\n    start\n  }) => {\n    toggleIsOpen();\n    setStartTime(start);\n  };\n\n  const addEvent = () => {\n    setEvents([...events, {\n      title: title,\n      start: startTime,\n      end: moment(startTime).add(duration, \"m\").toDate(),\n      duration: duration,\n      resourceId: parseInt(resource)\n    }]);\n  };\n\n  const newEventForm = React.createElement(Dialog, {\n    open: isOpen,\n    onClose: toggleIsOpen,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Subscribe\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Please enter the start time and class duration\"), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"title\",\n    label: \"Class Name\",\n    type: \"text\",\n    value: title,\n    onChange: handleTitleChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"duration\",\n    label: \"Class Duration\",\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    value: duration,\n    onChange: handleDurationChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"resource\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Teacher\"), React.createElement(Select, {\n    native: true,\n    id: \"resource\",\n    value: resource,\n    onChange: handleResourceChange,\n    name: \"resource\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }), teacherList.map(t => React.createElement(\"option\", {\n    key: \"teacher-\".concat(t),\n    value: t,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, t)))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"room\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Room #\"), React.createElement(Select, {\n    native: true,\n    id: \"room\",\n    value: room,\n    onChange: handleRoomChange,\n    name: \"room\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), roomList.map(r => React.createElement(\"option\", {\n    key: r.number,\n    value: r.number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, r.number))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggleIsOpen,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: addEvent,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"Add Class\")));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, isOpen && newEventForm, React.createElement(DragAndDropCalendar, {\n    style: {\n      width: \"95vw\",\n      maxHeight: \"100%\"\n    },\n    localizer: localizer,\n    views: {\n      week: WorkWeek,\n      day: true\n    },\n    defaultView: \"day\",\n    events: events,\n    onEventDrop: handleUpdate,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    resources: teacherList,\n    resourceIdAccessor: \"resourceId\",\n    resourceTitleAccessor: \"resourceTitle\",\n    selectable: true // eventPropGetter={eventStyleGetter}\n    ,\n    step: 30,\n    timeslots: 2,\n    min: minTime,\n    max: maxTime,\n    onSelectSlot: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/src/components/Schedule.js"],"names":["React","useState","useEffect","Calendar","momentLocalizer","withDragAndDrop","moment","WorkWeek","useToggle","useFormState","eventsList","teachersList","roomList","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","makeStyles","InputLabel","FormHelperText","FormControl","Select","NativeSelect","localizer","DragAndDropCalendar","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Schedule","props","classes","events","setEvents","teacherList","setTeacherList","didChange","setDidChange","isOpen","toggleIsOpen","title","handleTitleChange","titleReset","startTime","setStartTime","duration","handleDurationChange","durationReset","resource","handleResourceChange","resourceReset","room","handleRoomChange","roomReset","addTeachingMins","minTime","Date","setHours","maxTime","forEach","teacher","teachingMins","e","index","findIndex","resourceId","parseInt","resourceTitle","name","moveEvent","event","start","end","isAllDay","droppedOnAllDaySlot","idx","indexOf","allDay","updatedEvent","nextEvents","splice","handleUpdate","handleSelect","addEvent","add","toDate","newEventForm","map","t","r","number","width","maxHeight","week","day"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport { WorkWeek } from \"./CustomView\";\nimport useToggle from \"../hooks/useToggle\";\nimport useFormState from \"../hooks/useFormState\";\nimport eventsList from \"../events\";\nimport teachersList from \"../teachers\";\nimport roomList from \"../rooms\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\n\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Schedule = props => {\n  const classes = useStyles();\n  const [events, setEvents] = useState(eventsList);\n  const [teacherList, setTeacherList] = useState(teachersList);\n  const [didChange, setDidChange] = useState(false);\n  const [isOpen, toggleIsOpen] = useToggle(true);\n  const [title, handleTitleChange, titleReset] = useFormState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [duration, handleDurationChange, durationReset] = useFormState(\"\");\n  const [resource, handleResourceChange, resourceReset] = useFormState(\"\");\n  const [room, handleRoomChange, roomReset] = useFormState(\"\");\n\n  useEffect(() => {\n    toggleIsOpen();\n    durationReset();\n    titleReset();\n    resourceReset();\n    roomReset();\n    addTeachingMins();\n  }, [events]);\n\n  useEffect(() => {\n    addTeachingMins();\n    setDidChange(false);\n  }, [didChange]);\n\n  // Limit displayed hours of the day\n  const minTime = new Date();\n  minTime.setHours(9, 0, 0);\n  const maxTime = new Date();\n  maxTime.setHours(21, 0, 0);\n\n  const addTeachingMins = () => {\n    teacherList.forEach(teacher => {\n      return (teacher.teachingMins = 0);\n    });\n    events.forEach(e => {\n      const index = teacherList.findIndex(\n        teacher => teacher.resourceId === e.resourceId\n      );\n      // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n      teacherList[index].teachingMins += parseInt(e.duration);\n      setTeacherList([...teacherList]);\n      teacherList[\n        index\n      ].resourceTitle = `${teacherList[index].name} ${teacherList[index].teachingMins}`;\n    });\n  };\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    const idx = events.indexOf(event);\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const updatedEvent = { ...event, resourceId, start, end, allDay };\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n\n    setEvents(nextEvents);\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  };\n\n  const handleUpdate = ({\n    event,\n    resourceId,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) => {\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end,\n      isAllDay: droppedOnAllDaySlot\n    });\n    setDidChange(true);\n  };\n\n  const handleSelect = ({ start }) => {\n    toggleIsOpen();\n    setStartTime(start);\n  };\n\n  const addEvent = () => {\n    setEvents([\n      ...events,\n      {\n        title: title,\n        start: startTime,\n        end: moment(startTime)\n          .add(duration, \"m\")\n          .toDate(),\n        duration: duration,\n        resourceId: parseInt(resource)\n      }\n    ]);\n  };\n\n  const newEventForm = (\n    <Dialog\n      open={isOpen}\n      onClose={toggleIsOpen}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please enter the start time and class duration\n        </DialogContentText>\n        <FormControl className={classes.formControl}>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Class Name\"\n            type=\"text\"\n            value={title}\n            onChange={handleTitleChange}\n            fullWidth\n            required\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            margin=\"dense\"\n            id=\"duration\"\n            label=\"Class Duration\"\n            type=\"text\"\n            pattern=\"[0-9]*\"\n            value={duration}\n            onChange={handleDurationChange}\n            fullWidth\n            required\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"resource\">Teacher</InputLabel>\n          <Select\n            native\n            id=\"resource\"\n            value={resource}\n            onChange={handleResourceChange}\n            name=\"resource\"\n            required\n          >\n            <option value=\"\" />\n            {teacherList.map(t => (\n              <option key={`teacher-${t}`} value={t}>\n                {t}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"room\">Room #</InputLabel>\n          <Select\n            native\n            id=\"room\"\n            value={room}\n            onChange={handleRoomChange}\n            name=\"room\"\n            required\n          >\n            <option value=\"\" />\n            {roomList.map(r => (\n              <option key={r.number} value={r.number}>\n                {r.number}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={toggleIsOpen} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={addEvent} color=\"primary\">\n          Add Class\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return (\n    <div>\n      {isOpen && newEventForm}\n      <DragAndDropCalendar\n        style={{ width: \"95vw\", maxHeight: \"100%\" }}\n        localizer={localizer}\n        views={{ week: WorkWeek, day: true }}\n        defaultView=\"day\"\n        events={events}\n        onEventDrop={handleUpdate}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        resources={teacherList}\n        resourceIdAccessor=\"resourceId\"\n        resourceTitleAccessor=\"resourceTitle\"\n        selectable\n        // eventPropGetter={eventStyleGetter}\n        step={30}\n        timeslots={2}\n        min={minTime}\n        max={maxTime}\n        onSelectSlot={handleSelect}\n      />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}