{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/frontend/src/components/TeacherForm.js\";\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport useInputState from \"../hooks/useInputState\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const formType = props.formType,\n        setFormType = props.setFormType,\n        addTeacher = props.addTeacher,\n        teachers = props.teachers;\n\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 2),\n        givenName = _useInputState2[0],\n        updateGivenName = _useInputState2[1];\n\n  const _useInputState3 = useInputState(\"\"),\n        _useInputState4 = _slicedToArray(_useInputState3, 2),\n        familyName = _useInputState4[0],\n        updateFamilyName = _useInputState4[1];\n\n  const _useInputState5 = useInputState(\"\"),\n        _useInputState6 = _slicedToArray(_useInputState5, 2),\n        otThreshold = _useInputState6[0],\n        updateOtThreshold = _useInputState6[1];\n\n  const _useInputState7 = useInputState(\"\"),\n        _useInputState8 = _slicedToArray(_useInputState7, 2),\n        contractType = _useInputState8[0],\n        updateContractType = _useInputState8[1];\n\n  const _useInputState9 = useInputState(\"\"),\n        _useInputState10 = _slicedToArray(_useInputState9, 2),\n        dependentsNum = _useInputState10[0],\n        updateDependentsNum = _useInputState10[1];\n\n  const handleAddTeacher = e => {\n    e.preventDefault();\n    let bigResourceId = 1;\n\n    if (teachers) {\n      teachers.forEach(t => {\n        if (t.resourceId > bigResourceId) {\n          bigResourceId = t.resourceId + 1;\n        } else {\n          bigResourceId++;\n        }\n      });\n    }\n\n    addTeacher({\n      resourceId: bigResourceId,\n      resourceTitle: `${givenName} 0`,\n      name: givenName,\n      familyName: familyName,\n      teachingMins: 0,\n      otThreshold: parseInt(otThreshold),\n      contractType: contractType,\n      dependentsNum: dependentsNum\n    });\n  };\n\n  const hideForm = () => setFormType(\"\");\n\n  return React.createElement(Dialog, {\n    open: formType === \"teacher\",\n    onClose: hideForm,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(ValidatorForm, {\n    onSubmit: handleAddTeacher,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"New Lesson\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Enter Lesson Info\"), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"givenName\",\n    label: \"Given Name\",\n    type: \"text\",\n    value: givenName,\n    onChange: updateGivenName,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Given Name\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"lastName\",\n    label: \"Family Name\",\n    type: \"text\",\n    value: familyName,\n    onChange: updateFamilyName,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Last Name\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"contractType\",\n    label: \"Contract Type\",\n    type: \"text\",\n    value: contractType,\n    onChange: updateContractType,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"otThreshold\",\n    label: \"Overtime threshold (hours)\",\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    value: otThreshold,\n    onChange: updateOtThreshold,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"dependentsNum\",\n    label: \"Number of dependents\",\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    value: dependentsNum,\n    onChange: updateDependentsNum,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: hideForm,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Add Teacher\"))));\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/frontend/src/components/TeacherForm.js"],"names":["React","ValidatorForm","TextValidator","useInputState","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","EventForm","props","classes","formType","setFormType","addTeacher","teachers","givenName","updateGivenName","familyName","updateFamilyName","otThreshold","updateOtThreshold","contractType","updateContractType","dependentsNum","updateDependentsNum","handleAddTeacher","e","preventDefault","bigResourceId","forEach","t","resourceId","resourceTitle","name","teachingMins","parseInt","hideForm"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AAEA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAACS,KAAK,KAAK;AACrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GADwB;AAKrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AADA;AALwB,CAAL,CAAN,CAA5B;AAUA,eAAe,SAASI,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AADuC,QAE/BW,QAF+B,GAEiBF,KAFjB,CAE/BE,QAF+B;AAAA,QAErBC,WAFqB,GAEiBH,KAFjB,CAErBG,WAFqB;AAAA,QAERC,UAFQ,GAEiBJ,KAFjB,CAERI,UAFQ;AAAA,QAEIC,QAFJ,GAEiBL,KAFjB,CAEIK,QAFJ;;AAAA,yBAIFvB,aAAa,CAAC,EAAD,CAJX;AAAA;AAAA,QAIhCwB,SAJgC;AAAA,QAIrBC,eAJqB;;AAAA,0BAKAzB,aAAa,CAAC,EAAD,CALb;AAAA;AAAA,QAKhC0B,UALgC;AAAA,QAKpBC,gBALoB;;AAAA,0BAME3B,aAAa,CAAC,EAAD,CANf;AAAA;AAAA,QAMhC4B,WANgC;AAAA,QAMnBC,iBANmB;;AAAA,0BAOI7B,aAAa,CAAC,EAAD,CAPjB;AAAA;AAAA,QAOhC8B,YAPgC;AAAA,QAOlBC,kBAPkB;;AAAA,0BAQM/B,aAAa,CAAC,EAAD,CARnB;AAAA;AAAA,QAQhCgC,aARgC;AAAA,QAQjBC,mBARiB;;AAUvC,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,aAAa,GAAG,CAApB;;AACA,QAAId,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACe,OAAT,CAAiBC,CAAC,IAAI;AACpB,YAAIA,CAAC,CAACC,UAAF,GAAeH,aAAnB,EAAkC;AAChCA,UAAAA,aAAa,GAAGE,CAAC,CAACC,UAAF,GAAe,CAA/B;AACD,SAFD,MAEO;AACLH,UAAAA,aAAa;AACd;AACF,OAND;AAOD;;AAEDf,IAAAA,UAAU,CAAC;AACTkB,MAAAA,UAAU,EAAEH,aADH;AAETI,MAAAA,aAAa,EAAG,GAAEjB,SAAU,IAFnB;AAGTkB,MAAAA,IAAI,EAAElB,SAHG;AAITE,MAAAA,UAAU,EAAEA,UAJH;AAKTiB,MAAAA,YAAY,EAAE,CALL;AAMTf,MAAAA,WAAW,EAAEgB,QAAQ,CAAChB,WAAD,CANZ;AAOTE,MAAAA,YAAY,EAAEA,YAPL;AAQTE,MAAAA,aAAa,EAAEA;AARN,KAAD,CAAV;AAUD,GAvBD;;AAyBA,QAAMa,QAAQ,GAAG,MAAMxB,WAAW,CAAC,EAAD,CAAlC;;AAEA,SACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAED,QAAQ,KAAK,SADrB;AAEE,IAAA,OAAO,EAAEyB,QAFX;AAGE,uBAAgB,mBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEX,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEf,OAAO,CAACR,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,EAAE,EAAC,WAHL;AAIE,IAAA,KAAK,EAAC,YAJR;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,KAAK,EAAEa,SANT;AAOE,IAAA,QAAQ,EAAEC,eAPZ;AAQE,IAAA,SAAS,MARX;AASE,IAAA,UAAU,EAAE,CAAC,UAAD,CATd;AAUE,IAAA,aAAa,EAAE,CAAC,sBAAD,CAVjB;AAWE,IAAA,QAAQ,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAiBE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEN,OAAO,CAACR,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAEe,UALT;AAME,IAAA,QAAQ,EAAEC,gBANZ;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,UAAU,EAAE,CAAC,UAAD,CARd;AASE,IAAA,aAAa,EAAE,CAAC,qBAAD,CATjB;AAUE,IAAA,QAAQ,MAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,EA+BE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAER,OAAO,CAACR,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,EAAE,EAAC,cAFL;AAGE,IAAA,KAAK,EAAC,eAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAEmB,YALT;AAME,IAAA,QAAQ,EAAEC,kBANZ;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/BF,EA2CE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEZ,OAAO,CAACR,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,KAAK,EAAC,4BAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,OAAO,EAAC,QALV;AAME,IAAA,KAAK,EAAEiB,WANT;AAOE,IAAA,QAAQ,EAAEC,iBAPZ;AAQE,IAAA,SAAS,MARX;AASE,IAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3CF,EAwDE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEV,OAAO,CAACR,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,KAAK,EAAC,sBAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,OAAO,EAAC,QALV;AAME,IAAA,KAAK,EAAEqB,aANT;AAOE,IAAA,QAAQ,EAAEC,mBAPZ;AAQE,IAAA,SAAS,MARX;AASE,IAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxDF,CAFF,EAwEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEY,QAAjB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CAxEF,CALF,CADF;AAyFD","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nimport useInputState from \"../hooks/useInputState\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const { formType, setFormType, addTeacher, teachers } = props;\n\n  const [givenName, updateGivenName] = useInputState(\"\");\n  const [familyName, updateFamilyName] = useInputState(\"\");\n  const [otThreshold, updateOtThreshold] = useInputState(\"\");\n  const [contractType, updateContractType] = useInputState(\"\");\n  const [dependentsNum, updateDependentsNum] = useInputState(\"\");\n\n  const handleAddTeacher = e => {\n    e.preventDefault();\n    let bigResourceId = 1;\n    if (teachers) {\n      teachers.forEach(t => {\n        if (t.resourceId > bigResourceId) {\n          bigResourceId = t.resourceId + 1;\n        } else {\n          bigResourceId++;\n        }\n      });\n    }\n\n    addTeacher({\n      resourceId: bigResourceId,\n      resourceTitle: `${givenName} 0`,\n      name: givenName,\n      familyName: familyName,\n      teachingMins: 0,\n      otThreshold: parseInt(otThreshold),\n      contractType: contractType,\n      dependentsNum: dependentsNum\n    });\n  };\n\n  const hideForm = () => setFormType(\"\");\n\n  return (\n    <Dialog\n      open={formType === \"teacher\"}\n      onClose={hideForm}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <ValidatorForm onSubmit={handleAddTeacher}>\n        <DialogTitle id=\"form-dialog-title\">New Lesson</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter Lesson Info</DialogContentText>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"givenName\"\n              label=\"Given Name\"\n              type=\"text\"\n              value={givenName}\n              onChange={updateGivenName}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Given Name\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"lastName\"\n              label=\"Family Name\"\n              type=\"text\"\n              value={familyName}\n              onChange={updateFamilyName}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Last Name\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"contractType\"\n              label=\"Contract Type\"\n              type=\"text\"\n              value={contractType}\n              onChange={updateContractType}\n              fullWidth\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"otThreshold\"\n              label=\"Overtime threshold (hours)\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              value={otThreshold}\n              onChange={updateOtThreshold}\n              fullWidth\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"dependentsNum\"\n              label=\"Number of dependents\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              value={dependentsNum}\n              onChange={updateDependentsNum}\n              fullWidth\n              required\n            />\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={hideForm} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            Add Teacher\n          </Button>\n        </DialogActions>\n      </ValidatorForm>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}