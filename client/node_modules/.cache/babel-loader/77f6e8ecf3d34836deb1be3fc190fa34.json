{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/Schedule.js\";\nimport React, { useState, useEffect, useLayoutEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport EventForm from \"./EventForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport useFormState from \"../hooks/useInputState\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\nimport reducer from \"../reducers/teachersReducer\";\n\nconst Schedule = () => {\n  const _useContext = useContext(TeachersContext),\n        dispatch = _useContext.dispatch; // const {\n  //   teachers,\n  //   setTeachers,\n  //   getTeachers,\n  //   addTeacher,\n  //   addTeachingMins\n  // } = useContext(TeachersContext);\n\n\n  const _useContext2 = useContext(EventsContext),\n        events = _useContext2.events,\n        addEvent = _useContext2.addEvent,\n        getEvents = _useContext2.getEvents;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        formType = _useState2[0],\n        setFormType = _useState2[1];\n\n  const _useFormState = useFormState(new Date()),\n        _useFormState2 = _slicedToArray(_useFormState, 3),\n        startTime = _useFormState2[0],\n        updateStartTime = _useFormState2[1],\n        resetStartTime = _useFormState2[2];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedEvent = _useState4[0],\n        setSelectedEvent = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isOpen = _useState6[0],\n        setIsOpen = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedTeacher = _useState10[0],\n        setSelectedTeacher = _useState10[1];\n\n  useEffect(() => {\n    // Pass current dateTime to compare to recurrence events to check if a new batch of recurrences\n    // is needed\n    getEvents(new Date().getTime());\n    const testArr = dispatch({\n      type: \"GET_TEACHERS\"\n    });\n    console.log(testArr); // getTeachers(events);\n  }, []);\n  useEffect(() => {\n    dispatch({\n      type: \"CALC_TEACHING_MINS\"\n    }); // addTeachingMins(events);\n  }, [events]);\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end\n    });\n\n    handleDoubleClick(updatedEvent);\n  };\n\n  const validateRoomAndResource = (event, resourceId, start) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (!validateRoom(otherEvents, event.room, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return 1;\n    }\n\n    if (!validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Teacher Conflict. Please choose another teacher or time\");\n      return 1;\n    }\n\n    return 0;\n  }; // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n\n\n  const handleMove = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    if (validateRoomAndResource(event, resourceId, start) === 0) {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end\n      });\n      return 0;\n    }\n\n    return 1;\n  };\n\n  const handleAddEvent = newEvent => {\n    addEvent(newEvent);\n    setFormType(\"\");\n  };\n\n  const handleSelect = ({\n    start,\n    resourceId\n  }) => {\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n  };\n\n  const handleDoubleClick = event => {\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n  };\n\n  const handleAddTeacher = newTeacher => {\n    dispatch({\n      type: \"ADD_TEACHER\",\n      newTeacher\n    }); // addTeacher(teachers, newTeacher, setTeachers);\n\n    setFormType(\"\");\n  };\n\n  const handleBtnClick = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleToggleSnackbar = msg => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollBtnClick = () => {\n    setFormType(\"payroll\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, formType === \"event\" && React.createElement(EventForm, {\n    formType: formType,\n    setFormType: setFormType,\n    addEvent: handleAddEvent,\n    startTime: startTime,\n    updateStartTime: updateStartTime,\n    event: selectedEvent,\n    setSelectedEvent: setSelectedEvent,\n    selectedTeacher: selectedTeacher,\n    validateRoomAndResource: validateRoomAndResource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), formType === \"teacher\" && React.createElement(TeacherForm, {\n    formType: formType,\n    setFormType: setFormType,\n    addTeacher: handleAddTeacher,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), formType === \"payroll\" && React.createElement(Payroll, {\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(CustomizedSnackbars, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    variant: \"error\",\n    msg: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(CustomDnDCalendar, {\n    handleMove: handleMove,\n    handleSelect: handleSelect,\n    handleDoubleClick: handleDoubleClick,\n    handleBtnClick: handleBtnClick,\n    handlePayrollBtnClick: handlePayrollBtnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/Schedule.js"],"names":["React","useState","useEffect","useLayoutEffect","useContext","CustomDnDCalendar","EventForm","TeacherForm","CustomizedSnackbars","Payroll","useFormState","TeachersContext","validateRoom","validateTeacher","EventsContext","reducer","Schedule","dispatch","events","addEvent","getEvents","formType","setFormType","Date","startTime","updateStartTime","resetStartTime","selectedEvent","setSelectedEvent","isOpen","setIsOpen","message","setMessage","selectedTeacher","setSelectedTeacher","getTime","testArr","type","console","log","moveEvent","event","resourceId","start","end","updatedEvent","handleDoubleClick","validateRoomAndResource","idx","indexOf","otherEvents","slice","room","parseInt","duration","handleToggleSnackbar","handleMove","handleAddEvent","newEvent","handleSelect","handleAddTeacher","newTeacher","handleBtnClick","msg","handlePayrollBtnClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport EventForm from \"./EventForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport useFormState from \"../hooks/useInputState\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\nimport reducer from \"../reducers/teachersReducer\";\n\nconst Schedule = () => {\n  const { dispatch } = useContext(TeachersContext);\n  // const {\n  //   teachers,\n  //   setTeachers,\n  //   getTeachers,\n  //   addTeacher,\n  //   addTeachingMins\n  // } = useContext(TeachersContext);\n  const { events, addEvent, getEvents } = useContext(EventsContext);\n\n  const [formType, setFormType] = useState(\"\");\n  const [startTime, updateStartTime, resetStartTime] = useFormState(new Date());\n  const [selectedEvent, setSelectedEvent] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [selectedTeacher, setSelectedTeacher] = useState(\"\");\n\n  useEffect(() => {\n    // Pass current dateTime to compare to recurrence events to check if a new batch of recurrences\n    // is needed\n    getEvents(new Date().getTime());\n    const testArr = dispatch({ type: \"GET_TEACHERS\" });\n    console.log(testArr);\n    // getTeachers(events);\n  }, []);\n\n  useEffect(() => {\n    dispatch({ type: \"CALC_TEACHING_MINS\" });\n    // addTeachingMins(events);\n  }, [events]);\n\n  const moveEvent = ({ event, resourceId, start, end }) => {\n    const updatedEvent = { ...event, resourceId, start, end };\n    handleDoubleClick(updatedEvent);\n  };\n\n  const validateRoomAndResource = (event, resourceId, start) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n    if (\n      !validateRoom(otherEvents, event.room, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return 1;\n    }\n    if (\n      !validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\n        \"Teacher Conflict. Please choose another teacher or time\"\n      );\n      return 1;\n    }\n    return 0;\n  };\n\n  // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n  const handleMove = ({ event, resourceId, start, end }) => {\n    if (validateRoomAndResource(event, resourceId, start) === 0) {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end\n      });\n      return 0;\n    }\n    return 1;\n  };\n\n  const handleAddEvent = newEvent => {\n    addEvent(newEvent);\n    setFormType(\"\");\n  };\n\n  const handleSelect = ({ start, resourceId }) => {\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n  };\n\n  const handleDoubleClick = event => {\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n  };\n\n  const handleAddTeacher = newTeacher => {\n    dispatch({ type: \"ADD_TEACHER\", newTeacher });\n    // addTeacher(teachers, newTeacher, setTeachers);\n    setFormType(\"\");\n  };\n\n  const handleBtnClick = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleToggleSnackbar = msg => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollBtnClick = () => {\n    setFormType(\"payroll\");\n  };\n\n  return (\n    <div>\n      {formType === \"event\" && (\n        <EventForm\n          formType={formType}\n          setFormType={setFormType}\n          addEvent={handleAddEvent}\n          startTime={startTime}\n          updateStartTime={updateStartTime}\n          event={selectedEvent}\n          setSelectedEvent={setSelectedEvent}\n          selectedTeacher={selectedTeacher}\n          validateRoomAndResource={validateRoomAndResource}\n        />\n      )}\n      {formType === \"teacher\" && (\n        <TeacherForm\n          formType={formType}\n          setFormType={setFormType}\n          addTeacher={handleAddTeacher}\n        />\n      )}\n      {formType === \"payroll\" && <Payroll setFormType={setFormType} />}\n      <CustomizedSnackbars\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        variant={\"error\"}\n        msg={message}\n      />\n      <CustomDnDCalendar\n        handleMove={handleMove}\n        handleSelect={handleSelect}\n        handleDoubleClick={handleDoubleClick}\n        handleBtnClick={handleBtnClick}\n        handlePayrollBtnClick={handlePayrollBtnClick}\n      />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}