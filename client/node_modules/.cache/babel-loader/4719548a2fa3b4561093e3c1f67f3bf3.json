{"ast":null,"code":"// import axios from \"axios\";\n// import { createPayPeriodData } from \"../helperFunctions\";\n// import { tokenConfig } from \"../reducers/loadUserReducer\";\n// import uuid from \"uuid/v4\";\n// const updateTeacher = async (state, teacher) => {\n//   await axios\n//     .put(`/api/teachers/update/${teacher._id}`, teacher)\n//     .then((res) => console.log(res.data))\n//     .catch((err) => console.log(err));\n//   return state.map((t) =>\n//     t.id === teacher.id\n//       ? {\n//           ...t,\n//           resourceTitle: teacher.resourceTitle,\n//           name: teacher.name,\n//           familyName: teacher.familyName,\n//           teachingMins: teacher.teachingMins,\n//           holidayMins: teacher.holidayMins,\n//           outsideDutyMins: teacher.outsideDutyMins,\n//           otThreshold: teacher.otThreshold,\n//           overThresholdOneMins: teacher.overThresholdOneMins,\n//           overThresholdTwoMins: teacher.overThresholdTwoMins,\n//         }\n//       : t\n//   );\n// };\n// const addTeachingMins = (teachers, events) => {\n//   const now = new Date();\n//   // Create start and end dates for the current month to calc\n//   // teaching minutes\n//   const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n//   const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n//   if (teachers.length > 0) {\n//     // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n//     teachers.forEach((teacher) => {\n//       teacher.teachingMins = 0;\n//       teacher.outsideDutyMins = 0;\n//       teacher.holidayMins = 0;\n//       teacher.overThresholdOneMins = 0;\n//       teacher.overThresholdTwoMins = 0;\n//     });\n//     teachers.forEach((teacher) => {\n//       createPayPeriodData(events, teacher, monthStart, monthEnd);\n//       updateTeacher(teacher);\n//     });\n//   }\n// };\n// const teachersReducer = async (state, action) => {\n//   switch (action.type) {\n//     case \"GET_TEACHERS\":\n//       let teachersArr;\n//       await axios\n//         .get(\"/api/teachers\", tokenConfig(action.user))\n//         .then((res) => {\n//           teachersArr = res.data;\n//         })\n//         .catch((err) => console.log(err));\n//       return [...state, teachersArr];\n//     case \"ADD_TEACHER\":\n//       const teacher = action.teacher && action.teacher;\n//       if (action.teacher) {\n//       }\n//       await axios\n//         .post(\"/api/teachers/add\", action.teacher, tokenConfig(action.user))\n//         .then((res) => console.log(res.data))\n//         .catch((err) => console.log(err));\n//       return [...state, { id: uuid(), teacher }];\n//     case \"DELETE_TEACHER\":\n//       await axios\n//         .delete(`/api/teachers/delete/${teacher._id}`, tokenConfig(action.user))\n//         .then((res) => console.log(res.data))\n//         .catch((err) => console.log(err));\n//       return state.filter((t) => t.id !== action.id);\n//     case \"UPDATE_TEACHER\":\n//       return updateTeacher(state, teacher);\n//     case \"ADD_TEACHING_MINS\":\n//       return addTeachingMins(state, action.events);\n//     default:\n//       return state;\n//   }\n// };\n// export default teachersReducer;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/reducers/teachersReducer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import axios from \"axios\";\n// import { createPayPeriodData } from \"../helperFunctions\";\n// import { tokenConfig } from \"../reducers/loadUserReducer\";\n// import uuid from \"uuid/v4\";\n\n// const updateTeacher = async (state, teacher) => {\n//   await axios\n//     .put(`/api/teachers/update/${teacher._id}`, teacher)\n//     .then((res) => console.log(res.data))\n//     .catch((err) => console.log(err));\n//   return state.map((t) =>\n//     t.id === teacher.id\n//       ? {\n//           ...t,\n//           resourceTitle: teacher.resourceTitle,\n//           name: teacher.name,\n//           familyName: teacher.familyName,\n//           teachingMins: teacher.teachingMins,\n//           holidayMins: teacher.holidayMins,\n//           outsideDutyMins: teacher.outsideDutyMins,\n//           otThreshold: teacher.otThreshold,\n//           overThresholdOneMins: teacher.overThresholdOneMins,\n//           overThresholdTwoMins: teacher.overThresholdTwoMins,\n//         }\n//       : t\n//   );\n// };\n\n// const addTeachingMins = (teachers, events) => {\n//   const now = new Date();\n//   // Create start and end dates for the current month to calc\n//   // teaching minutes\n//   const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n//   const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n//   if (teachers.length > 0) {\n//     // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n//     teachers.forEach((teacher) => {\n//       teacher.teachingMins = 0;\n//       teacher.outsideDutyMins = 0;\n//       teacher.holidayMins = 0;\n//       teacher.overThresholdOneMins = 0;\n//       teacher.overThresholdTwoMins = 0;\n//     });\n\n//     teachers.forEach((teacher) => {\n//       createPayPeriodData(events, teacher, monthStart, monthEnd);\n//       updateTeacher(teacher);\n//     });\n//   }\n// };\n\n// const teachersReducer = async (state, action) => {\n//   switch (action.type) {\n//     case \"GET_TEACHERS\":\n//       let teachersArr;\n//       await axios\n//         .get(\"/api/teachers\", tokenConfig(action.user))\n//         .then((res) => {\n//           teachersArr = res.data;\n//         })\n//         .catch((err) => console.log(err));\n//       return [...state, teachersArr];\n\n//     case \"ADD_TEACHER\":\n//       const teacher = action.teacher && action.teacher;\n//       if (action.teacher) {\n//       }\n//       await axios\n//         .post(\"/api/teachers/add\", action.teacher, tokenConfig(action.user))\n//         .then((res) => console.log(res.data))\n//         .catch((err) => console.log(err));\n//       return [...state, { id: uuid(), teacher }];\n\n//     case \"DELETE_TEACHER\":\n//       await axios\n//         .delete(`/api/teachers/delete/${teacher._id}`, tokenConfig(action.user))\n//         .then((res) => console.log(res.data))\n//         .catch((err) => console.log(err));\n//       return state.filter((t) => t.id !== action.id);\n\n//     case \"UPDATE_TEACHER\":\n//       return updateTeacher(state, teacher);\n\n//     case \"ADD_TEACHING_MINS\":\n//       return addTeachingMins(state, action.events);\n\n//     default:\n//       return state;\n//   }\n// };\n// export default teachersReducer;\n"]},"metadata":{},"sourceType":"module"}