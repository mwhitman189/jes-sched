{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { getRecurrences } from \"../helperFunctions\";\nexport default (initialEvents => {\n  const _useState = useState(initialEvents),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const JapaneseHolidays = require(\"japanese-holidays\");\n\n  return {\n    events,\n    getEvents: async () => {\n      return await axios.get(\"/lessons/\").then(res => {\n        if (res.data.length > 0) {\n          res.data.map(event => {\n            event.start = new Date(event.start);\n            event.end = new Date(event.end);\n          });\n          setEvents([...res.data, events[0]]);\n        }\n      }).catch(err => console.log(err));\n    },\n    addEvent: async event => {\n      const newEvents = [];\n\n      if (event.recur === true) {\n        const recurrences = getRecurrences(event);\n        recurrences.map(r => {\n          const newEvent = _objectSpread({}, event, {\n            start: r,\n            end: moment(r).add(event.duration, \"m\").toDate(),\n            isNewEvent: false\n          });\n\n          if (JapaneseHolidays.isHoliday(r)) {\n            newEvent.isHoliday = true;\n          }\n\n          newEvents.push(newEvent);\n        });\n      }\n\n      if (JapaneseHolidays.isHoliday(event.start)) {\n        event = _objectSpread({}, event, {\n          isHoliday: true\n        });\n      }\n\n      event = _objectSpread({}, event, {\n        isNewEvent: true\n      });\n      newEvents.push(event);\n      await axios.post(\"/lessons/add\", newEvents).then(res => console.log(res.data)).catch(err => console.log(err));\n      return this.getEvents(events, setEvents);\n    },\n    deleteEvent: async event => {\n      const newEvents = events.filter(evt => evt._id !== event._id);\n      setEvents(newEvents);\n      return await axios.delete(`/lessons/delete/${event._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n    },\n    changeEvent: async (event, editedEvent) => {\n      const idx = events.findIndex(e => e._id === event._id);\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, editedEvent);\n      setEvents(nextEvents);\n      return await axios.put(`/lessons/update/${event._id}`, editedEvent).then(res => console.log(res.data)).catch(err => console.log(err));\n    }\n  };\n});","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/hooks/useEventsState.js"],"names":["useState","axios","moment","getRecurrences","initialEvents","events","setEvents","JapaneseHolidays","require","getEvents","get","then","res","data","length","map","event","start","Date","end","catch","err","console","log","addEvent","newEvents","recur","recurrences","r","newEvent","add","duration","toDate","isNewEvent","isHoliday","push","post","deleteEvent","filter","evt","_id","delete","changeEvent","editedEvent","idx","findIndex","e","nextEvents","splice","put"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { getRecurrences } from \"../helperFunctions\";\n\nexport default initialEvents => {\n  const [events, setEvents] = useState(initialEvents);\n  const JapaneseHolidays = require(\"japanese-holidays\");\n\n  return {\n    events,\n    getEvents: async () => {\n      return await axios\n        .get(\"/lessons/\")\n        .then(res => {\n          if (res.data.length > 0) {\n            res.data.map(event => {\n              event.start = new Date(event.start);\n              event.end = new Date(event.end);\n            });\n            setEvents([...res.data, events[0]]);\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    addEvent: async event => {\n      const newEvents = [];\n      if (event.recur === true) {\n        const recurrences = getRecurrences(event);\n        recurrences.map(r => {\n          const newEvent = {\n            ...event,\n            start: r,\n            end: moment(r)\n              .add(event.duration, \"m\")\n              .toDate(),\n            isNewEvent: false\n          };\n          if (JapaneseHolidays.isHoliday(r)) {\n            newEvent.isHoliday = true;\n          }\n          newEvents.push(newEvent);\n        });\n      }\n      if (JapaneseHolidays.isHoliday(event.start)) {\n        event = { ...event, isHoliday: true };\n      }\n      event = { ...event, isNewEvent: true };\n      newEvents.push(event);\n      await axios\n        .post(\"/lessons/add\", newEvents)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n      return this.getEvents(events, setEvents);\n    },\n    deleteEvent: async event => {\n      const newEvents = events.filter(evt => evt._id !== event._id);\n      setEvents(newEvents);\n      return await axios\n        .delete(`/lessons/delete/${event._id}`)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n    },\n    changeEvent: async (event, editedEvent) => {\n      const idx = events.findIndex(e => e._id === event._id);\n      const nextEvents = [...events];\n\n      nextEvents.splice(idx, 1, editedEvent);\n      setEvents(nextEvents);\n\n      return await axios\n        .put(`/lessons/update/${event._id}`, editedEvent)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}