{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.getSlotMetrics = getSlotMetrics;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _memoizeOne = _interopRequireDefault(require(\"memoize-one\"));\n\nvar dates = _interopRequireWildcard(require(\"./dates\"));\n\nvar _eventLevels2 = require(\"./eventLevels\");\n\nvar isSegmentInSlot = function isSegmentInSlot(seg, slot) {\n  return seg.left <= slot && seg.right >= slot;\n};\n\nvar isEqual = function isEqual(a, b) {\n  return a.range === b.range && a.events === b.events;\n};\n\nfunction getSlotMetrics() {\n  return (0, _memoizeOne.default)(function (options) {\n    var range = options.range,\n        events = options.events,\n        maxRows = options.maxRows,\n        minRows = options.minRows,\n        accessors = options.accessors;\n\n    var _endOfRange = (0, _eventLevels2.endOfRange)(range),\n        first = _endOfRange.first,\n        last = _endOfRange.last;\n\n    var segments = events.map(function (evt) {\n      return (0, _eventLevels2.eventSegments)(evt, range, accessors);\n    });\n\n    var _eventLevels = (0, _eventLevels2.eventLevels)(segments, Math.max(maxRows - 1, 1)),\n        levels = _eventLevels.levels,\n        extra = _eventLevels.extra;\n\n    while (levels.length < minRows) {\n      levels.push([]);\n    }\n\n    return {\n      first: first,\n      last: last,\n      levels: levels,\n      extra: extra,\n      range: range,\n      slots: range.length,\n      clone: function clone(args) {\n        var metrics = getSlotMetrics();\n        return metrics((0, _extends2.default)({}, options, args));\n      },\n      getDateForSlot: function getDateForSlot(slotNumber) {\n        return range[slotNumber];\n      },\n      getSlotForDate: function getSlotForDate(date) {\n        return range.find(function (r) {\n          return dates.eq(r, date, 'day');\n        });\n      },\n      getEventsForSlot: function getEventsForSlot(slot) {\n        return segments.filter(function (seg) {\n          return isSegmentInSlot(seg, slot);\n        }).map(function (seg) {\n          return seg.event;\n        });\n      },\n      continuesPrior: function continuesPrior(event) {\n        return dates.lt(accessors.start(event), first, 'day');\n      },\n      continuesAfter: function continuesAfter(event) {\n        var eventEnd = accessors.end(event);\n        var singleDayDuration = dates.eq(accessors.start(event), eventEnd, 'minutes');\n        return singleDayDuration ? dates.gte(eventEnd, last, 'minutes') : dates.gt(eventEnd, last, 'minutes');\n      }\n    };\n  }, isEqual);\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/node_modules/react-big-calendar/lib/utils/DateSlotMetrics.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","exports","__esModule","getSlotMetrics","_extends2","_memoizeOne","dates","_eventLevels2","isSegmentInSlot","seg","slot","left","right","isEqual","a","b","range","events","default","options","maxRows","minRows","accessors","_endOfRange","endOfRange","first","last","segments","map","evt","eventSegments","_eventLevels","eventLevels","Math","max","levels","extra","length","push","slots","clone","args","metrics","getDateForSlot","slotNumber","getSlotForDate","date","find","r","eq","getEventsForSlot","filter","event","continuesPrior","lt","start","continuesAfter","eventEnd","end","singleDayDuration","gte","gt"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.getSlotMetrics = getSlotMetrics;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _memoizeOne = _interopRequireDefault(require(\"memoize-one\"));\n\nvar dates = _interopRequireWildcard(require(\"./dates\"));\n\nvar _eventLevels2 = require(\"./eventLevels\");\n\nvar isSegmentInSlot = function isSegmentInSlot(seg, slot) {\n  return seg.left <= slot && seg.right >= slot;\n};\n\nvar isEqual = function isEqual(a, b) {\n  return a.range === b.range && a.events === b.events;\n};\n\nfunction getSlotMetrics() {\n  return (0, _memoizeOne.default)(function (options) {\n    var range = options.range,\n        events = options.events,\n        maxRows = options.maxRows,\n        minRows = options.minRows,\n        accessors = options.accessors;\n\n    var _endOfRange = (0, _eventLevels2.endOfRange)(range),\n        first = _endOfRange.first,\n        last = _endOfRange.last;\n\n    var segments = events.map(function (evt) {\n      return (0, _eventLevels2.eventSegments)(evt, range, accessors);\n    });\n\n    var _eventLevels = (0, _eventLevels2.eventLevels)(segments, Math.max(maxRows - 1, 1)),\n        levels = _eventLevels.levels,\n        extra = _eventLevels.extra;\n\n    while (levels.length < minRows) {\n      levels.push([]);\n    }\n\n    return {\n      first: first,\n      last: last,\n      levels: levels,\n      extra: extra,\n      range: range,\n      slots: range.length,\n      clone: function clone(args) {\n        var metrics = getSlotMetrics();\n        return metrics((0, _extends2.default)({}, options, args));\n      },\n      getDateForSlot: function getDateForSlot(slotNumber) {\n        return range[slotNumber];\n      },\n      getSlotForDate: function getSlotForDate(date) {\n        return range.find(function (r) {\n          return dates.eq(r, date, 'day');\n        });\n      },\n      getEventsForSlot: function getEventsForSlot(slot) {\n        return segments.filter(function (seg) {\n          return isSegmentInSlot(seg, slot);\n        }).map(function (seg) {\n          return seg.event;\n        });\n      },\n      continuesPrior: function continuesPrior(event) {\n        return dates.lt(accessors.start(event), first, 'day');\n      },\n      continuesAfter: function continuesAfter(event) {\n        var eventEnd = accessors.end(event);\n        var singleDayDuration = dates.eq(accessors.start(event), eventEnd, 'minutes');\n        return singleDayDuration ? dates.gte(eventEnd, last, 'minutes') : dates.gt(eventEnd, last, 'minutes');\n      }\n    };\n  }, isEqual);\n}"]},"metadata":{},"sourceType":"script"}