{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/EventPopper.js\";\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 500\n  },\n  attending: {\n    cursor: \"pointer\",\n    padding: theme.spacing(2)\n  },\n  absent: {\n    opacity: 0.3,\n    textDecoration: \"line-through\",\n    cursor: \"pointer\",\n    padding: theme.spacing(2)\n  }\n}));\nexport default function PositionedPopper(props) {\n  const isOpen = props.isOpen,\n        anchorEl = props.anchorEl,\n        selectedEvent = props.selectedEvent,\n        attendees = props.attendees,\n        updateAttendees = props.updateAttendees;\n\n  const _useContext = useContext(EventsContext),\n        editEvent = _useContext.editEvent;\n\n  const _useContext2 = useContext(UserContext),\n        user = _useContext2.user;\n\n  const classes = useStyles();\n  let attendant_ids = {};\n\n  const toggleAttendance = id => {\n    attendant_ids = {};\n\n    if (user.user.role !== \"teacher\") {\n      let attendees;\n\n      if (selectedEvent.attendants.some(a => a._id === id)) {\n        attendees = selectedEvent.attendants.filter(a => a._id !== id);\n      } else {\n        const student = selectedEvent.students.find(s => s._id === id);\n        attendees = [...selectedEvent.attendants, student];\n      }\n\n      attendees.forEach(a => attendant_ids[a._id] = a._id);\n      console.log(attendees, attendant_ids);\n\n      const editedEvent = _objectSpread({}, selectedEvent, {\n        attendants: attendees\n      });\n\n      editEvent(editedEvent);\n      return updateParticipants([...attendees]);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Popper, {\n    open: isOpen,\n    anchorEl: anchorEl,\n    placement: \"left-end\",\n    transition: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, ({\n    TransitionProps\n  }) => React.createElement(Fade, Object.assign({}, TransitionProps, {\n    timeout: 350,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, selectedEvent.students && selectedEvent.students.map(s => {\n    let className;\n\n    if (attendees.some(a => a._id === s._id)) {\n      className = classes.attending;\n    } else {\n      className = classes.absent;\n    }\n\n    return React.createElement(Typography, {\n      key: `student number ${s._id}`,\n      className: className,\n      onClick: () => toggleAttendance(s._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, s.givenName);\n  })))));\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/EventPopper.js"],"names":["React","useContext","UserContext","EventsContext","makeStyles","Popper","Typography","Fade","Paper","useStyles","theme","root","width","attending","cursor","padding","spacing","absent","opacity","textDecoration","PositionedPopper","props","isOpen","anchorEl","selectedEvent","attendees","updateAttendees","editEvent","user","classes","attendant_ids","toggleAttendance","id","role","attendants","some","a","_id","filter","student","students","find","s","forEach","console","log","editedEvent","updateParticipants","TransitionProps","map","className","givenName"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 500,\n  },\n  attending: {\n    cursor: \"pointer\",\n    padding: theme.spacing(2),\n  },\n  absent: {\n    opacity: 0.3,\n    textDecoration: \"line-through\",\n    cursor: \"pointer\",\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function PositionedPopper(props) {\n  const { isOpen, anchorEl, selectedEvent, attendees, updateAttendees } = props;\n  const { editEvent } = useContext(EventsContext);\n  const { user } = useContext(UserContext);\n  const classes = useStyles();\n  let attendant_ids = {};\n\n  const toggleAttendance = (id) => {\n    attendant_ids = {};\n    if (user.user.role !== \"teacher\") {\n      let attendees;\n      if (selectedEvent.attendants.some((a) => a._id === id)) {\n        attendees = selectedEvent.attendants.filter((a) => a._id !== id);\n      } else {\n        const student = selectedEvent.students.find((s) => s._id === id);\n        attendees = [...selectedEvent.attendants, student];\n      }\n      attendees.forEach((a) => (attendant_ids[a._id] = a._id));\n      console.log(attendees, attendant_ids);\n      const editedEvent = { ...selectedEvent, attendants: attendees };\n      editEvent(editedEvent);\n      return updateParticipants([...attendees]);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Popper\n        open={isOpen}\n        anchorEl={anchorEl}\n        placement={\"left-end\"}\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper>\n              {selectedEvent.students &&\n                selectedEvent.students.map((s) => {\n                  let className;\n                  if (attendees.some((a) => a._id === s._id)) {\n                    className = classes.attending;\n                  } else {\n                    className = classes.absent;\n                  }\n                  return (\n                    <Typography\n                      key={`student number ${s._id}`}\n                      className={className}\n                      onClick={() => toggleAttendance(s._id)}\n                    >\n                      {s.givenName}\n                    </Typography>\n                  );\n                })}\n            </Paper>\n          </Fade>\n        )}\n      </Popper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}