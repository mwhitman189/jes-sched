{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/EventPopper.js\";\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 500\n  },\n  attending: {\n    cursor: \"pointer\",\n    padding: theme.spacing(2)\n  },\n  absent: {\n    opacity: 0.3,\n    textDecoration: \"line-through\",\n    cursor: \"pointer\",\n    padding: theme.spacing(2)\n  }\n}));\nexport default function PositionedPopper(props) {\n  const isOpen = props.isOpen,\n        anchorEl = props.anchorEl,\n        selectedEvent = props.selectedEvent,\n        attendees = props.attendees,\n        setAttendees = props.setAttendees;\n\n  const _useContext = useContext(EventsContext),\n        editEvent = _useContext.editEvent;\n\n  const _useContext2 = useContext(UserContext),\n        user = _useContext2.user;\n\n  const classes = useStyles();\n\n  const toggleAttendance = id => {\n    // Hash attendees' ids for faster lookup\n    let attendee_ids = {};\n\n    if (user.user.role !== \"teacher\") {\n      let newAttendees;\n\n      if (attendees.some(a => a._id === id)) {\n        newAttendees = attendees.filter(a => a._id !== id);\n      } else {\n        const student = selectedEvent.students.find(s => s._id === id);\n        newAttendees = [...selectedEvent.attendees, student];\n      } // // Add each attendee's _id to the hash table\n      // newAttendees.forEach((a) => (attendee_ids[a._id] = a._id));\n      // Add the updated event to the database, then update the state\n\n\n      const editedEvent = _objectSpread({}, selectedEvent, {\n        attendees: newAttendees\n      });\n\n      console.log(editedEvent);\n      editEvent(editedEvent);\n      return setAttendees([...newAttendees]);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Popper, {\n    open: isOpen,\n    anchorEl: anchorEl,\n    placement: \"left-end\",\n    transition: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, ({\n    TransitionProps\n  }) => React.createElement(Fade, Object.assign({}, TransitionProps, {\n    timeout: 350,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, selectedEvent.students && selectedEvent.students.map(s => {\n    let className;\n\n    if (attendees.some(a => a._id === s._id)) {\n      className = classes.attending;\n    } else {\n      className = classes.absent;\n    }\n\n    return React.createElement(Typography, {\n      key: `student number ${s._id}`,\n      className: className,\n      onClick: () => toggleAttendance(s._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, s.givenName);\n  })))));\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/EventPopper.js"],"names":["React","useContext","UserContext","EventsContext","makeStyles","Popper","Typography","Fade","Paper","useStyles","theme","root","width","attending","cursor","padding","spacing","absent","opacity","textDecoration","PositionedPopper","props","isOpen","anchorEl","selectedEvent","attendees","setAttendees","editEvent","user","classes","toggleAttendance","id","attendee_ids","role","newAttendees","some","a","_id","filter","student","students","find","s","editedEvent","console","log","TransitionProps","map","className","givenName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADiC;AAIvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,SADC;AAETC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AAFA,GAJ4B;AAQvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,GADH;AAENC,IAAAA,cAAc,EAAE,cAFV;AAGNL,IAAAA,MAAM,EAAE,SAHF;AAINC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AAJH;AAR+B,CAAZ,CAAD,CAA5B;AAgBA,eAAe,SAASI,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,QACtCC,MADsC,GACuBD,KADvB,CACtCC,MADsC;AAAA,QAC9BC,QAD8B,GACuBF,KADvB,CAC9BE,QAD8B;AAAA,QACpBC,aADoB,GACuBH,KADvB,CACpBG,aADoB;AAAA,QACLC,SADK,GACuBJ,KADvB,CACLI,SADK;AAAA,QACMC,YADN,GACuBL,KADvB,CACMK,YADN;;AAAA,sBAExBzB,UAAU,CAACE,aAAD,CAFc;AAAA,QAEtCwB,SAFsC,eAEtCA,SAFsC;;AAAA,uBAG7B1B,UAAU,CAACC,WAAD,CAHmB;AAAA,QAGtC0B,IAHsC,gBAGtCA,IAHsC;;AAI9C,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;;AAEA,QAAMqB,gBAAgB,GAAIC,EAAD,IAAQ;AAC/B;AACA,QAAIC,YAAY,GAAG,EAAnB;;AACA,QAAIJ,IAAI,CAACA,IAAL,CAAUK,IAAV,KAAmB,SAAvB,EAAkC;AAChC,UAAIC,YAAJ;;AACA,UAAIT,SAAS,CAACU,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUN,EAAhC,CAAJ,EAAyC;AACvCG,QAAAA,YAAY,GAAGT,SAAS,CAACa,MAAV,CAAkBF,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUN,EAAlC,CAAf;AACD,OAFD,MAEO;AACL,cAAMQ,OAAO,GAAGf,aAAa,CAACgB,QAAd,CAAuBC,IAAvB,CAA6BC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUN,EAA7C,CAAhB;AACAG,QAAAA,YAAY,GAAG,CAAC,GAAGV,aAAa,CAACC,SAAlB,EAA6Bc,OAA7B,CAAf;AACD,OAP+B,CAQhC;AACA;AACA;;;AACA,YAAMI,WAAW,qBAAQnB,aAAR;AAAuBC,QAAAA,SAAS,EAAES;AAAlC,QAAjB;;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAhB,MAAAA,SAAS,CAACgB,WAAD,CAAT;AACA,aAAOjB,YAAY,CAAC,CAAC,GAAGQ,YAAJ,CAAD,CAAnB;AACD;AACF,GAnBD;;AAqBA,SACE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAAClB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEW,MADR;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,SAAS,EAAE,UAHb;AAIE,IAAA,UAAU,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,CAAC;AAAEuB,IAAAA;AAAF,GAAD,KACC,oBAAC,IAAD,oBAAUA,eAAV;AAA2B,IAAA,OAAO,EAAE,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,aAAa,CAACgB,QAAd,IACChB,aAAa,CAACgB,QAAd,CAAuBO,GAAvB,CAA4BL,CAAD,IAAO;AAChC,QAAIM,SAAJ;;AACA,QAAIvB,SAAS,CAACU,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUK,CAAC,CAACL,GAAlC,CAAJ,EAA4C;AAC1CW,MAAAA,SAAS,GAAGnB,OAAO,CAAChB,SAApB;AACD,KAFD,MAEO;AACLmC,MAAAA,SAAS,GAAGnB,OAAO,CAACZ,MAApB;AACD;;AACD,WACE,oBAAC,UAAD;AACE,MAAA,GAAG,EAAG,kBAAiByB,CAAC,CAACL,GAAI,EAD/B;AAEE,MAAA,SAAS,EAAEW,SAFb;AAGE,MAAA,OAAO,EAAE,MAAMlB,gBAAgB,CAACY,CAAC,CAACL,GAAH,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGK,CAAC,CAACO,SALL,CADF;AASD,GAhBD,CAFJ,CADF,CAPJ,CADF,CADF;AAmCD","sourcesContent":["import React, { useContext } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 500,\n  },\n  attending: {\n    cursor: \"pointer\",\n    padding: theme.spacing(2),\n  },\n  absent: {\n    opacity: 0.3,\n    textDecoration: \"line-through\",\n    cursor: \"pointer\",\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function PositionedPopper(props) {\n  const { isOpen, anchorEl, selectedEvent, attendees, setAttendees } = props;\n  const { editEvent } = useContext(EventsContext);\n  const { user } = useContext(UserContext);\n  const classes = useStyles();\n\n  const toggleAttendance = (id) => {\n    // Hash attendees' ids for faster lookup\n    let attendee_ids = {};\n    if (user.user.role !== \"teacher\") {\n      let newAttendees;\n      if (attendees.some((a) => a._id === id)) {\n        newAttendees = attendees.filter((a) => a._id !== id);\n      } else {\n        const student = selectedEvent.students.find((s) => s._id === id);\n        newAttendees = [...selectedEvent.attendees, student];\n      }\n      // // Add each attendee's _id to the hash table\n      // newAttendees.forEach((a) => (attendee_ids[a._id] = a._id));\n      // Add the updated event to the database, then update the state\n      const editedEvent = { ...selectedEvent, attendees: newAttendees };\n      console.log(editedEvent);\n      editEvent(editedEvent);\n      return setAttendees([...newAttendees]);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Popper\n        open={isOpen}\n        anchorEl={anchorEl}\n        placement={\"left-end\"}\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper>\n              {selectedEvent.students &&\n                selectedEvent.students.map((s) => {\n                  let className;\n                  if (attendees.some((a) => a._id === s._id)) {\n                    className = classes.attending;\n                  } else {\n                    className = classes.absent;\n                  }\n                  return (\n                    <Typography\n                      key={`student number ${s._id}`}\n                      className={className}\n                      onClick={() => toggleAttendance(s._id)}\n                    >\n                      {s.givenName}\n                    </Typography>\n                  );\n                })}\n            </Paper>\n          </Fade>\n        )}\n      </Popper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}