{"ast":null,"code":"var _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/PayrollSheet.js\";\nimport React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { TableFooter } from \"@material-ui/core\";\nimport contracts from \"../contracts\";\nimport { addPayment } from \"../helperFunctions\";\n\nclass PayrollSheet extends Component {\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          rows = _this$props.rows,\n          currentTeacher = _this$props.currentTeacher,\n          paymentPeriodStart = _this$props.paymentPeriodStart,\n          paymentPeriodEnd = _this$props.paymentPeriodEnd;\n    const contract = contracts[currentTeacher.contractType];\n\n    const sumTeachingMins = () => {\n      const sums = {\n        totalTeachingHours: 0,\n        overThresholdOneAllowance: 0,\n        overThresholdTwoAllowance: 0,\n        totalOutsideDutyHoursAllowance: 0,\n        totalHolidayAllowance: 0,\n        totalTravelAllowance: 0,\n        totalTravelExpenses: 0\n      };\n      rows.forEach(r => {\n        sums.totalTeachingHours += Math.round((r.teachingMins / 60 + Number.EPSILON) * 100) / 100;\n\n        if (r.overThresholdOneMins > 0) {\n          sums.overThresholdOneAllowance += Math.round((r.overThresholdOneMins / 60 + Number.EPSILON) * 100) / 100 * contract.otWageOne;\n        }\n\n        if (r.overThresholdTwoMins > 0) {\n          sums.overThresholdTwoAllowance += Math.round((r.overThresholdTwoMins / 60 + Number.EPSILON) * 100) / 100 * contract.otWageTwo;\n        }\n\n        if (r.outsideDutyMins > 0) {\n          sums.totalOutsideDutyHoursAllowance += Math.round((r.outsideDutyMins / 60 + Number.EPSILON) * 100) / 100 * contract.otWageOne;\n        }\n\n        if (r.holidayMins > 0) {\n          sums.totalHolidayAllowance += Math.round((r.holidayMins / 60 + Number.EPSILON) * 100) / 100 * contract.otWageOne;\n        }\n\n        sums.totalTravelAllowance += r.travelAllowance;\n        sums.totalTravelExpenses += r.travelExpenses;\n      });\n      return sums;\n    };\n\n    const sums = sumTeachingMins();\n\n    const submitPayrollData = () => {\n      const grossPayment = contract.baseSalary + overThresholdOneAllowance + overThresholdTwoAllowance + totalOutsideDutyHoursAllowance + totalHolidayAllowance + row.travelAllowance + row.travelExpenses;\n      const payroll = grossPayment + taxRefund - (healthInsur + pension + employmentInsur + incomeTaxReservation);\n      const newPayment = {\n        resourceId: currentTeacher.resourceId,\n        paymentPeriodStart: paymentPeriodStart,\n        paymentPeriodEnd: paymentPeriodEnd,\n        totalTeachingHours: sums.totalTeachingHours,\n        paidVacationDays: paidVacationDays,\n        unpaidVacationDays: unpaidVacationDays,\n        paidSickDays: paidSickDays,\n        unpaidSickDays: unpaidSickDays,\n        overThresholdOneAllowance: overThresholdOneAllowance,\n        overThresholdTwoAllowance: overThresholdTwoAllowance,\n        outsideDutyHoursAllowance: totalOutsideDutyHoursAllowance,\n        holidayAllowance: totalHolidayAllowance,\n        healthInsur: contract.healthInsur,\n        pension: contract.pension,\n        employmentInsur: contract.employmentInsur,\n        travelAllowance: row.travelAllowance,\n        travelExpenses: row.travelExpenses,\n        incomeTaxReservation: incomeTaxReservation,\n        taxRefund: taxRefund,\n        grossPayment: grossPayment,\n        payroll: payroll\n      };\n      addPayment(newPayment);\n    };\n\n    return React.createElement(\"div\", {\n      className: classes.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"payroll-sheet-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Payroll for \", currentTeacher.name), React.createElement(Table, {\n      className: classes.table,\n      size: \"small\",\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Date\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Day\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Teaching Mins\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Outside DH\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Holiday Work\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Travel Allowance\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Travel Expenses\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, rows.map(row => React.createElement(TableRow, {\n      key: row.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, row.date), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, row.day), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, row.teachingMins), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, row.outsideDutyMins), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, row.holidayMins), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, row.travelAllowance), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, row.travelExpenses)))), React.createElement(TableFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Base Salary\"), React.createElement(TableCell, {\n      className: classes.totals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\xA5\", contract.baseSalary.toLocaleString())), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Total Teaching Hours:\"), React.createElement(TableCell, {\n      className: classes.totals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, sums.totalTeachingHours)), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Over Threshold One Allowance:\"), React.createElement(TableCell, {\n      className: classes.totals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"\\xA5\", sums.overThresholdOneAllowance.toLocaleString())), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Over Threshold Two Allowance:\"), React.createElement(TableCell, {\n      className: classes.totals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"\\xA5\", sums.overThresholdTwoAllowance.toLocaleString())), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Outside DH Hours Allowance:\"), React.createElement(TableCell, {\n      className: classes.totals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"\\xA5\", sums.totalOutsideDutyHoursAllowance.toLocaleString())), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Holiday Work Allowance:\"), React.createElement(TableCell, {\n      className: classes.totals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"\\xA5\", sums.totalHolidayAllowance.toLocaleString())))));\n  }\n\n}\n\nexport default PayrollSheet;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/PayrollSheet.js"],"names":["React","Component","Table","TableBody","TableCell","TableHead","TableRow","DialogTitle","TableFooter","contracts","addPayment","PayrollSheet","render","props","classes","rows","currentTeacher","paymentPeriodStart","paymentPeriodEnd","contract","contractType","sumTeachingMins","sums","totalTeachingHours","overThresholdOneAllowance","overThresholdTwoAllowance","totalOutsideDutyHoursAllowance","totalHolidayAllowance","totalTravelAllowance","totalTravelExpenses","forEach","r","Math","round","teachingMins","Number","EPSILON","overThresholdOneMins","otWageOne","overThresholdTwoMins","otWageTwo","outsideDutyMins","holidayMins","travelAllowance","travelExpenses","submitPayrollData","grossPayment","baseSalary","row","payroll","taxRefund","healthInsur","pension","employmentInsur","incomeTaxReservation","newPayment","resourceId","paidVacationDays","unpaidVacationDays","paidSickDays","unpaidSickDays","outsideDutyHoursAllowance","holidayAllowance","table","name","map","date","day","totals","toLocaleString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { TableFooter } from \"@material-ui/core\";\nimport contracts from \"../contracts\";\nimport { addPayment } from \"../helperFunctions\";\n\nclass PayrollSheet extends Component {\n  render() {\n    const {\n      classes,\n      rows,\n      currentTeacher,\n      paymentPeriodStart,\n      paymentPeriodEnd\n    } = this.props;\n    const contract = contracts[currentTeacher.contractType];\n\n    const sumTeachingMins = () => {\n      const sums = {\n        totalTeachingHours: 0,\n        overThresholdOneAllowance: 0,\n        overThresholdTwoAllowance: 0,\n        totalOutsideDutyHoursAllowance: 0,\n        totalHolidayAllowance: 0,\n        totalTravelAllowance: 0,\n        totalTravelExpenses: 0\n      };\n\n      rows.forEach(r => {\n        sums.totalTeachingHours +=\n          Math.round((r.teachingMins / 60 + Number.EPSILON) * 100) / 100;\n        if (r.overThresholdOneMins > 0) {\n          sums.overThresholdOneAllowance +=\n            (Math.round((r.overThresholdOneMins / 60 + Number.EPSILON) * 100) /\n              100) *\n            contract.otWageOne;\n        }\n        if (r.overThresholdTwoMins > 0) {\n          sums.overThresholdTwoAllowance +=\n            (Math.round((r.overThresholdTwoMins / 60 + Number.EPSILON) * 100) /\n              100) *\n            contract.otWageTwo;\n        }\n        if (r.outsideDutyMins > 0) {\n          sums.totalOutsideDutyHoursAllowance +=\n            (Math.round((r.outsideDutyMins / 60 + Number.EPSILON) * 100) /\n              100) *\n            contract.otWageOne;\n        }\n        if (r.holidayMins > 0) {\n          sums.totalHolidayAllowance +=\n            (Math.round((r.holidayMins / 60 + Number.EPSILON) * 100) / 100) *\n            contract.otWageOne;\n        }\n        sums.totalTravelAllowance += r.travelAllowance;\n        sums.totalTravelExpenses += r.travelExpenses;\n      });\n      return sums;\n    };\n    const sums = sumTeachingMins();\n\n    const submitPayrollData = () => {\n      const grossPayment =\n        contract.baseSalary +\n        overThresholdOneAllowance +\n        overThresholdTwoAllowance +\n        totalOutsideDutyHoursAllowance +\n        totalHolidayAllowance +\n        row.travelAllowance +\n        row.travelExpenses;\n\n      const payroll =\n        grossPayment +\n        taxRefund -\n        (healthInsur + pension + employmentInsur + incomeTaxReservation);\n\n      const newPayment = {\n        resourceId: currentTeacher.resourceId,\n        paymentPeriodStart: paymentPeriodStart,\n        paymentPeriodEnd: paymentPeriodEnd,\n        totalTeachingHours: sums.totalTeachingHours,\n        paidVacationDays: paidVacationDays,\n        unpaidVacationDays: unpaidVacationDays,\n        paidSickDays: paidSickDays,\n        unpaidSickDays: unpaidSickDays,\n        overThresholdOneAllowance: overThresholdOneAllowance,\n        overThresholdTwoAllowance: overThresholdTwoAllowance,\n        outsideDutyHoursAllowance: totalOutsideDutyHoursAllowance,\n        holidayAllowance: totalHolidayAllowance,\n        healthInsur: contract.healthInsur,\n        pension: contract.pension,\n        employmentInsur: contract.employmentInsur,\n        travelAllowance: row.travelAllowance,\n        travelExpenses: row.travelExpenses,\n        incomeTaxReservation: incomeTaxReservation,\n        taxRefund: taxRefund,\n        grossPayment: grossPayment,\n        payroll: payroll\n      };\n      addPayment(newPayment);\n    };\n\n    return (\n      <div className={classes.table}>\n        <DialogTitle id=\"payroll-sheet-dialog\">\n          Payroll for {currentTeacher.name}\n        </DialogTitle>\n        <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell align=\"right\">Day</TableCell>\n              <TableCell align=\"right\">Teaching Mins</TableCell>\n              <TableCell align=\"right\">Outside DH</TableCell>\n              <TableCell align=\"right\">Holiday Work</TableCell>\n              <TableCell align=\"right\">Travel Allowance</TableCell>\n              <TableCell align=\"right\">Travel Expenses</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.date}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.date}\n                </TableCell>\n                <TableCell align=\"right\">{row.day}</TableCell>\n                <TableCell align=\"right\">{row.teachingMins}</TableCell>\n                <TableCell align=\"right\">{row.outsideDutyMins}</TableCell>\n                <TableCell align=\"right\">{row.holidayMins}</TableCell>\n                <TableCell align=\"right\">{row.travelAllowance}</TableCell>\n                <TableCell align=\"right\">{row.travelExpenses}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TableCell size=\"medium\">Base Salary</TableCell>\n              <TableCell className={classes.totals}>\n                ¥{contract.baseSalary.toLocaleString()}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell size=\"medium\">Total Teaching Hours:</TableCell>\n              <TableCell className={classes.totals}>\n                {sums.totalTeachingHours}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell size=\"medium\">Over Threshold One Allowance:</TableCell>\n              <TableCell className={classes.totals}>\n                ¥{sums.overThresholdOneAllowance.toLocaleString()}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell size=\"medium\">Over Threshold Two Allowance:</TableCell>\n              <TableCell className={classes.totals}>\n                ¥{sums.overThresholdTwoAllowance.toLocaleString()}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell size=\"medium\">Outside DH Hours Allowance:</TableCell>\n              <TableCell className={classes.totals}>\n                ¥{sums.totalOutsideDutyHoursAllowance.toLocaleString()}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell size=\"medium\">Holiday Work Allowance:</TableCell>\n              <TableCell className={classes.totals}>\n                ¥{sums.totalHolidayAllowance.toLocaleString()}\n              </TableCell>\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    );\n  }\n}\nexport default PayrollSheet;\n"]},"metadata":{},"sourceType":"module"}