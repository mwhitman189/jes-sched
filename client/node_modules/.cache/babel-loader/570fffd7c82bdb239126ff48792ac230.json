{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/Schedule.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport { protectAction } from \"../helperFunctions\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { StudentsContext } from \"../context/StudentsContext\";\nimport { UserContext } from \"../context/UserContext\";\nimport useFormState from \"../hooks/useInputState\";\nimport EventForm from \"./EventForm\";\nimport StaffForm from \"./StaffForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport Footer from \"./Footer\";\nimport EventPopper from \"./EventPopper\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const _useContext = useContext(TeachersContext),\n        getTeachers = _useContext.getTeachers,\n        addTeachingMins = _useContext.addTeachingMins;\n\n  const _useContext2 = useContext(EventsContext),\n        events = _useContext2.events,\n        editEvent = _useContext2.editEvent,\n        getEvents = _useContext2.getEvents;\n\n  const _useContext3 = useContext(StudentsContext),\n        getStudents = _useContext3.getStudents;\n\n  const _useContext4 = useContext(UserContext),\n        user = _useContext4.user;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        formType = _useState2[0],\n        setFormType = _useState2[1];\n\n  const _useFormState = useFormState(new Date()),\n        _useFormState2 = _slicedToArray(_useFormState, 2),\n        startTime = _useFormState2[0],\n        updateStartTime = _useFormState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedEvent = _useState4[0],\n        setSelectedEvent = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isOpen = _useState6[0],\n        setIsOpen = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedTeacher = _useState10[0],\n        setSelectedTeacher = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        participants = _useState12[0],\n        updateParticipants = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        isLoading = _useState14[0],\n        setIsLoading = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        isDetailView = _useState16[0],\n        setIsDetailView = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        anchorEl = _useState18[0],\n        setAnchorEl = _useState18[1];\n\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  useEffect(() => {\n    // Pass current dateTime to compare to recurrence events to check if a new batch of recurrences\n    // is needed\n    getEvents(now.getTime());\n    getTeachers(events);\n    getStudents();\n  }, []);\n  useEffect(() => {\n    addTeachingMins(events, monthStart, monthEnd);\n  }, [events]);\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end\n    });\n\n    handleDoubleClick(updatedEvent);\n  };\n\n  const validateRoomAndResource = (event, resourceId, start) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (!validateRoom(otherEvents, event.room, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return false;\n    }\n\n    if (!validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Teacher Conflict. Please choose another teacher or time\");\n      return false;\n    }\n\n    return true;\n  }; // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n\n\n  const handleMove = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    setIsLoading(true);\n\n    if (validateRoomAndResource(event, resourceId, start)) {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end\n      });\n      setIsLoading(false);\n      return true;\n    }\n\n    setIsLoading(false);\n    return false;\n  };\n\n  const handleSelect = ({\n    start,\n    resourceId\n  }) => {\n    setIsLoading(true);\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n    setIsLoading(false);\n  };\n\n  const handleDoubleClick = event => {\n    setIsLoading(true);\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n    setIsLoading(false);\n  };\n\n  const handleAddTeacherNav = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleAddStaffNav = () => {\n    setFormType(\"staff\");\n  };\n\n  const handleToggleSnackbar = msg => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollNav = () => {\n    setFormType(\"payroll\");\n  };\n\n  const handleSingleClick = (event, target) => {\n    if (user.user.role === \"teacher\") {\n      const updatedEvent = _objectSpread({}, event, {\n        isNewEvent: false\n      });\n\n      editEvent(updatedEvent);\n    }\n\n    setIsDetailView(!isDetailView);\n    setAnchorEl(target.currentTarget);\n    setSelectedEvent(event);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, isDetailView && React.createElement(EventPopper, {\n    isOpen: isDetailView,\n    anchorEl: anchorEl,\n    selectedEvent: selectedEvent,\n    attendees: attendees,\n    updateAttendees: updateAttendees,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), formType === \"event\" && React.createElement(EventForm, {\n    formType: formType,\n    setFormType: setFormType,\n    startTime: startTime,\n    updateStartTime: updateStartTime,\n    event: selectedEvent,\n    setSelectedEvent: setSelectedEvent,\n    selectedTeacher: selectedTeacher,\n    validateRoomAndResource: validateRoomAndResource,\n    participants: participants,\n    updateParticipants: updateParticipants,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), formType === \"teacher\" && React.createElement(TeacherForm, {\n    formType: formType,\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), formType === \"staff\" && React.createElement(StaffForm, {\n    formType: formType,\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), formType === \"payroll\" && React.createElement(Payroll, {\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(CustomizedSnackbars, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    variant: \"error\",\n    msg: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(CustomDnDCalendar, {\n    handleMove: protectAction(user, handleMove),\n    handleSelect: protectAction(user, handleSelect),\n    handleDoubleClick: protectAction(user, handleDoubleClick),\n    handleAddTeacherNav: protectAction(user, handleAddTeacherNav),\n    handleAddStaffNav: protectAction(user, handleAddStaffNav),\n    handlePayrollNav: protectAction(user, handlePayrollNav),\n    handleOpenDetailView: handleSingleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/Schedule.js"],"names":["React","useState","useEffect","useContext","CustomDnDCalendar","protectAction","validateRoom","validateTeacher","TeachersContext","EventsContext","StudentsContext","UserContext","useFormState","EventForm","StaffForm","TeacherForm","CustomizedSnackbars","Payroll","Footer","EventPopper","Schedule","getTeachers","addTeachingMins","events","editEvent","getEvents","getStudents","user","formType","setFormType","Date","startTime","updateStartTime","selectedEvent","setSelectedEvent","isOpen","setIsOpen","message","setMessage","selectedTeacher","setSelectedTeacher","participants","updateParticipants","isLoading","setIsLoading","isDetailView","setIsDetailView","anchorEl","setAnchorEl","now","monthStart","getFullYear","getMonth","monthEnd","getTime","moveEvent","event","resourceId","start","end","updatedEvent","handleDoubleClick","validateRoomAndResource","idx","indexOf","otherEvents","slice","room","parseInt","duration","handleToggleSnackbar","handleMove","handleSelect","handleAddTeacherNav","handleAddStaffNav","msg","handlePayrollNav","handleSingleClick","target","role","isNewEvent","currentTarget","attendees","updateAttendees"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport { protectAction } from \"../helperFunctions\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { StudentsContext } from \"../context/StudentsContext\";\nimport { UserContext } from \"../context/UserContext\";\nimport useFormState from \"../hooks/useInputState\";\nimport EventForm from \"./EventForm\";\nimport StaffForm from \"./StaffForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport Footer from \"./Footer\";\nimport EventPopper from \"./EventPopper\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const { getTeachers, addTeachingMins } = useContext(TeachersContext);\n  const { events, editEvent, getEvents } = useContext(EventsContext);\n  const { getStudents } = useContext(StudentsContext);\n  const { user } = useContext(UserContext);\n\n  const [formType, setFormType] = useState(\"\");\n  const [startTime, updateStartTime] = useFormState(new Date());\n  const [selectedEvent, setSelectedEvent] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [selectedTeacher, setSelectedTeacher] = useState(\"\");\n  const [participants, updateParticipants] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDetailView, setIsDetailView] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(false);\n\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n  useEffect(() => {\n    // Pass current dateTime to compare to recurrence events to check if a new batch of recurrences\n    // is needed\n    getEvents(now.getTime());\n    getTeachers(events);\n    getStudents();\n  }, []);\n\n  useEffect(() => {\n    addTeachingMins(events, monthStart, monthEnd);\n  }, [events]);\n\n  const moveEvent = ({ event, resourceId, start, end }) => {\n    const updatedEvent = { ...event, resourceId, start, end };\n    handleDoubleClick(updatedEvent);\n  };\n\n  const validateRoomAndResource = (event, resourceId, start) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (\n      !validateRoom(otherEvents, event.room, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return false;\n    }\n    if (\n      !validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\n        \"Teacher Conflict. Please choose another teacher or time\"\n      );\n      return false;\n    }\n    return true;\n  };\n\n  // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n  const handleMove = ({ event, resourceId, start, end }) => {\n    setIsLoading(true);\n    if (validateRoomAndResource(event, resourceId, start)) {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end,\n      });\n      setIsLoading(false);\n      return true;\n    }\n    setIsLoading(false);\n    return false;\n  };\n\n  const handleSelect = ({ start, resourceId }) => {\n    setIsLoading(true);\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n    setIsLoading(false);\n  };\n\n  const handleDoubleClick = (event) => {\n    setIsLoading(true);\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n    setIsLoading(false);\n  };\n\n  const handleAddTeacherNav = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleAddStaffNav = () => {\n    setFormType(\"staff\");\n  };\n\n  const handleToggleSnackbar = (msg) => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollNav = () => {\n    setFormType(\"payroll\");\n  };\n\n  const handleSingleClick = (event, target) => {\n    if (user.user.role === \"teacher\") {\n      const updatedEvent = { ...event, isNewEvent: false };\n      editEvent(updatedEvent);\n    }\n    setIsDetailView(!isDetailView);\n    setAnchorEl(target.currentTarget);\n    setSelectedEvent(event);\n  };\n\n  return (\n    <div>\n      {isDetailView && (\n        <EventPopper\n          isOpen={isDetailView}\n          anchorEl={anchorEl}\n          selectedEvent={selectedEvent}\n          attendees={attendees}\n          updateAttendees={updateAttendees}\n        />\n      )}\n      {formType === \"event\" && (\n        <EventForm\n          formType={formType}\n          setFormType={setFormType}\n          startTime={startTime}\n          updateStartTime={updateStartTime}\n          event={selectedEvent}\n          setSelectedEvent={setSelectedEvent}\n          selectedTeacher={selectedTeacher}\n          validateRoomAndResource={validateRoomAndResource}\n          participants={participants}\n          updateParticipants={updateParticipants}\n        />\n      )}\n      {formType === \"teacher\" && (\n        <TeacherForm formType={formType} setFormType={setFormType} />\n      )}\n      {formType === \"staff\" && (\n        <StaffForm formType={formType} setFormType={setFormType} />\n      )}\n      {formType === \"payroll\" && <Payroll setFormType={setFormType} />}\n      <CustomizedSnackbars\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        variant={\"error\"}\n        msg={message}\n      />\n      <CustomDnDCalendar\n        handleMove={protectAction(user, handleMove)}\n        handleSelect={protectAction(user, handleSelect)}\n        handleDoubleClick={protectAction(user, handleDoubleClick)}\n        handleAddTeacherNav={protectAction(user, handleAddTeacherNav)}\n        handleAddStaffNav={protectAction(user, handleAddStaffNav)}\n        handlePayrollNav={protectAction(user, handlePayrollNav)}\n        handleOpenDetailView={handleSingleClick}\n      />\n      <Footer />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}