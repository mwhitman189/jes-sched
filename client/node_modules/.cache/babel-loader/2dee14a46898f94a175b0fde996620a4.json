{"ast":null,"code":"import _objectWithoutProperties from\"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import clsx from\"clsx\";import CheckCircleIcon from\"@material-ui/icons/CheckCircle\";import ErrorIcon from\"@material-ui/icons/Error\";import InfoIcon from\"@material-ui/icons/Info\";import CloseIcon from\"@material-ui/icons/Close\";import{amber,green}from\"@material-ui/core/colors\";import IconButton from\"@material-ui/core/IconButton\";import Snackbar from\"@material-ui/core/Snackbar\";import SnackbarContent from\"@material-ui/core/SnackbarContent\";import WarningIcon from\"@material-ui/icons/Warning\";import{makeStyles}from\"@material-ui/core/styles\";var variantIcon={success:CheckCircleIcon,warning:WarningIcon,error:ErrorIcon,info:InfoIcon};var useStyles1=makeStyles(function(theme){return{success:{backgroundColor:green[600]},error:{backgroundColor:theme.palette.error.dark},info:{backgroundColor:theme.palette.primary.main},warning:{backgroundColor:amber[700]},icon:{fontSize:20},iconVariant:{opacity:0.9,marginRight:theme.spacing(1)},message:{display:\"flex\",alignItems:\"center\"}};});function MySnackbarContentWrapper(props){var classes=useStyles1();var className=props.className,message=props.message,onClose=props.onClose,variant=props.variant,other=_objectWithoutProperties(props,[\"className\",\"message\",\"onClose\",\"variant\"]);var Icon=variantIcon[variant];return React.createElement(SnackbarContent,Object.assign({className:clsx(classes[variant],className),\"aria-describedby\":\"client-snackbar\",message:React.createElement(\"span\",{id:\"client-snackbar\",className:classes.message},React.createElement(Icon,{className:clsx(classes.icon,classes.iconVariant)}),message),action:[React.createElement(IconButton,{key:\"close\",\"aria-label\":\"close\",color:\"inherit\",onClick:onClose},React.createElement(CloseIcon,{className:classes.icon}))]},other));}var useStyles2=makeStyles(function(theme){return{margin:{margin:theme.spacing(1)}};});export default function CustomizedSnackbars(props){var classes=useStyles2();var isOpen=props.isOpen,setIsOpen=props.setIsOpen,msg=props.msg,variant=props.variant;var handleClose=function handleClose(){setIsOpen(false);};return React.createElement(\"div\",null,React.createElement(Snackbar,{anchorOrigin:{vertical:\"top\",horizontal:\"center\"},open:isOpen,autoHideDuration:6000},React.createElement(MySnackbarContentWrapper,{onClose:handleClose,variant:variant,message:msg})));}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/CustomizedSnackbars.js"],"names":["React","clsx","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","amber","green","IconButton","Snackbar","SnackbarContent","WarningIcon","makeStyles","variantIcon","success","warning","error","info","useStyles1","theme","backgroundColor","palette","dark","primary","main","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","useStyles2","margin","CustomizedSnackbars","isOpen","setIsOpen","msg","handleClose","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function CustomizedSnackbars(props) {\n  const classes = useStyles2();\n  const { isOpen, setIsOpen, msg, variant } = props;\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={isOpen}\n        autoHideDuration={6000}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant={variant}\n          message={msg}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}