{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport axios from \"axios\";\nimport { RRule } from \"rrule\";\nimport moment from \"moment\";\nimport { addEvent } from \"./hooks/useEventsState\";\n\nconst JapaneseHolidays = require(\"japanese-holidays\");\n\nconst getRecurrences = event => {\n  const now = new Date(); // Create start and end dates for the current month to calc\n  // teaching minutes\n\n  const months_start = new Date(now.getFullYear(), now.getMonth(), 1);\n  const months_end = new Date(now.getFullYear(), now.getMonth() + 2, 0); // Create an array of DateTimes for the recurrence of events.\n\n  const rrule = new RRule({\n    freq: RRule.WEEKLY,\n    count: 26,\n    interval: 1,\n    dtstart: new Date(event.start)\n  });\n  const twoMonthsRecurrences = rrule.between(months_start, months_end);\n  twoMonthsRecurrences.shift();\n  return twoMonthsRecurrences;\n};\n\nconst calcDutyHours = (dutyHours, start) => {\n  if (moment(start) < dutyHours.startTime) {\n    dutyHours.startTime = moment(start);\n  } // Add 9 hours to the DH start time to ensure a minimum of 9 DH\n\n\n  if (dutyHours.endTime.diff(dutyHours.startTime, \"hours\") < 9) {\n    dutyHours.endTime = moment(dutyHours.startTime).add(9, \"hours\");\n  }\n\n  return dutyHours;\n};\n\nconst calcOutsideDutyMins = (eventStart, eventEnd, duration, dutyHoursStart, dutyHoursEnd) => {\n  // Calculate difference in hours between the duty hours start time and the lesson start time\n  const startDiff = dutyHoursStart.diff(eventStart, \"minutes\");\n  const endDiff = dutyHoursStart.diff(eventEnd, \"minutes\"); // Calculate difference in hours between the duty hours end time and the lesson end time\n\n  const afterDhEndDiff = -dutyHoursEnd.diff(eventEnd, \"minutes\");\n  const afterDhStartDiff = -dutyHoursEnd.diff(eventStart, \"minutes\");\n  let outsideDutyMins;\n\n  if (startDiff <= 0 && afterDhEndDiff <= 0) {\n    outsideDutyMins = 0;\n    return {\n      teachingMins: duration,\n      outsideDutyMins: outsideDutyMins\n    };\n  } else if (startDiff > 0 && endDiff > 0 || afterDhEndDiff > 0 && afterDhStartDiff > 0) {\n    return {\n      teachingMins: 0,\n      outsideDutyMins: duration\n    };\n  } else if (startDiff > 0) {\n    const regularTeachingMins = duration - startDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: startDiff\n    };\n  } else {\n    const regularTeachingMins = duration - afterDhEndDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: afterDhEndDiff\n    };\n  }\n};\n\nconst createPayPeriodData = (events, teacher, monthStart, monthEnd) => {\n  // Creates an object of dates containing minutes worked, by work type\n  const datesData = {};\n  teacher.teachingMins = 0;\n  teacher.outsideDutyMins = 0;\n  teacher.holidayMins = 0;\n  teacher.overThresholdOneMins = 0;\n  teacher.overThresholdTwoMins = 0;\n  const monthEvents = events.filter(e => {\n    return moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\") && e.resourceId === teacher.resourceId;\n  });\n  const dutyHoursByDate = {};\n  monthEvents.forEach(e => {\n    const date = e.start.getDate(); // Set the base duty hours to noon to ensure at least 9 duty hours\n\n    if (!dutyHoursByDate[date]) {\n      const baseDutyHours = {\n        startTime: moment(e.start).set(\"hour\", 12).set(\"minutes\", 0),\n        endTime: moment(e.start).set(\"hour\", 12).set(\"minutes\", 0)\n      }; // Set the duty hours for the event's date\n\n      dutyHoursByDate[date] = calcDutyHours(baseDutyHours, e.start, e.end);\n    } else {\n      // Set the duty hours for the event's date\n      dutyHoursByDate[date] = calcDutyHours(dutyHoursByDate[date], e.start, e.end);\n    }\n  });\n  monthEvents.forEach(e => {\n    if (moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\")) {\n      if (e.resourceId === teacher.resourceId) {\n        const date = e.start.getDate();\n        const day = e.start.getDay(); // Calculate number of minutes to add to first threshold to calc second threshold. (10 hours * 60 mins)\n\n        const secondThreshold = 10 * 60;\n        let teachingMins = 0;\n        let outsideDutyMins = 0;\n        let holidayMins = 0; // If event falls on a national holiday, add the class duration to holiday minutes,\n        // otherwise, add to total teaching minutes\n\n        if (JapaneseHolidays.isHoliday(e.start) || e.start.getDay() === (0 || 1)) {\n          holidayMins = parseInt(e.duration);\n          teacher.holidayMins += holidayMins;\n        } else {\n          const totalTeachingMins = calcOutsideDutyMins(e.start, e.end, e.duration, dutyHoursByDate[date].startTime, dutyHoursByDate[date].endTime); // Add total teaching minutes and outside duty minutes to teacher object\n\n          teachingMins = totalTeachingMins.teachingMins;\n          teacher.teachingMins += teachingMins;\n          outsideDutyMins = totalTeachingMins.outsideDutyMins;\n          teacher.outsideDutyMins += outsideDutyMins;\n        } // Calculate hours worked over monthly thresholds one and two\n\n\n        if (teacher.teachingMins >= teacher.otThreshold + secondThreshold) {\n          teacher.overThresholdTwoMins += teacher.teachingMins - (teacher.otThreshold + secondThreshold);\n          teacher.overThresholdOneMins += secondThreshold;\n        } else if (teacher.teachingMins >= teacher.otThreshold) {\n          teacher.overThresholdOneMins += teacher.teachingMins - teacher.otThreshold;\n        } // Teaching minutes object to be added to hash table\n\n\n        const dateData = {\n          resourceId: teacher,\n          date: date,\n          day: day,\n          teachingMins: teachingMins,\n          outsideDutyMins: outsideDutyMins,\n          overThresholdOneMins: teacher.overThresholdOneMins,\n          overThresholdTwoMins: teacher.overThresholdTwoMins,\n          holidayMins: holidayMins,\n          travelAllowance: 0,\n          travelExpenses: 0\n        }; // If date already in hash table, add teaching minutes to existing keys, otherwise create\n        // a new date object\n\n        if (datesData[date]) {\n          datesData[date].teachingMins += dateData.teachingMins;\n          datesData[date].outsideDutyMins += dateData.outsideDutyMins;\n          datesData[date].overThresholdOneMins += dateData.overThresholdOneMins;\n          datesData[date].overThresholdTwoMins += dateData.overThresholdTwoMins;\n          datesData[date].holidayMins += dateData.holidayMins;\n          datesData[date].travelAllowance += dateData.travelAllowance;\n          datesData[date].travelExpenses += dateData.travelExpenses;\n        } else {\n          datesData[date] = dateData;\n        }\n      }\n    }\n  });\n  return datesData;\n};\n\nconst getEvents = async dateTime => {\n  return await axios.get(\"/lessons/\").then(res => {\n    if (res.data.length > 0) {\n      res.data.map(event => {\n        event.start = new Date(event.start);\n        event.end = new Date(event.end);\n\n        if (event.isLast) {\n          console.log(event.start.getTime(), dateTime);\n\n          if (dateTime >= event.start.getTime()) {\n            addEvent(event);\n          }\n        }\n      });\n      setEvents([...res.data, events[0]]);\n    }\n  }).catch(err => console.log(err));\n};\n\nconst addNewEvent = async event => {\n  const newEvents = [];\n\n  if (event.recur === true) {\n    const recurrences = getRecurrences(event);\n    recurrences.map(r => {\n      const newEvent = _objectSpread({}, event, {\n        start: r,\n        end: moment(r).add(event.duration, \"m\").toDate(),\n        isNewEvent: false,\n        isLast: false\n      });\n\n      if (JapaneseHolidays.isHoliday(r)) {\n        newEvent.isHoliday = true;\n      }\n\n      newEvents.push(newEvent);\n    });\n    newEvents[newEvents.length - 1].isLast = true;\n  }\n\n  if (JapaneseHolidays.isHoliday(event.start)) {\n    event = _objectSpread({}, event, {\n      isHoliday: true\n    });\n  }\n\n  event = _objectSpread({}, event, {\n    isNewEvent: true\n  });\n  newEvents.unshift(event);\n  await axios.post(\"/lessons/add\", newEvents).then(res => console.log(res.data)).catch(err => console.log(err));\n  return newEvents;\n};\n\nconst addPayment = async newPayment => {\n  return await axios.post(`/payments/add`, newPayment).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nexport { getRecurrences, getEvents, addEvent, addPayment, createPayPeriodData };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/helperFunctions.js"],"names":["axios","RRule","moment","addEvent","JapaneseHolidays","require","getRecurrences","event","now","Date","months_start","getFullYear","getMonth","months_end","rrule","freq","WEEKLY","count","interval","dtstart","start","twoMonthsRecurrences","between","shift","calcDutyHours","dutyHours","startTime","endTime","diff","add","calcOutsideDutyMins","eventStart","eventEnd","duration","dutyHoursStart","dutyHoursEnd","startDiff","endDiff","afterDhEndDiff","afterDhStartDiff","outsideDutyMins","teachingMins","regularTeachingMins","createPayPeriodData","events","teacher","monthStart","monthEnd","datesData","holidayMins","overThresholdOneMins","overThresholdTwoMins","monthEvents","filter","e","isBetween","resourceId","dutyHoursByDate","forEach","date","getDate","baseDutyHours","set","end","day","getDay","secondThreshold","isHoliday","parseInt","totalTeachingMins","otThreshold","dateData","travelAllowance","travelExpenses","getEvents","dateTime","get","then","res","data","length","map","isLast","console","log","getTime","setEvents","catch","err","addNewEvent","newEvents","recur","recurrences","r","newEvent","toDate","isNewEvent","push","unshift","post","addPayment","newPayment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { RRule } from \"rrule\";\nimport moment from \"moment\";\nimport { addEvent } from \"./hooks/useEventsState\";\n\nconst JapaneseHolidays = require(\"japanese-holidays\");\n\nconst getRecurrences = event => {\n  const now = new Date();\n  // Create start and end dates for the current month to calc\n  // teaching minutes\n  const months_start = new Date(now.getFullYear(), now.getMonth(), 1);\n  const months_end = new Date(now.getFullYear(), now.getMonth() + 2, 0);\n  // Create an array of DateTimes for the recurrence of events.\n  const rrule = new RRule({\n    freq: RRule.WEEKLY,\n    count: 26,\n    interval: 1,\n    dtstart: new Date(event.start)\n  });\n  const twoMonthsRecurrences = rrule.between(months_start, months_end);\n  twoMonthsRecurrences.shift();\n  return twoMonthsRecurrences;\n};\n\nconst calcDutyHours = (dutyHours, start) => {\n  if (moment(start) < dutyHours.startTime) {\n    dutyHours.startTime = moment(start);\n  }\n\n  // Add 9 hours to the DH start time to ensure a minimum of 9 DH\n  if (dutyHours.endTime.diff(dutyHours.startTime, \"hours\") < 9) {\n    dutyHours.endTime = moment(dutyHours.startTime).add(9, \"hours\");\n  }\n  return dutyHours;\n};\n\nconst calcOutsideDutyMins = (\n  eventStart,\n  eventEnd,\n  duration,\n  dutyHoursStart,\n  dutyHoursEnd\n) => {\n  // Calculate difference in hours between the duty hours start time and the lesson start time\n  const startDiff = dutyHoursStart.diff(eventStart, \"minutes\");\n  const endDiff = dutyHoursStart.diff(eventEnd, \"minutes\");\n\n  // Calculate difference in hours between the duty hours end time and the lesson end time\n  const afterDhEndDiff = -dutyHoursEnd.diff(eventEnd, \"minutes\");\n  const afterDhStartDiff = -dutyHoursEnd.diff(eventStart, \"minutes\");\n\n  let outsideDutyMins;\n  if (startDiff <= 0 && afterDhEndDiff <= 0) {\n    outsideDutyMins = 0;\n    return {\n      teachingMins: duration,\n      outsideDutyMins: outsideDutyMins\n    };\n  } else if (\n    (startDiff > 0 && endDiff > 0) ||\n    (afterDhEndDiff > 0 && afterDhStartDiff > 0)\n  ) {\n    return {\n      teachingMins: 0,\n      outsideDutyMins: duration\n    };\n  } else if (startDiff > 0) {\n    const regularTeachingMins = duration - startDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: startDiff\n    };\n  } else {\n    const regularTeachingMins = duration - afterDhEndDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: afterDhEndDiff\n    };\n  }\n};\n\nconst createPayPeriodData = (events, teacher, monthStart, monthEnd) => {\n  // Creates an object of dates containing minutes worked, by work type\n  const datesData = {};\n  teacher.teachingMins = 0;\n  teacher.outsideDutyMins = 0;\n  teacher.holidayMins = 0;\n  teacher.overThresholdOneMins = 0;\n  teacher.overThresholdTwoMins = 0;\n\n  const monthEvents = events.filter(e => {\n    return (\n      moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\") &&\n      e.resourceId === teacher.resourceId\n    );\n  });\n\n  const dutyHoursByDate = {};\n\n  monthEvents.forEach(e => {\n    const date = e.start.getDate();\n    // Set the base duty hours to noon to ensure at least 9 duty hours\n    if (!dutyHoursByDate[date]) {\n      const baseDutyHours = {\n        startTime: moment(e.start)\n          .set(\"hour\", 12)\n          .set(\"minutes\", 0),\n        endTime: moment(e.start)\n          .set(\"hour\", 12)\n          .set(\"minutes\", 0)\n      };\n      // Set the duty hours for the event's date\n      dutyHoursByDate[date] = calcDutyHours(baseDutyHours, e.start, e.end);\n    } else {\n      // Set the duty hours for the event's date\n      dutyHoursByDate[date] = calcDutyHours(\n        dutyHoursByDate[date],\n        e.start,\n        e.end\n      );\n    }\n  });\n\n  monthEvents.forEach(e => {\n    if (moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\")) {\n      if (e.resourceId === teacher.resourceId) {\n        const date = e.start.getDate();\n        const day = e.start.getDay();\n        // Calculate number of minutes to add to first threshold to calc second threshold. (10 hours * 60 mins)\n        const secondThreshold = 10 * 60;\n        let teachingMins = 0;\n        let outsideDutyMins = 0;\n        let holidayMins = 0;\n\n        // If event falls on a national holiday, add the class duration to holiday minutes,\n        // otherwise, add to total teaching minutes\n        if (\n          JapaneseHolidays.isHoliday(e.start) ||\n          e.start.getDay() === (0 || 1)\n        ) {\n          holidayMins = parseInt(e.duration);\n          teacher.holidayMins += holidayMins;\n        } else {\n          const totalTeachingMins = calcOutsideDutyMins(\n            e.start,\n            e.end,\n            e.duration,\n            dutyHoursByDate[date].startTime,\n            dutyHoursByDate[date].endTime\n          );\n\n          // Add total teaching minutes and outside duty minutes to teacher object\n          teachingMins = totalTeachingMins.teachingMins;\n          teacher.teachingMins += teachingMins;\n          outsideDutyMins = totalTeachingMins.outsideDutyMins;\n          teacher.outsideDutyMins += outsideDutyMins;\n        }\n        // Calculate hours worked over monthly thresholds one and two\n        if (teacher.teachingMins >= teacher.otThreshold + secondThreshold) {\n          teacher.overThresholdTwoMins +=\n            teacher.teachingMins - (teacher.otThreshold + secondThreshold);\n          teacher.overThresholdOneMins += secondThreshold;\n        } else if (teacher.teachingMins >= teacher.otThreshold) {\n          teacher.overThresholdOneMins +=\n            teacher.teachingMins - teacher.otThreshold;\n        }\n        // Teaching minutes object to be added to hash table\n        const dateData = {\n          resourceId: teacher,\n          date: date,\n          day: day,\n          teachingMins: teachingMins,\n          outsideDutyMins: outsideDutyMins,\n          overThresholdOneMins: teacher.overThresholdOneMins,\n          overThresholdTwoMins: teacher.overThresholdTwoMins,\n          holidayMins: holidayMins,\n          travelAllowance: 0,\n          travelExpenses: 0\n        };\n        // If date already in hash table, add teaching minutes to existing keys, otherwise create\n        // a new date object\n        if (datesData[date]) {\n          datesData[date].teachingMins += dateData.teachingMins;\n          datesData[date].outsideDutyMins += dateData.outsideDutyMins;\n          datesData[date].overThresholdOneMins += dateData.overThresholdOneMins;\n          datesData[date].overThresholdTwoMins += dateData.overThresholdTwoMins;\n          datesData[date].holidayMins += dateData.holidayMins;\n          datesData[date].travelAllowance += dateData.travelAllowance;\n          datesData[date].travelExpenses += dateData.travelExpenses;\n        } else {\n          datesData[date] = dateData;\n        }\n      }\n    }\n  });\n  return datesData;\n};\n\nconst getEvents = async dateTime => {\n  return await axios\n    .get(\"/lessons/\")\n    .then(res => {\n      if (res.data.length > 0) {\n        res.data.map(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n          if (event.isLast) {\n            console.log(event.start.getTime(), dateTime);\n            if (dateTime >= event.start.getTime()) {\n              addEvent(event);\n            }\n          }\n        });\n        setEvents([...res.data, events[0]]);\n      }\n    })\n    .catch(err => console.log(err));\n};\n\nconst addNewEvent = async event => {\n  const newEvents = [];\n  if (event.recur === true) {\n    const recurrences = getRecurrences(event);\n    recurrences.map(r => {\n      const newEvent = {\n        ...event,\n        start: r,\n        end: moment(r)\n          .add(event.duration, \"m\")\n          .toDate(),\n        isNewEvent: false,\n        isLast: false\n      };\n      if (JapaneseHolidays.isHoliday(r)) {\n        newEvent.isHoliday = true;\n      }\n      newEvents.push(newEvent);\n    });\n    newEvents[newEvents.length - 1].isLast = true;\n  }\n  if (JapaneseHolidays.isHoliday(event.start)) {\n    event = { ...event, isHoliday: true };\n  }\n  event = { ...event, isNewEvent: true };\n  newEvents.unshift(event);\n\n  await axios\n    .post(\"/lessons/add\", newEvents)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  return newEvents;\n};\n\nconst addPayment = async newPayment => {\n  return await axios\n    .post(`/payments/add`, newPayment)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nexport { getRecurrences, getEvents, addEvent, addPayment, createPayPeriodData };\n"]},"metadata":{},"sourceType":"module"}