{"ast":null,"code":"var MILI = 'milliseconds',\n    SECONDS = 'seconds',\n    MINUTES = 'minutes',\n    HOURS = 'hours',\n    DAY = 'day',\n    WEEK = 'week',\n    MONTH = 'month',\n    YEAR = 'year',\n    DECADE = 'decade',\n    CENTURY = 'century';\nexport function add(d, num, unit) {\n  d = new Date(d);\n\n  switch (unit) {\n    case MILI:\n      return milliseconds(d, milliseconds(d) + num);\n\n    case SECONDS:\n      return seconds(d, seconds(d) + num);\n\n    case MINUTES:\n      return minutes(d, minutes(d) + num);\n\n    case HOURS:\n      return hours(d, hours(d) + num);\n\n    case YEAR:\n      return year(d, year(d) + num);\n\n    case DAY:\n      return date(d, date(d) + num);\n\n    case WEEK:\n      return date(d, date(d) + 7 * num);\n\n    case MONTH:\n      return monthMath(d, num);\n\n    case DECADE:\n      return year(d, year(d) + num * 10);\n\n    case CENTURY:\n      return year(d, year(d) + num * 100);\n  }\n\n  throw new TypeError('Invalid units: \"' + unit + '\"');\n}\nexport function subtract(d, num, unit) {\n  return add(d, -num, unit);\n}\nexport function startOf(d, unit, firstOfWeek) {\n  d = new Date(d);\n\n  switch (unit) {\n    case CENTURY:\n    case DECADE:\n    case YEAR:\n      d = month(d, 0);\n\n    case MONTH:\n      d = date(d, 1);\n\n    case WEEK:\n    case DAY:\n      d = hours(d, 0);\n\n    case HOURS:\n      d = minutes(d, 0);\n\n    case MINUTES:\n      d = seconds(d, 0);\n\n    case SECONDS:\n      d = milliseconds(d, 0);\n  }\n\n  if (unit === DECADE) d = subtract(d, year(d) % 10, 'year');\n  if (unit === CENTURY) d = subtract(d, year(d) % 100, 'year');\n  if (unit === WEEK) d = weekday(d, 0, firstOfWeek);\n  return d;\n}\nexport function endOf(d, unit, firstOfWeek) {\n  d = new Date(d);\n  d = startOf(d, unit, firstOfWeek);\n  d = add(d, 1, unit);\n  d = subtract(d, 1, MILI);\n  return d;\n}\nexport var eq = createComparer(function (a, b) {\n  return a === b;\n});\nexport var neq = createComparer(function (a, b) {\n  return a !== b;\n});\nexport var gt = createComparer(function (a, b) {\n  return a > b;\n});\nexport var gte = createComparer(function (a, b) {\n  return a >= b;\n});\nexport var lt = createComparer(function (a, b) {\n  return a < b;\n});\nexport var lte = createComparer(function (a, b) {\n  return a <= b;\n});\nexport function min() {\n  return new Date(Math.min.apply(Math, arguments));\n}\nexport function max() {\n  return new Date(Math.max.apply(Math, arguments));\n}\nexport function inRange(day, min, max, unit) {\n  unit = unit || 'day';\n  return (!min || gte(day, min, unit)) && (!max || lte(day, max, unit));\n}\nexport var milliseconds = createAccessor('Milliseconds');\nexport var seconds = createAccessor('Seconds');\nexport var minutes = createAccessor('Minutes');\nexport var hours = createAccessor('Hours');\nexport var day = createAccessor('Day');\nexport var date = createAccessor('Date');\nexport var month = createAccessor('Month');\nexport var year = createAccessor('FullYear');\nexport function decade(d, val) {\n  return val === undefined ? year(startOf(d, DECADE)) : add(d, val + 10, YEAR);\n}\nexport function century(d, val) {\n  return val === undefined ? year(startOf(d, CENTURY)) : add(d, val + 100, YEAR);\n}\nexport function weekday(d, val, firstDay) {\n  var w = (day(d) + 7 - (firstDay || 0)) % 7;\n  return val === undefined ? w : add(d, val - w, DAY);\n}\nexport function diff(date1, date2, unit, asFloat) {\n  var dividend, divisor, result;\n\n  switch (unit) {\n    case MILI:\n    case SECONDS:\n    case MINUTES:\n    case HOURS:\n    case DAY:\n    case WEEK:\n      dividend = date2.getTime() - date1.getTime();\n      break;\n\n    case MONTH:\n    case YEAR:\n    case DECADE:\n    case CENTURY:\n      dividend = (year(date2) - year(date1)) * 12 + month(date2) - month(date1);\n      break;\n\n    default:\n      throw new TypeError('Invalid units: \"' + unit + '\"');\n  }\n\n  switch (unit) {\n    case MILI:\n      divisor = 1;\n      break;\n\n    case SECONDS:\n      divisor = 1000;\n      break;\n\n    case MINUTES:\n      divisor = 1000 * 60;\n      break;\n\n    case HOURS:\n      divisor = 1000 * 60 * 60;\n      break;\n\n    case DAY:\n      divisor = 1000 * 60 * 60 * 24;\n      break;\n\n    case WEEK:\n      divisor = 1000 * 60 * 60 * 24 * 7;\n      break;\n\n    case MONTH:\n      divisor = 1;\n      break;\n\n    case YEAR:\n      divisor = 12;\n      break;\n\n    case DECADE:\n      divisor = 120;\n      break;\n\n    case CENTURY:\n      divisor = 1200;\n      break;\n\n    default:\n      throw new TypeError('Invalid units: \"' + unit + '\"');\n  }\n\n  result = dividend / divisor;\n  return asFloat ? result : Math.round(result);\n}\n\nfunction monthMath(d, val) {\n  var current = month(d),\n      newMonth = current + val;\n  d = month(d, newMonth);\n\n  while (newMonth < 0) {\n    newMonth = 12 + newMonth;\n  } //month rollover\n\n\n  if (month(d) !== newMonth % 12) d = date(d, 0); //move to last of month\n\n  return d;\n}\n\nfunction createAccessor(method) {\n  var hourLength = function (method) {\n    switch (method) {\n      case 'Milliseconds':\n        return 3600000;\n\n      case 'Seconds':\n        return 3600;\n\n      case 'Minutes':\n        return 60;\n\n      case 'Hours':\n        return 1;\n\n      default:\n        return null;\n    }\n  }(method);\n\n  return function (d, val) {\n    if (val === undefined) return d['get' + method]();\n    var dateOut = new Date(d);\n    dateOut['set' + method](val);\n\n    if (hourLength && dateOut['get' + method]() != val && (method === 'Hours' || val >= hourLength && dateOut.getHours() - d.getHours() < Math.floor(val / hourLength))) {\n      //Skip DST hour, if it occurs\n      dateOut['set' + method](val + hourLength);\n    }\n\n    return dateOut;\n  };\n}\n\nfunction createComparer(operator) {\n  return function (a, b, unit) {\n    return operator(+startOf(a, unit), +startOf(b, unit));\n  };\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/node_modules/date-arithmetic/index.js"],"names":["MILI","SECONDS","MINUTES","HOURS","DAY","WEEK","MONTH","YEAR","DECADE","CENTURY","add","d","num","unit","Date","milliseconds","seconds","minutes","hours","year","date","monthMath","TypeError","subtract","startOf","firstOfWeek","month","weekday","endOf","eq","createComparer","a","b","neq","gt","gte","lt","lte","min","Math","apply","arguments","max","inRange","day","createAccessor","decade","val","undefined","century","firstDay","w","diff","date1","date2","asFloat","dividend","divisor","result","getTime","round","current","newMonth","method","hourLength","dateOut","getHours","floor","operator"],"mappings":"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","sourcesContent":["var MILI    = 'milliseconds'\n  , SECONDS = 'seconds'\n  , MINUTES = 'minutes'\n  , HOURS   = 'hours'\n  , DAY     = 'day'\n  , WEEK    = 'week'\n  , MONTH   = 'month'\n  , YEAR    = 'year'\n  , DECADE  = 'decade'\n  , CENTURY = 'century';\n\nexport function add(d, num, unit) {\n  d = new Date(d)\n\n  switch (unit){\n    case MILI:\n      return milliseconds(d, milliseconds(d) + num)\n    case SECONDS:\n      return seconds(d, seconds(d) + num)\n    case MINUTES:\n      return minutes(d, minutes(d) + num)\n    case HOURS:\n      return hours(d, hours(d) + num)\n    case YEAR:\n      return year(d, year(d) + num)\n    case DAY:\n      return date(d, date(d) + num)\n    case WEEK:\n      return date(d, date(d) + (7 * num))\n    case MONTH:\n      return monthMath(d, num)\n    case DECADE:\n      return year(d, year(d) + (num * 10))\n    case CENTURY:\n      return year(d, year(d) + (num * 100))\n  }\n\n  throw new TypeError('Invalid units: \"' + unit + '\"')\n}\n\nexport function subtract(d, num, unit) {\n  return add(d, -num, unit)\n}\n\nexport function startOf(d, unit, firstOfWeek) {\n  d = new Date(d)\n\n  switch (unit) {\n    case CENTURY:\n    case DECADE:\n    case YEAR:\n        d = month(d, 0);\n    case MONTH:\n        d = date(d, 1);\n    case WEEK:\n    case DAY:\n        d = hours(d, 0);\n    case HOURS:\n        d = minutes(d, 0);\n    case MINUTES:\n        d = seconds(d, 0);\n    case SECONDS:\n        d = milliseconds(d, 0);\n  }\n\n  if (unit === DECADE)\n    d = subtract(d, year(d) % 10, 'year')\n\n  if (unit === CENTURY)\n    d = subtract(d, year(d) % 100, 'year')\n\n  if (unit === WEEK)\n    d = weekday(d, 0, firstOfWeek);\n\n  return d\n}\n\nexport function endOf(d, unit, firstOfWeek){\n  d = new Date(d)\n  d = startOf(d, unit, firstOfWeek)\n  d = add(d, 1, unit)\n  d = subtract(d, 1, MILI)\n  return d\n}\n\nexport var eq =  createComparer(function(a, b){ return a === b })\nexport var neq = createComparer(function(a, b){ return a !== b })\nexport var gt =  createComparer(function(a, b){ return a > b })\nexport var gte = createComparer(function(a, b){ return a >= b })\nexport var lt =  createComparer(function(a, b){ return a < b })\nexport var lte = createComparer(function(a, b){ return a <= b })\n\nexport function min(){\n  return new Date(Math.min.apply(Math, arguments))\n}\n\nexport function max(){\n  return new Date(Math.max.apply(Math, arguments))\n}\n\nexport function inRange(day, min, max, unit){\n  unit = unit || 'day'\n\n  return (!min || gte(day, min, unit))\n      && (!max || lte(day, max, unit))\n}\n\nexport var milliseconds = createAccessor('Milliseconds')\nexport var seconds =      createAccessor('Seconds')\nexport var minutes =      createAccessor('Minutes')\nexport var hours =        createAccessor('Hours')\nexport var day =          createAccessor('Day')\nexport var date =         createAccessor('Date')\nexport var month =        createAccessor('Month')\nexport var year =         createAccessor('FullYear')\n\nexport function decade(d, val) {\n  return val === undefined\n    ? year(startOf(d, DECADE))\n    : add(d, val + 10, YEAR);\n}\n\nexport function century(d, val) {\n  return val === undefined\n    ? year(startOf(d, CENTURY))\n    : add(d, val + 100, YEAR);\n}\n\nexport function weekday(d, val, firstDay) {\n    var w = (day(d) + 7 - (firstDay || 0) ) % 7;\n\n    return val === undefined\n      ? w\n      : add(d, val - w, DAY);\n}\n\nexport function diff(date1, date2, unit, asFloat) {\n  var dividend, divisor, result;\n\n  switch (unit) {\n    case MILI:\n    case SECONDS:\n    case MINUTES:\n    case HOURS:\n    case DAY:\n    case WEEK:\n      dividend = date2.getTime() - date1.getTime(); break;\n    case MONTH:\n    case YEAR:\n    case DECADE:\n    case CENTURY:\n      dividend = (year(date2) - year(date1)) * 12 + month(date2) - month(date1); break;\n    default:\n      throw new TypeError('Invalid units: \"' + unit + '\"');\n  }\n\n  switch (unit) {\n    case MILI:\n        divisor = 1; break;\n    case SECONDS:\n        divisor = 1000; break;\n    case MINUTES:\n        divisor = 1000 * 60; break;\n    case HOURS:\n        divisor = 1000 * 60 * 60; break;\n    case DAY:\n        divisor = 1000 * 60 * 60 * 24; break;\n    case WEEK:\n        divisor = 1000 * 60 * 60 * 24 * 7; break;\n    case MONTH:\n        divisor = 1; break;\n    case YEAR:\n        divisor = 12; break;\n    case DECADE:\n        divisor = 120; break;\n    case CENTURY:\n        divisor = 1200; break;\n    default:\n      throw new TypeError('Invalid units: \"' + unit + '\"');\n  }\n\n  result = dividend / divisor;\n\n  return asFloat ? result : Math.round(result);\n}\n\nfunction monthMath(d, val){\n  var current = month(d)\n    , newMonth  = (current + val);\n\n    d = month(d, newMonth)\n\n    while (newMonth < 0 ) newMonth = 12 + newMonth\n\n    //month rollover\n    if ( month(d) !== ( newMonth % 12))\n      d = date(d, 0) //move to last of month\n\n    return d\n}\n\nfunction createAccessor(method){\n  var hourLength = (function(method) {  \n    switch(method) {\n      case 'Milliseconds':\n        return 3600000;\n      case 'Seconds':\n        return 3600;\n      case 'Minutes':\n        return 60;\n      case 'Hours':\n        return 1;\n      default:\n        return null;\n    }\n  })(method);\n  \n  return function(d, val){\n    if (val === undefined)\n      return d['get' + method]()\n\n    var dateOut = new Date(d)\n    dateOut['set' + method](val)\n    \n    if(hourLength && dateOut['get'+method]() != val && (method === 'Hours' || val >=hourLength && (dateOut.getHours()-d.getHours()<Math.floor(val/hourLength))) ){\n      //Skip DST hour, if it occurs\n      dateOut['set'+method](val+hourLength);\n    }\n    \n    return dateOut\n  }\n}\n\nfunction createComparer(operator) {\n  return function (a, b, unit) {\n    return operator(+startOf(a, unit), +startOf(b, unit))\n  };\n}\n"]},"metadata":{},"sourceType":"module"}