{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/Payroll.js\";\nimport React, { useState, useContext, useRef } from \"react\";\nimport moment from \"moment\";\nimport ReactToPrint from \"react-to-print\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport PayrollSheet from \"./PayrollSheet\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { blue } from \"@material-ui/core/colors\";\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  },\n  btn: {\n    color: \"#fff\",\n    background: \"rgb(20,71,207)\",\n    background: \"linear-gradient(0deg, rgba(20,71,207,1) 7%, rgba(49,119,254,1) 100%)\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    padding: \".3rem .5rem\",\n    minWidth: \"4rem\",\n    margin: \".2rem auto .1rem\"\n  }\n}));\n\nfunction createData(date, day, teachingMins, overThresholdOneMins, overThresholdTwoMins, outsideDutyMins, holidayMins, travelAllowance, travelExpenses) {\n  return {\n    date,\n    day,\n    teachingMins,\n    overThresholdOneMins,\n    overThresholdTwoMins,\n    outsideDutyMins,\n    holidayMins,\n    travelAllowance,\n    travelExpenses\n  };\n}\n\nconst Payroll = props => {\n  const componentRef = useRef();\n  const classes = useStyles();\n\n  const _useContext = useContext(TeachersContext),\n        teachers = _useContext.teachers;\n\n  const _useContext2 = useContext(EventsContext),\n        events = _useContext2.events;\n\n  const _useState = useState(\"teacherSelect\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        stage = _useState2[0],\n        setStage = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentTeacher = _useState6[0],\n        setCurrentTeacher = _useState6[1];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isLoading = _useToggleState2[0],\n        toggleIsLoading = _useToggleState2[1];\n\n  const setFormType = props.setFormType;\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  const daysInMonth = moment(now).daysInMonth();\n\n  const showPayrollSheet = teacher => {\n    setCurrentTeacher(teacher);\n    toggleIsLoading(true);\n    const teachingMinsByDate = createPayPeriodData(events, teacher, monthStart, monthEnd);\n    console.log(teachingMinsByDate[25]);\n    const rows = [];\n\n    for (let i = 1 + 1; i <= daysInMonth + 1; i++) {\n      let newRow;\n\n      if (teachingMinsByDate[i]) {\n        newRow = createData(i, moment(new Date(now.getFullYear(), now.getMonth())).set(\"date\", i).format(\"ddd\"), teachingMinsByDate[i].teachingMins, teachingMinsByDate[i].outsideDutyMins, teachingMinsByDate[i].holidayMins, teachingMinsByDate[i].travelAllowance, teachingMinsByDate[i].travelExpenses);\n      } else {\n        newRow = createData(i, moment(new Date(now.getFullYear(), now.getMonth())).set(\"date\", i).format(\"ddd\"), 0, 0, 0, 0, 0, 0, 0);\n      }\n\n      rows.push(newRow);\n    }\n\n    setData({\n      rows: rows,\n      overThresholdOneMins: teachingMinsByDate.overThresholdOneMins,\n      overThresholdTwoMins: teachingMinsByDate.overThresholdTwoMins\n    });\n    setStage(\"payrollSheet\");\n    toggleIsLoading(false);\n  };\n\n  const hideForm = () => {\n    setStage(\"\");\n    setFormType(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    onClose: hideForm,\n    \"aria-labelledby\": \"teacher-select-title\",\n    open: stage === \"teacherSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"teacher-select-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Payroll: Select a teacher\"), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, teachers.map(t => React.createElement(ListItem, {\n    button: true,\n    onClick: () => showPayrollSheet(t),\n    key: t.resourceId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(PersonIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: t.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }))))), React.createElement(Dialog, {\n    onClose: hideForm,\n    \"aria-labelledby\": \"payroll-sheet-dialog\",\n    open: stage === \"payrollSheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(PayrollSheet, {\n    classes: classes,\n    data: data,\n    currentTeacher: currentTeacher,\n    ref: componentRef,\n    paymentPeriodStart: monthStart,\n    paymentPeriodEnd: monthEnd,\n    paidVacationDays: 0,\n    unpaidVacationDays: 0,\n    paidSickDays: 0,\n    unpaidSickDays: 0,\n    taxRefund: 0,\n    travelAllowance: 0,\n    travelExpenses: 0,\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(ReactToPrint, {\n    trigger: () => React.createElement(\"button\", {\n      className: classes.btn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Print\"),\n    content: () => componentRef.current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })));\n};\n\nexport default Payroll;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/Payroll.js"],"names":["React","useState","useContext","useRef","moment","ReactToPrint","useToggleState","EventsContext","TeachersContext","createPayPeriodData","PayrollSheet","makeStyles","Avatar","List","ListItem","ListItemAvatar","ListItemText","Dialog","PersonIcon","DialogTitle","blue","useStyles","theme","avatar","backgroundColor","color","btn","background","border","borderRadius","padding","minWidth","margin","createData","date","day","teachingMins","overThresholdOneMins","overThresholdTwoMins","outsideDutyMins","holidayMins","travelAllowance","travelExpenses","Payroll","props","componentRef","classes","teachers","events","stage","setStage","data","setData","currentTeacher","setCurrentTeacher","isLoading","toggleIsLoading","setFormType","now","Date","monthStart","getFullYear","getMonth","monthEnd","daysInMonth","showPayrollSheet","teacher","teachingMinsByDate","console","log","rows","i","newRow","set","format","push","hideForm","map","t","resourceId","name","current"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport moment from \"moment\";\nimport ReactToPrint from \"react-to-print\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport PayrollSheet from \"./PayrollSheet\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n  btn: {\n    color: \"#fff\",\n    background: \"rgb(20,71,207)\",\n    background:\n      \"linear-gradient(0deg, rgba(20,71,207,1) 7%, rgba(49,119,254,1) 100%)\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    padding: \".3rem .5rem\",\n    minWidth: \"4rem\",\n    margin: \".2rem auto .1rem\",\n  },\n}));\n\nfunction createData(\n  date,\n  day,\n  teachingMins,\n  overThresholdOneMins,\n  overThresholdTwoMins,\n  outsideDutyMins,\n  holidayMins,\n  travelAllowance,\n  travelExpenses\n) {\n  return {\n    date,\n    day,\n    teachingMins,\n    overThresholdOneMins,\n    overThresholdTwoMins,\n    outsideDutyMins,\n    holidayMins,\n    travelAllowance,\n    travelExpenses,\n  };\n}\n\nconst Payroll = (props) => {\n  const componentRef = useRef();\n  const classes = useStyles();\n\n  const { teachers } = useContext(TeachersContext);\n  const { events } = useContext(EventsContext);\n  const [stage, setStage] = useState(\"teacherSelect\");\n  const [data, setData] = useState({});\n  const [currentTeacher, setCurrentTeacher] = useState(\"\");\n  const [isLoading, toggleIsLoading] = useToggleState(false);\n  const { setFormType } = props;\n\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  const daysInMonth = moment(now).daysInMonth();\n\n  const showPayrollSheet = (teacher) => {\n    setCurrentTeacher(teacher);\n    toggleIsLoading(true);\n    const teachingMinsByDate = createPayPeriodData(\n      events,\n      teacher,\n      monthStart,\n      monthEnd\n    );\n    console.log(teachingMinsByDate[25]);\n\n    const rows = [];\n    for (let i = 1 + 1; i <= daysInMonth + 1; i++) {\n      let newRow;\n      if (teachingMinsByDate[i]) {\n        newRow = createData(\n          i,\n          moment(new Date(now.getFullYear(), now.getMonth()))\n            .set(\"date\", i)\n            .format(\"ddd\"),\n          teachingMinsByDate[i].teachingMins,\n          teachingMinsByDate[i].outsideDutyMins,\n          teachingMinsByDate[i].holidayMins,\n          teachingMinsByDate[i].travelAllowance,\n          teachingMinsByDate[i].travelExpenses\n        );\n      } else {\n        newRow = createData(\n          i,\n          moment(new Date(now.getFullYear(), now.getMonth()))\n            .set(\"date\", i)\n            .format(\"ddd\"),\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0\n        );\n      }\n      rows.push(newRow);\n    }\n    setData({\n      rows: rows,\n      overThresholdOneMins: teachingMinsByDate.overThresholdOneMins,\n      overThresholdTwoMins: teachingMinsByDate.overThresholdTwoMins,\n    });\n    setStage(\"payrollSheet\");\n    toggleIsLoading(false);\n  };\n\n  const hideForm = () => {\n    setStage(\"\");\n    setFormType(\"\");\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={hideForm}\n        aria-labelledby=\"teacher-select-title\"\n        open={stage === \"teacherSelect\"}\n      >\n        <DialogTitle id=\"teacher-select-title\">\n          Payroll: Select a teacher\n        </DialogTitle>\n        <List>\n          {teachers.map((t) => (\n            <ListItem\n              button\n              onClick={() => showPayrollSheet(t)}\n              key={t.resourceId}\n            >\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={t.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Dialog>\n      <Dialog\n        onClose={hideForm}\n        aria-labelledby=\"payroll-sheet-dialog\"\n        open={stage === \"payrollSheet\"}\n      >\n        <PayrollSheet\n          classes={classes}\n          data={data}\n          currentTeacher={currentTeacher}\n          ref={componentRef}\n          paymentPeriodStart={monthStart}\n          paymentPeriodEnd={monthEnd}\n          paidVacationDays={0}\n          unpaidVacationDays={0}\n          paidSickDays={0}\n          unpaidSickDays={0}\n          taxRefund={0}\n          travelAllowance={0}\n          travelExpenses={0}\n          setFormType={setFormType}\n        />\n        <ReactToPrint\n          trigger={() => <button className={classes.btn}>Print</button>}\n          content={() => componentRef.current}\n        />\n      </Dialog>\n    </div>\n  );\n};\nexport default Payroll;\n"]},"metadata":{},"sourceType":"module"}