{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport axios from \"axios\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport uuid from \"uuid/v4\";\n\nconst reducer = async (state, action) => {\n  const teacher = action.teacher && action.Teacher;\n  const events = action.events && action.events;\n\n  switch (action.type) {\n    case \"GET_TEACHERS\":\n      let teachersArr;\n      await axios.get(\"/teachers/\").then(res => {\n        teachersArr = res.data;\n      }).catch(err => console.log(err));\n      return [...state, teachersArr];\n\n    case \"ADD_TEACHER\":\n      await axios.post(\"/teachers/add\", teacher).then(res => console.log(res.data)).catch(err => console.log(err));\n      return [...state, {\n        id: uuid(),\n        teacher\n      }];\n\n    case \"DELETE_TEACHER\":\n      await axios.delete(`/teachers/delete/${teacher._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n      return state.filter(t => t.id !== action.id);\n\n    case \"UPDATE_TEACHER\":\n      await axios.put(`/teachers/update/${teacher._id}`, teacher).then(res => console.log(res.data)).catch(err => console.log(err));\n      return state.map(t => t.id === action.id ? _objectSpread({}, t, {\n        resourceTitle: t.resourceTitle,\n        name: t.name,\n        familyName: t.familyName,\n        teachingMins: t.teachingMins,\n        holidayMins: t.holidayMins,\n        outsideDutyMins: t.outsideDutyMins,\n        otThreshold: t.otThreshold,\n        overThresholdOneMins: t.overThresholdOneMins,\n        overThresholdTwoMins: t.overThresholdTwoMins\n      }) : t);\n\n    case \"CALC_TEACHING_MINS\":\n      const now = new Date(); // Create start and end dates for the current month to calc\n      // teaching minutes\n\n      const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n      const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n      if (teachers.length > 0) {\n        // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n        state.forEach(teacher => {\n          teacher.teachingMins = 0;\n          teacher.outsideDutyMins = 0;\n          teacher.holidayMins = 0;\n          teacher.overThresholdOneMins = 0;\n          teacher.overThresholdTwoMins = 0;\n        });\n        teachers.forEach(teacher => {\n          createPayPeriodData(events, teacher, monthStart, monthEnd);\n          updateTeacher(teacher);\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/reducers/teachersReducer.js"],"names":["axios","createPayPeriodData","uuid","reducer","state","action","teacher","Teacher","events","type","teachersArr","get","then","res","data","catch","err","console","log","post","id","delete","_id","filter","t","put","map","resourceTitle","name","familyName","teachingMins","holidayMins","outsideDutyMins","otThreshold","overThresholdOneMins","overThresholdTwoMins","now","Date","monthStart","getFullYear","getMonth","monthEnd","teachers","length","forEach","updateTeacher"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport uuid from \"uuid/v4\";\n\nconst reducer = async (state, action) => {\n  const teacher = action.teacher && action.Teacher;\n  const events = action.events && action.events;\n\n  switch (action.type) {\n    case \"GET_TEACHERS\":\n      let teachersArr;\n      await axios\n        .get(\"/teachers/\")\n        .then(res => {\n          teachersArr = res.data;\n        })\n        .catch(err => console.log(err));\n      return [...state, teachersArr];\n\n    case \"ADD_TEACHER\":\n      await axios\n        .post(\"/teachers/add\", teacher)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n      return [...state, { id: uuid(), teacher }];\n\n    case \"DELETE_TEACHER\":\n      await axios\n        .delete(`/teachers/delete/${teacher._id}`)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n      return state.filter(t => t.id !== action.id);\n\n    case \"UPDATE_TEACHER\":\n      await axios\n        .put(`/teachers/update/${teacher._id}`, teacher)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n      return state.map(t =>\n        t.id === action.id\n          ? {\n              ...t,\n              resourceTitle: t.resourceTitle,\n              name: t.name,\n              familyName: t.familyName,\n              teachingMins: t.teachingMins,\n              holidayMins: t.holidayMins,\n              outsideDutyMins: t.outsideDutyMins,\n              otThreshold: t.otThreshold,\n              overThresholdOneMins: t.overThresholdOneMins,\n              overThresholdTwoMins: t.overThresholdTwoMins\n            }\n          : t\n      );\n\n    case \"CALC_TEACHING_MINS\":\n      const now = new Date();\n      // Create start and end dates for the current month to calc\n      // teaching minutes\n      const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n      const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n      if (teachers.length > 0) {\n        // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n        state.forEach(teacher => {\n          teacher.teachingMins = 0;\n          teacher.outsideDutyMins = 0;\n          teacher.holidayMins = 0;\n          teacher.overThresholdOneMins = 0;\n          teacher.overThresholdTwoMins = 0;\n        });\n\n        teachers.forEach(teacher => {\n          createPayPeriodData(events, teacher, monthStart, monthEnd);\n          updateTeacher(teacher);\n        });\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}