{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { addNewEvent, getRecurrences } from \"../helperFunctions\";\nimport { UserContext } from \"../context/UserContext\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\nexport default function (initialEvents) {\n  const _useContext = useContext(UserContext),\n        user = _useContext.user;\n\n  const _useState = useState(initialEvents),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  return {\n    events,\n    getEvents: async function (dateTime) {\n      await axios.get(\"/api/lessons\", tokenConfig(user)).then(res => {\n        res.data.forEach(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end); // Check if last recurrence, and if so, create two more months of recurrences\n\n          if (event.isLast) {\n            if (dateTime >= event.start.getTime()) {\n              const newEvents = addNewEvent(event);\n              res.data = [...res.data, newEvents];\n            }\n          }\n\n          console.log(res.data);\n        });\n        return setEvents(res.data);\n      }).catch(err => console.log(err));\n    },\n    addEvent: function (event) {\n      const newEvents = addNewEvent(event);\n      const updatedEvents = [...events, newEvents];\n      axios.post(\"/api/lessons/add\", newEvents, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      setEvents(updatedEvents);\n    },\n    deleteEvent: function (event) {\n      const updatedEvents = events.filter(evt => evt._id !== event._id);\n      axios.delete(`/api/lessons/delete/${event._id}`, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      setEvents(updatedEvents);\n    },\n    editEvent: function (event, editedEvent) {\n      const idx = events.findIndex(evt => evt._id === event._id);\n      const updatedEvents = events.splice(idx, 0, editedEvent);\n      console.log(idx, updatedEvents);\n      axios.put(`/api/lessons/update/${event._id}`, editedEvent, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      setEvents(updatedEvents);\n    }\n  };\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/hooks/useEventsState.js"],"names":["useState","useContext","axios","addNewEvent","getRecurrences","UserContext","tokenConfig","initialEvents","user","events","setEvents","getEvents","dateTime","get","then","res","data","forEach","event","start","Date","end","isLast","getTime","newEvents","console","log","catch","err","addEvent","updatedEvents","post","deleteEvent","filter","evt","_id","delete","editEvent","editedEvent","idx","findIndex","splice","put"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { addNewEvent, getRecurrences } from \"../helperFunctions\";\nimport { UserContext } from \"../context/UserContext\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\n\nexport default function (initialEvents) {\n  const { user } = useContext(UserContext);\n  const [events, setEvents] = useState(initialEvents);\n\n  return {\n    events,\n    getEvents: async function (dateTime) {\n      await axios\n        .get(\"/api/lessons\", tokenConfig(user))\n        .then((res) => {\n          res.data.forEach((event) => {\n            event.start = new Date(event.start);\n            event.end = new Date(event.end);\n            // Check if last recurrence, and if so, create two more months of recurrences\n            if (event.isLast) {\n              if (dateTime >= event.start.getTime()) {\n                const newEvents = addNewEvent(event);\n                res.data = [...res.data, newEvents];\n              }\n            }\n            console.log(res.data);\n          });\n          return setEvents(res.data);\n        })\n        .catch((err) => console.log(err));\n    },\n    addEvent: function (event) {\n      const newEvents = addNewEvent(event);\n      const updatedEvents = [...events, newEvents];\n      axios\n        .post(\"/api/lessons/add\", newEvents, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      setEvents(updatedEvents);\n    },\n    deleteEvent: function (event) {\n      const updatedEvents = events.filter((evt) => evt._id !== event._id);\n      axios\n        .delete(`/api/lessons/delete/${event._id}`, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      setEvents(updatedEvents);\n    },\n    editEvent: function (event, editedEvent) {\n      const idx = events.findIndex((evt) => evt._id === event._id);\n      const updatedEvents = events.splice(idx, 0, editedEvent);\n      console.log(idx, updatedEvents);\n      axios\n        .put(`/api/lessons/update/${event._id}`, editedEvent, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      setEvents(updatedEvents);\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}