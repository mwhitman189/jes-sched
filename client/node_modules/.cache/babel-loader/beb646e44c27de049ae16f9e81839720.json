{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nexport default (initialEvents => {\n  const _useState = useState([{\n    id: 1,\n    title: \"Dummy Event to fix drag and drop bug\",\n    start: new Date(),\n    end: new Date(),\n    room: 2,\n    duration: 0,\n    resourceId: 1,\n    hide: true\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  return {\n    events,\n    getEvents: async () => {\n      return await axios.get(\"/lessons/\").then(res => {\n        if (res.data.length > 0) {\n          res.data.map(event => {\n            event.start = new Date(event.start);\n            event.end = new Date(event.end);\n          });\n          setEvents([...res.data, events[0]]);\n        }\n      }).catch(err => console.log(err));\n    },\n    addEvent: async event => {\n      const newEvents = [];\n\n      if (event.recur === true) {\n        const recurrences = getRecurrences(event);\n        recurrences.map(r => {\n          const newEvent = _objectSpread({}, event, {\n            start: r,\n            end: moment(r).add(event.duration, \"m\").toDate(),\n            isNewEvent: false\n          });\n\n          if (JapaneseHolidays.isHoliday(r)) {\n            newEvent.isHoliday = true;\n          }\n\n          newEvents.push(newEvent);\n        });\n      }\n\n      if (JapaneseHolidays.isHoliday(event.start)) {\n        event = _objectSpread({}, event, {\n          isHoliday: true\n        });\n      }\n\n      event = _objectSpread({}, event, {\n        isNewEvent: true\n      });\n      newEvents.push(event);\n      await axios.post(\"/lessons/add\", newEvents).then(res => console.log(res.data)).catch(err => console.log(err));\n      return getEvents(events, setEvents);\n    },\n    deleteEvent: async event => {\n      const newEvents = events.filter(evt => evt._id !== event._id);\n      setEvents(newEvents);\n      return await axios.delete(`/lessons/delete/${event._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n    },\n    changeEvent: async (event, editedEvent) => {\n      const idx = events.findIndex(e => e._id === event._id);\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, editedEvent);\n      setEvents(nextEvents);\n      return await axios.put(`/lessons/update/${event._id}`, editedEvent).then(res => console.log(res.data)).catch(err => console.log(err));\n    }\n  };\n});","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/hooks/useEventsState.js"],"names":["useState","initialEvents","id","title","start","Date","end","room","duration","resourceId","hide","events","setEvents","getEvents","axios","get","then","res","data","length","map","event","catch","err","console","log","addEvent","newEvents","recur","recurrences","getRecurrences","r","newEvent","moment","add","toDate","isNewEvent","JapaneseHolidays","isHoliday","push","post","deleteEvent","filter","evt","_id","delete","changeEvent","editedEvent","idx","findIndex","e","nextEvents","splice","put"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nexport default initialEvents => {\n  const [events, setEvents] = useState([\n    {\n      id: 1,\n      title: \"Dummy Event to fix drag and drop bug\",\n      start: new Date(),\n      end: new Date(),\n      room: 2,\n      duration: 0,\n      resourceId: 1,\n      hide: true\n    }\n  ]);\n\n  return {\n    events,\n    getEvents: async () => {\n      return await axios\n        .get(\"/lessons/\")\n        .then(res => {\n          if (res.data.length > 0) {\n            res.data.map(event => {\n              event.start = new Date(event.start);\n              event.end = new Date(event.end);\n            });\n            setEvents([...res.data, events[0]]);\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    addEvent: async event => {\n      const newEvents = [];\n      if (event.recur === true) {\n        const recurrences = getRecurrences(event);\n        recurrences.map(r => {\n          const newEvent = {\n            ...event,\n            start: r,\n            end: moment(r)\n              .add(event.duration, \"m\")\n              .toDate(),\n            isNewEvent: false\n          };\n          if (JapaneseHolidays.isHoliday(r)) {\n            newEvent.isHoliday = true;\n          }\n          newEvents.push(newEvent);\n        });\n      }\n      if (JapaneseHolidays.isHoliday(event.start)) {\n        event = { ...event, isHoliday: true };\n      }\n      event = { ...event, isNewEvent: true };\n      newEvents.push(event);\n      await axios\n        .post(\"/lessons/add\", newEvents)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n      return getEvents(events, setEvents);\n    },\n    deleteEvent: async event => {\n      const newEvents = events.filter(evt => evt._id !== event._id);\n      setEvents(newEvents);\n      return await axios\n        .delete(`/lessons/delete/${event._id}`)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n    },\n    changeEvent: async (event, editedEvent) => {\n      const idx = events.findIndex(e => e._id === event._id);\n      const nextEvents = [...events];\n\n      nextEvents.splice(idx, 1, editedEvent);\n      setEvents(nextEvents);\n\n      return await axios\n        .put(`/lessons/update/${event._id}`, editedEvent)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}