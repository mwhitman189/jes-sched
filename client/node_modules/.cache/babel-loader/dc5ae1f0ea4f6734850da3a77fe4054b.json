{"ast":null,"code":"import moment from \"moment\";\n\nfunction validateRoom(events, room, start, duration) {\n  return events.every(event => {\n    if (testDateOverlap([event.start, event.end], [moment(new Date(start)), moment(moment(new Date(start)).add(duration, \"m\").toDate())])) {\n      return parseInt(event.room) !== parseInt(room);\n    }\n\n    return true;\n  });\n}\n\nfunction validateTeacher(events, teacher, start, duration) {\n  return events.every(event => {\n    if (testDateOverlap([event.start, event.end], [moment(new Date(start)), moment(moment(new Date(start)).add(duration, \"m\").toDate())])) {\n      return parseInt(event.resourceId) !== parseInt(teacher);\n    }\n\n    return true;\n  });\n}\n\nfunction testDateOverlap(dateArr, testDateArr) {\n  if (testDateArr[0].isBetween(dateArr[0], dateArr[1], null, \"[]\") || testDateArr[1].isBetween(dateArr[0], dateArr[1], null, \"[]\")) {\n    return true;\n  }\n}\n\nfunction validateRoomAndResource(events, event, start) {\n  const idx = events.indexOf(event);\n  const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n  if (!validateRoom(otherEvents, event.room, start, parseInt(event.duration))) {\n    setSelectedEvent(event);\n    handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n    return 1;\n  }\n\n  if (!validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))) {\n    setSelectedEvent(event);\n    handleToggleSnackbar(\"Teacher Conflict. Please choose another teacher or time\");\n    return 1;\n  }\n}\n\nexport { validateRoomAndResource };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/validators.js"],"names":["moment","validateRoom","events","room","start","duration","every","event","testDateOverlap","end","Date","add","toDate","parseInt","validateTeacher","teacher","resourceId","dateArr","testDateArr","isBetween","validateRoomAndResource","idx","indexOf","otherEvents","slice","setSelectedEvent","handleToggleSnackbar"],"mappings":"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","sourcesContent":["import moment from \"moment\";\n\nfunction validateRoom(events, room, start, duration) {\n  return events.every(event => {\n    if (\n      testDateOverlap(\n        [event.start, event.end],\n        [\n          moment(new Date(start)),\n          moment(\n            moment(new Date(start))\n              .add(duration, \"m\")\n              .toDate()\n          )\n        ]\n      )\n    ) {\n      return parseInt(event.room) !== parseInt(room);\n    }\n    return true;\n  });\n}\n\nfunction validateTeacher(events, teacher, start, duration) {\n  return events.every(event => {\n    if (\n      testDateOverlap(\n        [event.start, event.end],\n        [\n          moment(new Date(start)),\n          moment(\n            moment(new Date(start))\n              .add(duration, \"m\")\n              .toDate()\n          )\n        ]\n      )\n    ) {\n      return parseInt(event.resourceId) !== parseInt(teacher);\n    }\n    return true;\n  });\n}\n\nfunction testDateOverlap(dateArr, testDateArr) {\n  if (\n    testDateArr[0].isBetween(dateArr[0], dateArr[1], null, \"[]\") ||\n    testDateArr[1].isBetween(dateArr[0], dateArr[1], null, \"[]\")\n  ) {\n    return true;\n  }\n}\n\nfunction validateRoomAndResource(events, event, start) {\n  const idx = events.indexOf(event);\n  const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n  if (!validateRoom(otherEvents, event.room, start, parseInt(event.duration))) {\n    setSelectedEvent(event);\n    handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n    return 1;\n  }\n  if (\n    !validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))\n  ) {\n    setSelectedEvent(event);\n    handleToggleSnackbar(\n      \"Teacher Conflict. Please choose another teacher or time\"\n    );\n    return 1;\n  }\n}\n\nexport { validateRoomAndResource };\n"]},"metadata":{},"sourceType":"module"}