{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/Schedule.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport EventForm from \"./EventForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport useFormState from \"../hooks/useInputState\";\nimport useToggle from \"../hooks/useToggle\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const _useContext = useContext(TeachersContext),\n        teachers = _useContext.teachers,\n        setTeachers = _useContext.setTeachers,\n        updateTeacher = _useContext.updateTeacher,\n        addTeachingMins = _useContext.addTeachingMins;\n\n  const _useContext2 = useContext(EventsContext),\n        events = _useContext2.events,\n        setEvents = _useContext2.setEvents,\n        getEvents = _useContext2.getEvents,\n        addEvent = _useContext2.addEvent;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        formType = _useState2[0],\n        setFormType = _useState2[1];\n\n  const _useFormState = useFormState(new Date()),\n        _useFormState2 = _slicedToArray(_useFormState, 3),\n        startTime = _useFormState2[0],\n        updateStartTime = _useFormState2[1],\n        resetStartTime = _useFormState2[2];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedEvent = _useState4[0],\n        setSelectedEvent = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isOpen = _useState6[0],\n        setIsOpen = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedTeacher = _useState10[0],\n        setSelectedTeacher = _useState10[1];\n\n  const _useToggle = useToggle(false),\n        _useToggle2 = _slicedToArray(_useToggle, 2),\n        isRecurring = _useToggle2[0],\n        toggleIsRecurring = _useToggle2[1];\n\n  useEffect(() => {\n    getEvents(events, setEvents);\n    getTeachers(events, teachers, setTeachers);\n    addTeachingMins(events, teachers, setTeachers);\n  }, []);\n  useEffect(() => {\n    addTeachingMins(events, teachers, setTeachers);\n  }, [events, setTeachers]);\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end\n    });\n\n    handleDoubleClick(updatedEvent);\n  }; // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n\n\n  const handleMove = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (!validateRoom(otherEvents, event.room, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return 1;\n    }\n\n    if (!validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Teacher Conflict. Please choose another teacher or time\");\n      return 1;\n    }\n\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end\n    });\n    return 0;\n  };\n\n  const handleAddEvent = newEvent => {\n    addEvent(events, newEvent, setEvents);\n    setFormType(\"\");\n  };\n\n  const handleSelect = ({\n    start,\n    resourceId\n  }) => {\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n  };\n\n  const handleDoubleClick = event => {\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n  };\n\n  const handleAddTeacher = newTeacher => {\n    addTeacher(teachers, newTeacher, setTeachers);\n    setFormType(\"\");\n  };\n\n  const handleBtnClick = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleToggleSnackbar = msg => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollBtnClick = () => {\n    setFormType(\"payroll\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, formType === \"event\" && React.createElement(EventForm, {\n    formType: formType,\n    setFormType: setFormType,\n    addEvent: handleAddEvent,\n    events: events,\n    teachers: teachers,\n    startTime: startTime,\n    updateStartTime: updateStartTime,\n    resetStartTime: resetStartTime,\n    event: selectedEvent,\n    setSelectedEvent: setSelectedEvent,\n    setEvents: setEvents,\n    selectedTeacher: selectedTeacher,\n    isRecurring: isRecurring,\n    toggleIsRecurring: toggleIsRecurring,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), formType === \"teacher\" && React.createElement(TeacherForm, {\n    formType: formType,\n    setFormType: setFormType,\n    addTeacher: handleAddTeacher,\n    setTeachers: setTeachers,\n    teachers: teachers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), formType === \"payroll\" && React.createElement(Payroll, {\n    events: events,\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(CustomizedSnackbars, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    variant: \"error\",\n    msg: message,\n    events: events,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(CustomDnDCalendar, {\n    handleMove: handleMove,\n    handleSelect: handleSelect,\n    handleDoubleClick: handleDoubleClick,\n    events: events,\n    setEvents: setEvents,\n    teachers: teachers,\n    handleBtnClick: handleBtnClick,\n    handlePayrollBtnClick: handlePayrollBtnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/Schedule.js"],"names":["React","useState","useEffect","useContext","CustomDnDCalendar","EventForm","TeacherForm","CustomizedSnackbars","Payroll","useFormState","useToggle","TeachersContext","validateRoom","validateTeacher","EventsContext","Schedule","teachers","setTeachers","updateTeacher","addTeachingMins","events","setEvents","getEvents","addEvent","formType","setFormType","Date","startTime","updateStartTime","resetStartTime","selectedEvent","setSelectedEvent","isOpen","setIsOpen","message","setMessage","selectedTeacher","setSelectedTeacher","isRecurring","toggleIsRecurring","getTeachers","moveEvent","event","resourceId","start","end","updatedEvent","handleDoubleClick","handleMove","idx","indexOf","otherEvents","slice","room","parseInt","duration","handleToggleSnackbar","handleAddEvent","newEvent","handleSelect","handleAddTeacher","newTeacher","addTeacher","handleBtnClick","msg","handlePayrollBtnClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport EventForm from \"./EventForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport useFormState from \"../hooks/useInputState\";\nimport useToggle from \"../hooks/useToggle\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const { teachers, setTeachers, updateTeacher, addTeachingMins } = useContext(\n    TeachersContext\n  );\n  const { events, setEvents, getEvents, addEvent } = useContext(EventsContext);\n\n  const [formType, setFormType] = useState(\"\");\n  const [startTime, updateStartTime, resetStartTime] = useFormState(new Date());\n  const [selectedEvent, setSelectedEvent] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [selectedTeacher, setSelectedTeacher] = useState(\"\");\n  const [isRecurring, toggleIsRecurring] = useToggle(false);\n\n  useEffect(() => {\n    getEvents(events, setEvents);\n    getTeachers(events, teachers, setTeachers);\n    addTeachingMins(events, teachers, setTeachers);\n  }, []);\n\n  useEffect(() => {\n    addTeachingMins(events, teachers, setTeachers);\n  }, [events, setTeachers]);\n\n  const moveEvent = ({ event, resourceId, start, end }) => {\n    const updatedEvent = { ...event, resourceId, start, end };\n    handleDoubleClick(updatedEvent);\n  };\n\n  // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n  const handleMove = ({ event, resourceId, start, end }) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n    if (\n      !validateRoom(otherEvents, event.room, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return 1;\n    }\n    if (\n      !validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\n        \"Teacher Conflict. Please choose another teacher or time\"\n      );\n      return 1;\n    }\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end\n    });\n    return 0;\n  };\n\n  const handleAddEvent = newEvent => {\n    addEvent(events, newEvent, setEvents);\n    setFormType(\"\");\n  };\n\n  const handleSelect = ({ start, resourceId }) => {\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n  };\n\n  const handleDoubleClick = event => {\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n  };\n\n  const handleAddTeacher = newTeacher => {\n    addTeacher(teachers, newTeacher, setTeachers);\n    setFormType(\"\");\n  };\n\n  const handleBtnClick = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleToggleSnackbar = msg => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollBtnClick = () => {\n    setFormType(\"payroll\");\n  };\n\n  return (\n    <div>\n      {formType === \"event\" && (\n        <EventForm\n          formType={formType}\n          setFormType={setFormType}\n          addEvent={handleAddEvent}\n          events={events}\n          teachers={teachers}\n          startTime={startTime}\n          updateStartTime={updateStartTime}\n          resetStartTime={resetStartTime}\n          event={selectedEvent}\n          setSelectedEvent={setSelectedEvent}\n          setEvents={setEvents}\n          selectedTeacher={selectedTeacher}\n          isRecurring={isRecurring}\n          toggleIsRecurring={toggleIsRecurring}\n        />\n      )}\n      {formType === \"teacher\" && (\n        <TeacherForm\n          formType={formType}\n          setFormType={setFormType}\n          addTeacher={handleAddTeacher}\n          setTeachers={setTeachers}\n          teachers={teachers}\n        />\n      )}\n      {formType === \"payroll\" && (\n        <Payroll events={events} setFormType={setFormType} />\n      )}\n      <CustomizedSnackbars\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        variant={\"error\"}\n        msg={message}\n        events={events}\n      />\n      <CustomDnDCalendar\n        handleMove={handleMove}\n        handleSelect={handleSelect}\n        handleDoubleClick={handleDoubleClick}\n        events={events}\n        setEvents={setEvents}\n        teachers={teachers}\n        handleBtnClick={handleBtnClick}\n        handlePayrollBtnClick={handlePayrollBtnClick}\n      />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}