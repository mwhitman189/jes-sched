{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport axios from \"axios\";\nimport { RRule } from \"rrule\";\nimport moment from \"moment\";\n\nvar JapaneseHolidays = require(\"japanese-holidays\");\n\nconst getRecurrences = event => {\n  const now = new Date(); // Create start and end dates for the current month to calc\n  // teaching minutes\n\n  const month_start = new Date(now.getFullYear(), now.getMonth(), 1);\n  const month_end = new Date(now.getFullYear(), now.getMonth() + 2, 0); // Create an array of DateTimes for the recurrence of events.\n\n  const rrule = new RRule({\n    freq: RRule.WEEKLY,\n    count: 26,\n    interval: 1,\n    dtstart: new Date(event.start)\n  });\n  const twoMonthsRecurrences = rrule.between(month_start, month_end);\n  twoMonthsRecurrences.shift();\n  return twoMonthsRecurrences;\n}; // for each:\n// if !startTime, set startTime and endTime, otherwise:\n// if new.startTime < old.startTime:\n// set new.startTime, otherwise:\n// if new.endTime > old.endTime:\n// set new.endTime, otherwise:\n// return start and end times as object\n\n\nconst calcDutyHours = events => {\n  const dutyHours = {\n    startTime: moment().set(\"hour\", 9),\n    endTime: moment().set(\"hour\", 21)\n  };\n  events.forEach(e => {\n    if (moment(e.start) < dutyHours.startTime) {\n      dutyHours.startTime = moment(e.start);\n    } else if (moment(e.end) > dutyHours.endTime) {\n      dutyHours.endTime = moment(e.end);\n    }\n  });\n  return dutyHours;\n};\n\nconst calcOutsideDutyMins = (eventStart, eventEnd, duration, dhStart, dhEnd) => {\n  // Set beginning of duty hours\n  const dutyHoursStart = moment(new Date(eventStart).setHours(dhStart, 0, 0)); // Calculate difference in hours between the duty hours start time and the lesson start time\n\n  const startDiff = dutyHoursStart.diff(eventStart, \"minutes\");\n  const endDiff = dutyHoursStart.diff(eventEnd, \"minutes\"); // Set end of duty hours\n\n  const dutyHoursEnd = moment(new Date(eventStart).setHours(dhEnd, 0, 0)); // Calculate difference in hours between the duty hours end time and the lesson end time\n\n  const afterDhEndDiff = -dutyHoursEnd.diff(eventEnd, \"minutes\");\n  const afterDhStartDiff = -dutyHoursEnd.diff(eventStart, \"minutes\");\n  let outsideDutyMins;\n\n  if (startDiff <= 0 && afterDhEndDiff <= 0) {\n    outsideDutyMins = 0;\n    return {\n      teachingMins: duration,\n      outsideDutyMins: outsideDutyMins\n    };\n  } else if (startDiff > 0 && endDiff > 0 || afterDhEndDiff > 0 && afterDhStartDiff > 0) {\n    return {\n      teachingMins: 0,\n      outsideDutyMins: duration\n    };\n  } else if (startDiff > 0) {\n    const regularTeachingMins = duration - startDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: startDiff\n    };\n  } else {\n    const regularTeachingMins = duration - afterDhEndDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: afterDhEndDiff\n    };\n  }\n};\n\nconst createPayPeriodData = (events, teacher, monthStart, monthEnd) => {\n  // Creates an object of dates containing minutes worked, by work type\n  const datesData = {};\n  teacher.teachingMins = 0;\n  teacher.outsideDutyMins = 0;\n  teacher.holidayMins = 0;\n  teacher.overThresholdOneMins = 0;\n  teacher.overThresholdTwoMins = 0;\n  const monthEvents = events.filter(e => {\n    return moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\") && e.resourceId === teacher.resourceId;\n  });\n  console.log(calcDutyHours(monthEvents));\n  monthEvents.forEach(e => {\n    if (moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\")) {\n      if (e.resourceId === teacher.resourceId) {\n        const date = e.start.getDate();\n        const day = e.start.getDay(); // Calculate number of minutes to add to first threshold to calc second threshold. (10 hours * 60 mins)\n\n        const secondThreshold = 10 * 60;\n        let teachingMins = 0;\n        let outsideDutyMins = 0;\n        let holidayMins = 0;\n\n        if (JapaneseHolidays.isHoliday(e.start) || e.start.getDay() === (0 || 1)) {\n          holidayMins = parseInt(e.duration);\n          teacher.holidayMins += holidayMins;\n        } else {\n          // dhStart = calcDutyHours()[0];\n          // dhEnd = calcDutyHours()[1];\n          const totalTeachingMins = calcOutsideDutyMins(e.start, e.end, e.duration, 12, 21);\n          teachingMins = totalTeachingMins.teachingMins;\n          teacher.teachingMins += teachingMins;\n          outsideDutyMins = totalTeachingMins.outsideDutyMins;\n          teacher.outsideDutyMins += outsideDutyMins;\n        }\n\n        if (teacher.teachingMins >= teacher.otThreshold + secondThreshold) {\n          teacher.overThresholdTwoMins += teacher.teachingMins - (teacher.otThreshold + secondThreshold);\n          teacher.overThresholdOneMins += secondThreshold;\n        } else if (teacher.teachingMins >= teacher.otThreshold) {\n          teacher.overThresholdOneMins += teacher.teachingMins - teacher.otThreshold;\n        } // Teaching minutes object to be added to hash table\n\n\n        const dateData = {\n          resourceId: teacher,\n          date: date,\n          day: day,\n          teachingMins: teachingMins,\n          outsideDutyMins: outsideDutyMins,\n          overThresholdOneMins: teacher.overThresholdOneMins,\n          overThresholdTwoMins: teacher.overThresholdTwoMins,\n          holidayMins: holidayMins,\n          travelAllowance: 0,\n          travelExpenses: 0\n        }; // If date already in hash table, add teaching minutes to existing keys, otherwise create\n        // a new date object\n\n        if (datesData[date]) {\n          datesData[date].teachingMins += dateData.teachingMins;\n          datesData[date].outsideDutyMins += dateData.outsideDutyMins;\n          datesData[date].overThresholdOneMins += dateData.overThresholdOneMins;\n          datesData[date].overThresholdTwoMins += dateData.overThresholdTwoMins;\n          datesData[date].holidayMins += dateData.holidayMins;\n          datesData[date].travelAllowance += dateData.travelAllowance;\n          datesData[date].travelExpenses += dateData.travelExpenses;\n        } else {\n          datesData[date] = dateData;\n        }\n      }\n    }\n  });\n  return datesData;\n};\n\nconst addTeachingMins = (events, teachers, setTeachers) => {\n  const now = new Date(); // Create start and end dates for the current month to calc\n  // teaching minutes\n\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n  if (teachers.length > 0) {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      teacher.teachingMins = 0;\n      teacher.outsideDutyMins = 0;\n      teacher.holidayMins = 0;\n      teacher.overThresholdOneMins = 0;\n      teacher.overThresholdTwoMins = 0;\n    });\n    teachers.forEach(teacher => {\n      createPayPeriodData(events, teacher, monthStart, monthEnd);\n      updateTeacher(teacher, teachers, setTeachers);\n    });\n  }\n};\n\nconst getTeachers = async (events, teachers, setTeachers) => {\n  return await axios.get(\"/teachers/\").then(res => {\n    if (res.data.length > 0) {\n      setTeachers(res.data);\n    }\n  }).then(addTeachingMins(events, teachers, setTeachers)).catch(err => console.log(err));\n};\n\nconst getLessons = async (events, setEvents) => {\n  return await axios.get(\"/lessons/\").then(res => {\n    if (res.data.length > 0) {\n      res.data.map(event => {\n        event.start = new Date(event.start);\n        event.end = new Date(event.end);\n      });\n      setEvents([...res.data, events[0]]);\n    }\n  }).catch(err => console.log(err));\n};\n\nconst addLesson = async (events, event, setEvents) => {\n  const newEvents = [];\n\n  if (event.recur === true) {\n    const recurrences = getRecurrences(event);\n    recurrences.map(r => {\n      const newEvent = _objectSpread({}, event, {\n        start: r,\n        end: moment(r).add(event.duration, \"m\").toDate(),\n        isNewEvent: false\n      });\n\n      if (JapaneseHolidays.isHoliday(r)) {\n        newEvent.isHoliday = true;\n      }\n\n      newEvents.push(newEvent);\n    });\n  }\n\n  if (JapaneseHolidays.isHoliday(event.start)) {\n    event = _objectSpread({}, event, {\n      isHoliday: true\n    });\n  }\n\n  event = _objectSpread({}, event, {\n    isNewEvent: true\n  });\n  newEvents.push(event);\n  await axios.post(\"/lessons/add\", newEvents).then(res => console.log(res.data)).catch(err => console.log(err));\n  return getLessons(events, setEvents);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios.post(\"/teachers/add\", newTeacher).then(res => console.log(res.data)).catch(err => console.log(err));\n  return setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async (teacher, teachers, setTeachers) => {\n  const idx = teachers.findIndex(t => t._id === teacher._id);\n  const updatedTeachers = [...teachers];\n\n  const updatedTeacher = _objectSpread({}, teacher, {\n    resourceTitle: teacher.resourceTitle,\n    name: teacher.name,\n    familyName: teacher.familyName,\n    teachingMins: teacher.teachingMins,\n    holidayMins: teacher.holidayMins,\n    outsideDutyMins: teacher.outsideDutyMins,\n    otThreshold: teacher.otThreshold,\n    overThresholdOneMins: teacher.overThresholdOneMins,\n    overThresholdTwoMins: teacher.overThresholdTwoMins\n  });\n\n  updatedTeachers.splice(idx, 1, updatedTeacher);\n  setTeachers(updatedTeachers);\n  return await axios.put(`/teachers/update/${teacher._id}`, updatedTeacher).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst deleteTeacher = async teacher => {\n  return await axios.delete(`/teachers/delete/${teacher._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst deleteEvent = async (events, event, setEvents) => {\n  const newEvents = events.filter(evt => evt._id !== event._id);\n  setEvents(newEvents);\n  return await axios.delete(`/lessons/delete/${event._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst changeEvent = async (events, event, editedEvent, setEvents) => {\n  const idx = events.findIndex(e => e._id === event._id);\n  const nextEvents = [...events];\n  nextEvents.splice(idx, 1, editedEvent);\n  setEvents(nextEvents);\n  return await axios.put(`/lessons/update/${event._id}`, editedEvent).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst addPayment = async newPayment => {\n  return await axios.post(`/payments/add`, newPayment).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nexport { getRecurrences, addTeachingMins, getTeachers, getLessons, addLesson, addTeacher, updateTeacher, deleteTeacher, deleteEvent, changeEvent, addPayment, createPayPeriodData };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/helperFunctions.js"],"names":["axios","RRule","moment","JapaneseHolidays","require","getRecurrences","event","now","Date","month_start","getFullYear","getMonth","month_end","rrule","freq","WEEKLY","count","interval","dtstart","start","twoMonthsRecurrences","between","shift","calcDutyHours","events","dutyHours","startTime","set","endTime","forEach","e","end","calcOutsideDutyMins","eventStart","eventEnd","duration","dhStart","dhEnd","dutyHoursStart","setHours","startDiff","diff","endDiff","dutyHoursEnd","afterDhEndDiff","afterDhStartDiff","outsideDutyMins","teachingMins","regularTeachingMins","createPayPeriodData","teacher","monthStart","monthEnd","datesData","holidayMins","overThresholdOneMins","overThresholdTwoMins","monthEvents","filter","isBetween","resourceId","console","log","date","getDate","day","getDay","secondThreshold","isHoliday","parseInt","totalTeachingMins","otThreshold","dateData","travelAllowance","travelExpenses","addTeachingMins","teachers","setTeachers","length","updateTeacher","getTeachers","get","then","res","data","catch","err","getLessons","setEvents","map","addLesson","newEvents","recur","recurrences","r","newEvent","add","toDate","isNewEvent","push","post","addTeacher","newTeacher","idx","findIndex","t","_id","updatedTeachers","updatedTeacher","resourceTitle","name","familyName","splice","put","deleteTeacher","delete","deleteEvent","evt","changeEvent","editedEvent","nextEvents","addPayment","newPayment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { RRule } from \"rrule\";\nimport moment from \"moment\";\n\nvar JapaneseHolidays = require(\"japanese-holidays\");\n\nconst getRecurrences = event => {\n  const now = new Date();\n  // Create start and end dates for the current month to calc\n  // teaching minutes\n  const month_start = new Date(now.getFullYear(), now.getMonth(), 1);\n  const month_end = new Date(now.getFullYear(), now.getMonth() + 2, 0);\n  // Create an array of DateTimes for the recurrence of events.\n  const rrule = new RRule({\n    freq: RRule.WEEKLY,\n    count: 26,\n    interval: 1,\n    dtstart: new Date(event.start)\n  });\n  const twoMonthsRecurrences = rrule.between(month_start, month_end);\n  twoMonthsRecurrences.shift();\n  return twoMonthsRecurrences;\n};\n\n// for each:\n// if !startTime, set startTime and endTime, otherwise:\n// if new.startTime < old.startTime:\n// set new.startTime, otherwise:\n// if new.endTime > old.endTime:\n// set new.endTime, otherwise:\n// return start and end times as object\nconst calcDutyHours = events => {\n  const dutyHours = {\n    startTime: moment().set(\"hour\", 9),\n    endTime: moment().set(\"hour\", 21)\n  };\n\n  events.forEach(e => {\n    if (moment(e.start) < dutyHours.startTime) {\n      dutyHours.startTime = moment(e.start);\n    } else if (moment(e.end) > dutyHours.endTime) {\n      dutyHours.endTime = moment(e.end);\n    }\n  });\n  return dutyHours;\n};\n\nconst calcOutsideDutyMins = (\n  eventStart,\n  eventEnd,\n  duration,\n  dhStart,\n  dhEnd\n) => {\n  // Set beginning of duty hours\n  const dutyHoursStart = moment(new Date(eventStart).setHours(dhStart, 0, 0));\n  // Calculate difference in hours between the duty hours start time and the lesson start time\n  const startDiff = dutyHoursStart.diff(eventStart, \"minutes\");\n  const endDiff = dutyHoursStart.diff(eventEnd, \"minutes\");\n  // Set end of duty hours\n  const dutyHoursEnd = moment(new Date(eventStart).setHours(dhEnd, 0, 0));\n  // Calculate difference in hours between the duty hours end time and the lesson end time\n  const afterDhEndDiff = -dutyHoursEnd.diff(eventEnd, \"minutes\");\n  const afterDhStartDiff = -dutyHoursEnd.diff(eventStart, \"minutes\");\n\n  let outsideDutyMins;\n  if (startDiff <= 0 && afterDhEndDiff <= 0) {\n    outsideDutyMins = 0;\n    return {\n      teachingMins: duration,\n      outsideDutyMins: outsideDutyMins\n    };\n  } else if (\n    (startDiff > 0 && endDiff > 0) ||\n    (afterDhEndDiff > 0 && afterDhStartDiff > 0)\n  ) {\n    return {\n      teachingMins: 0,\n      outsideDutyMins: duration\n    };\n  } else if (startDiff > 0) {\n    const regularTeachingMins = duration - startDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: startDiff\n    };\n  } else {\n    const regularTeachingMins = duration - afterDhEndDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: afterDhEndDiff\n    };\n  }\n};\n\nconst createPayPeriodData = (events, teacher, monthStart, monthEnd) => {\n  // Creates an object of dates containing minutes worked, by work type\n  const datesData = {};\n  teacher.teachingMins = 0;\n  teacher.outsideDutyMins = 0;\n  teacher.holidayMins = 0;\n  teacher.overThresholdOneMins = 0;\n  teacher.overThresholdTwoMins = 0;\n\n  const monthEvents = events.filter(e => {\n    return (\n      moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\") &&\n      e.resourceId === teacher.resourceId\n    );\n  });\n\n  console.log(calcDutyHours(monthEvents));\n\n  monthEvents.forEach(e => {\n    if (moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\")) {\n      if (e.resourceId === teacher.resourceId) {\n        const date = e.start.getDate();\n        const day = e.start.getDay();\n        // Calculate number of minutes to add to first threshold to calc second threshold. (10 hours * 60 mins)\n        const secondThreshold = 10 * 60;\n        let teachingMins = 0;\n        let outsideDutyMins = 0;\n        let holidayMins = 0;\n\n        if (\n          JapaneseHolidays.isHoliday(e.start) ||\n          e.start.getDay() === (0 || 1)\n        ) {\n          holidayMins = parseInt(e.duration);\n          teacher.holidayMins += holidayMins;\n        } else {\n          // dhStart = calcDutyHours()[0];\n          // dhEnd = calcDutyHours()[1];\n          const totalTeachingMins = calcOutsideDutyMins(\n            e.start,\n            e.end,\n            e.duration,\n            12,\n            21\n          );\n          teachingMins = totalTeachingMins.teachingMins;\n          teacher.teachingMins += teachingMins;\n          outsideDutyMins = totalTeachingMins.outsideDutyMins;\n          teacher.outsideDutyMins += outsideDutyMins;\n        }\n        if (teacher.teachingMins >= teacher.otThreshold + secondThreshold) {\n          teacher.overThresholdTwoMins +=\n            teacher.teachingMins - (teacher.otThreshold + secondThreshold);\n          teacher.overThresholdOneMins += secondThreshold;\n        } else if (teacher.teachingMins >= teacher.otThreshold) {\n          teacher.overThresholdOneMins +=\n            teacher.teachingMins - teacher.otThreshold;\n        }\n        // Teaching minutes object to be added to hash table\n        const dateData = {\n          resourceId: teacher,\n          date: date,\n          day: day,\n          teachingMins: teachingMins,\n          outsideDutyMins: outsideDutyMins,\n          overThresholdOneMins: teacher.overThresholdOneMins,\n          overThresholdTwoMins: teacher.overThresholdTwoMins,\n          holidayMins: holidayMins,\n          travelAllowance: 0,\n          travelExpenses: 0\n        };\n        // If date already in hash table, add teaching minutes to existing keys, otherwise create\n        // a new date object\n        if (datesData[date]) {\n          datesData[date].teachingMins += dateData.teachingMins;\n          datesData[date].outsideDutyMins += dateData.outsideDutyMins;\n          datesData[date].overThresholdOneMins += dateData.overThresholdOneMins;\n          datesData[date].overThresholdTwoMins += dateData.overThresholdTwoMins;\n          datesData[date].holidayMins += dateData.holidayMins;\n          datesData[date].travelAllowance += dateData.travelAllowance;\n          datesData[date].travelExpenses += dateData.travelExpenses;\n        } else {\n          datesData[date] = dateData;\n        }\n      }\n    }\n  });\n  return datesData;\n};\n\nconst addTeachingMins = (events, teachers, setTeachers) => {\n  const now = new Date();\n  // Create start and end dates for the current month to calc\n  // teaching minutes\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  if (teachers.length > 0) {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      teacher.teachingMins = 0;\n      teacher.outsideDutyMins = 0;\n      teacher.holidayMins = 0;\n      teacher.overThresholdOneMins = 0;\n      teacher.overThresholdTwoMins = 0;\n    });\n    teachers.forEach(teacher => {\n      createPayPeriodData(events, teacher, monthStart, monthEnd);\n      updateTeacher(teacher, teachers, setTeachers);\n    });\n  }\n};\n\nconst getTeachers = async (events, teachers, setTeachers) => {\n  return await axios\n    .get(\"/teachers/\")\n    .then(res => {\n      if (res.data.length > 0) {\n        setTeachers(res.data);\n      }\n    })\n    .then(addTeachingMins(events, teachers, setTeachers))\n    .catch(err => console.log(err));\n};\n\nconst getLessons = async (events, setEvents) => {\n  return await axios\n    .get(\"/lessons/\")\n    .then(res => {\n      if (res.data.length > 0) {\n        res.data.map(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n        });\n        setEvents([...res.data, events[0]]);\n      }\n    })\n    .catch(err => console.log(err));\n};\n\nconst addLesson = async (events, event, setEvents) => {\n  const newEvents = [];\n  if (event.recur === true) {\n    const recurrences = getRecurrences(event);\n    recurrences.map(r => {\n      const newEvent = {\n        ...event,\n        start: r,\n        end: moment(r)\n          .add(event.duration, \"m\")\n          .toDate(),\n        isNewEvent: false\n      };\n      if (JapaneseHolidays.isHoliday(r)) {\n        newEvent.isHoliday = true;\n      }\n      newEvents.push(newEvent);\n    });\n  }\n  if (JapaneseHolidays.isHoliday(event.start)) {\n    event = { ...event, isHoliday: true };\n  }\n  event = { ...event, isNewEvent: true };\n  newEvents.push(event);\n  await axios\n    .post(\"/lessons/add\", newEvents)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  return getLessons(events, setEvents);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios\n    .post(\"/teachers/add\", newTeacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  return setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async (teacher, teachers, setTeachers) => {\n  const idx = teachers.findIndex(t => t._id === teacher._id);\n  const updatedTeachers = [...teachers];\n\n  const updatedTeacher = {\n    ...teacher,\n    resourceTitle: teacher.resourceTitle,\n    name: teacher.name,\n    familyName: teacher.familyName,\n    teachingMins: teacher.teachingMins,\n    holidayMins: teacher.holidayMins,\n    outsideDutyMins: teacher.outsideDutyMins,\n    otThreshold: teacher.otThreshold,\n    overThresholdOneMins: teacher.overThresholdOneMins,\n    overThresholdTwoMins: teacher.overThresholdTwoMins\n  };\n  updatedTeachers.splice(idx, 1, updatedTeacher);\n\n  setTeachers(updatedTeachers);\n  return await axios\n    .put(`/teachers/update/${teacher._id}`, updatedTeacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst deleteTeacher = async teacher => {\n  return await axios\n    .delete(`/teachers/delete/${teacher._id}`)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst deleteEvent = async (events, event, setEvents) => {\n  const newEvents = events.filter(evt => evt._id !== event._id);\n  setEvents(newEvents);\n  return await axios\n    .delete(`/lessons/delete/${event._id}`)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst changeEvent = async (events, event, editedEvent, setEvents) => {\n  const idx = events.findIndex(e => e._id === event._id);\n  const nextEvents = [...events];\n\n  nextEvents.splice(idx, 1, editedEvent);\n  setEvents(nextEvents);\n\n  return await axios\n    .put(`/lessons/update/${event._id}`, editedEvent)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst addPayment = async newPayment => {\n  return await axios\n    .post(`/payments/add`, newPayment)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nexport {\n  getRecurrences,\n  addTeachingMins,\n  getTeachers,\n  getLessons,\n  addLesson,\n  addTeacher,\n  updateTeacher,\n  deleteTeacher,\n  deleteEvent,\n  changeEvent,\n  addPayment,\n  createPayPeriodData\n};\n"]},"metadata":{},"sourceType":"module"}