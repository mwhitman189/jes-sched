{"ast":null,"code":"import _slicedToArray from\"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{ValidatorForm,TextValidator,SelectValidator}from\"react-material-ui-form-validator\";import moment from\"moment\";import useInputState from\"../hooks/useInputState\";import{validateRoom,validateTeacher}from\"../validators\";import{changeEvent,deleteEvent}from\"../helperFunctions\";import{makeStyles}from\"@material-ui/core/styles\";import MenuItem from\"@material-ui/core/MenuItem\";import Button from\"@material-ui/core/Button\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogContentText from\"@material-ui/core/DialogContentText\";import DialogTitle from\"@material-ui/core/DialogTitle\";import FormControl from\"@material-ui/core/FormControl\";import FormControlLabel from\"@material-ui/core/FormControlLabel\";import Switch from\"@material-ui/core/Switch\";import roomList from\"../rooms\";import lessonTypes from\"../lessonTypes\";var useStyles=makeStyles(function(theme){return{formControl:{margin:theme.spacing(1),minWidth:120},selectEmpty:{marginTop:theme.spacing(2)}};});export default function EventForm(props){var classes=useStyles();var addEvent=props.addEvent,formType=props.formType,setFormType=props.setFormType,events=props.events,teachers=props.teachers,startTime=props.startTime,updateStartTime=props.updateStartTime,event=props.event,setEvents=props.setEvents,setSelectedEvent=props.setSelectedEvent,selectedTeacher=props.selectedTeacher,isRecurring=props.isRecurring,toggleIsRecurring=props.toggleIsRecurring;// If a new start time was input, use it for the form input,\n// otherwise use the original event's start time\nvar startDateTime=startTime?startTime:event.start;var _useInputState=useInputState(event?event.title:\"\"),_useInputState2=_slicedToArray(_useInputState,3),title=_useInputState2[0],updateTitle=_useInputState2[1],resetTitle=_useInputState2[2];var _useInputState3=useInputState(event?event.duration:\"\"),_useInputState4=_slicedToArray(_useInputState3,3),duration=_useInputState4[0],updateDuration=_useInputState4[1],resetDuration=_useInputState4[2];var _useInputState5=useInputState(event?event.resourceId:selectedTeacher),_useInputState6=_slicedToArray(_useInputState5,3),resource=_useInputState6[0],updateResource=_useInputState6[1],resetResource=_useInputState6[2];var _useInputState7=useInputState(event?event.room:\"\"),_useInputState8=_slicedToArray(_useInputState7,3),room=_useInputState8[0],updateRoom=_useInputState8[1],resetRoom=_useInputState8[2];var _useInputState9=useInputState(event?event.type:\"\"),_useInputState10=_slicedToArray(_useInputState9,3),eventType=_useInputState10[0],updateEventType=_useInputState10[1],resetEventType=_useInputState10[2];var teacherValidators=[\"required\"];var teacherValMsgs=[\"Teacher Required\"];var roomValidators=[\"required\"];var roomValMsgs=[\"Room Required\"];if(!event){teacherValidators.push(\"teacherIsAvailable\");teacherValMsgs.push(\"Teacher unavailable\");roomValidators.push(\"roomIsAvailable\");roomValMsgs.push(\"Room unavailable\");}useEffect(function(){// If an event does not exist, check whether the selected room is\n// available at the specified time\nValidatorForm.addValidationRule(\"teacherIsAvailable\",function(teacher){return validateTeacher(events,teacher,startTime,duration);});// If an event does not exist, check whether the selected room is\n// available at the specified time\nValidatorForm.addValidationRule(\"roomIsAvailable\",function(room){return validateRoom(events,room,startTime,duration);});});var hideForm=function hideForm(){return setFormType(\"\");};var resetForm=function resetForm(){resetTitle();resetDuration();resetResource();resetRoom();resetEventType();};var handleAddEvent=function handleAddEvent(e){e.preventDefault();var startTimeObj=new Date(startDateTime);addEvent({title:title,start:startTimeObj,end:moment(startTimeObj).add(duration,\"m\").toDate(),room:room,duration:duration,resourceId:parseInt(selectedTeacher),type:eventType,recur:isRecurring});resetForm();setSelectedEvent(\"\");};var handleEditEvent=function handleEditEvent(e){e.preventDefault();var startTimeObj=new Date(startDateTime);var editedEvent={title:title,start:startTimeObj,end:moment(startTimeObj).add(duration,\"m\").toDate(),room:room,duration:duration,resourceId:parseInt(resource),type:eventType,isRecurring:isRecurring};changeEvent(events,event,editedEvent,setEvents);resetForm();setSelectedEvent(\"\");hideForm();};var handleDeleteEvent=function handleDeleteEvent(){deleteEvent(events,event,setEvents);setSelectedEvent(\"\");hideForm();};var handleToggleRecurrence=function handleToggleRecurrence(){toggleIsRecurring(!isRecurring);};var handleCancel=function handleCancel(){resetForm();setSelectedEvent(\"\");hideForm();};return React.createElement(Dialog,{open:formType===\"event\",onClose:hideForm,\"aria-labelledby\":\"form-dialog-title\"},React.createElement(ValidatorForm,{onSubmit:event?handleEditEvent:handleAddEvent},React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"New Lesson\"),React.createElement(DialogContent,null,React.createElement(DialogContentText,null,\"Enter Lesson Info\"),React.createElement(FormControlLabel,{control:React.createElement(Switch,{checked:isRecurring,onChange:handleToggleRecurrence,value:isRecurring}),label:\"Weekly lesson\"}),React.createElement(FormControl,{className:classes.formControl},React.createElement(TextValidator,{autoFocus:true,margin:\"dense\",id:\"title\",label:\"Lesson Name\",type:\"text\",value:title,onChange:updateTitle,fullWidth:true,validators:[\"required\"],errorMessages:[\"Enter the Lesson Name\"]})),React.createElement(FormControl,{className:classes.formControl},React.createElement(TextValidator,{autoFocus:true,margin:\"dense\",id:\"startTime\",label:\"Start Time\",type:\"text\",value:startDateTime,onChange:updateStartTime,fullWidth:true,validators:[\"required\"],errorMessages:[\"Enter the Start Time\"]})),React.createElement(FormControl,{className:classes.formControl},React.createElement(TextValidator,{margin:\"dense\",id:\"duration\",label:\"Lesson Duration\",type:\"text\",pattern:\"[0-9]*\",value:duration,onChange:updateDuration,fullWidth:true,validators:[\"required\"],errorMessages:[\"Enter the Duration\"]})),React.createElement(FormControl,{className:classes.formControl},React.createElement(SelectValidator,{className:classes.selectStyles,margin:\"dense\",label:\"Teacher\",InputLabelProps:{shrink:true},fullWidth:true,id:\"resource\",value:resource,onChange:updateResource,name:\"resource\",validators:teacherValidators,errorMessages:teacherValMsgs},React.createElement(MenuItem,{value:\"\"}),teachers.map(function(t){return React.createElement(MenuItem,{key:\"teacher-\".concat(t.resourceId),value:t.resourceId},t.name);}))),React.createElement(FormControl,{className:classes.formControl},React.createElement(SelectValidator,{className:classes.selectStyles,label:\"Room\",InputLabelProps:{shrink:true},margin:\"dense\",fullWidth:true,id:\"room\",value:room,onChange:updateRoom,name:\"room\",validators:roomValidators,errorMessages:roomValMsgs},React.createElement(MenuItem,{value:\"\"}),roomList.map(function(r){return React.createElement(MenuItem,{key:\"room-\".concat(r),value:r},r);}))),React.createElement(FormControl,{className:classes.formControl},React.createElement(SelectValidator,{className:classes.selectStyles,margin:\"dense\",label:\"Lesson Type\",InputLabelProps:{shrink:true},fullWidth:true,id:\"type\",value:eventType,onChange:updateEventType,name:\"type\"},React.createElement(MenuItem,{value:\"\"}),lessonTypes.map(function(t){return React.createElement(MenuItem,{key:\"type-\".concat(t.shortName),value:t.type},t.name);})))),React.createElement(DialogActions,null,React.createElement(Button,{onClick:handleDeleteEvent,color:\"secondary\"},\"Delete Lesson\"),React.createElement(Button,{onClick:handleCancel,color:\"primary\"},\"Cancel\"),React.createElement(Button,{type:\"submit\",color:\"primary\"},event?\"Confirm Change\":\"Add Lesson\"))));}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/EventForm.js"],"names":["React","useEffect","ValidatorForm","TextValidator","SelectValidator","moment","useInputState","validateRoom","validateTeacher","changeEvent","deleteEvent","makeStyles","MenuItem","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","Switch","roomList","lessonTypes","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","EventForm","props","classes","addEvent","formType","setFormType","events","teachers","startTime","updateStartTime","event","setEvents","setSelectedEvent","selectedTeacher","isRecurring","toggleIsRecurring","startDateTime","start","title","updateTitle","resetTitle","duration","updateDuration","resetDuration","resourceId","resource","updateResource","resetResource","room","updateRoom","resetRoom","type","eventType","updateEventType","resetEventType","teacherValidators","teacherValMsgs","roomValidators","roomValMsgs","push","addValidationRule","teacher","hideForm","resetForm","handleAddEvent","e","preventDefault","startTimeObj","Date","end","add","toDate","parseInt","recur","handleEditEvent","editedEvent","handleDeleteEvent","handleToggleRecurrence","handleCancel","selectStyles","shrink","map","t","name","r","shortName"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator\n} from \"react-material-ui-form-validator\";\nimport moment from \"moment\";\n\nimport useInputState from \"../hooks/useInputState\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { changeEvent, deleteEvent } from \"../helperFunctions\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport roomList from \"../rooms\";\nimport lessonTypes from \"../lessonTypes\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const {\n    addEvent,\n    formType,\n    setFormType,\n    events,\n    teachers,\n    startTime,\n    updateStartTime,\n    event,\n    setEvents,\n    setSelectedEvent,\n    selectedTeacher,\n    isRecurring,\n    toggleIsRecurring\n  } = props;\n\n  // If a new start time was input, use it for the form input,\n  // otherwise use the original event's start time\n  const startDateTime = startTime ? startTime : event.start;\n\n  const [title, updateTitle, resetTitle] = useInputState(\n    event ? event.title : \"\"\n  );\n  const [duration, updateDuration, resetDuration] = useInputState(\n    event ? event.duration : \"\"\n  );\n  const [resource, updateResource, resetResource] = useInputState(\n    event ? event.resourceId : selectedTeacher\n  );\n  const [room, updateRoom, resetRoom] = useInputState(event ? event.room : \"\");\n  const [eventType, updateEventType, resetEventType] = useInputState(\n    event ? event.type : \"\"\n  );\n\n  let teacherValidators = [\"required\"];\n  let teacherValMsgs = [\"Teacher Required\"];\n  let roomValidators = [\"required\"];\n  let roomValMsgs = [\"Room Required\"];\n  if (!event) {\n    teacherValidators.push(\"teacherIsAvailable\");\n    teacherValMsgs.push(\"Teacher unavailable\");\n    roomValidators.push(\"roomIsAvailable\");\n    roomValMsgs.push(\"Room unavailable\");\n  }\n\n  useEffect(() => {\n    // If an event does not exist, check whether the selected room is\n    // available at the specified time\n    ValidatorForm.addValidationRule(\"teacherIsAvailable\", teacher => {\n      return validateTeacher(events, teacher, startTime, duration);\n    });\n\n    // If an event does not exist, check whether the selected room is\n    // available at the specified time\n    ValidatorForm.addValidationRule(\"roomIsAvailable\", room => {\n      return validateRoom(events, room, startTime, duration);\n    });\n  });\n\n  const hideForm = () => setFormType(\"\");\n\n  const resetForm = () => {\n    resetTitle();\n    resetDuration();\n    resetResource();\n    resetRoom();\n    resetEventType();\n  };\n\n  const handleAddEvent = e => {\n    e.preventDefault();\n    const startTimeObj = new Date(startDateTime);\n    addEvent({\n      title: title,\n      start: startTimeObj,\n      end: moment(startTimeObj)\n        .add(duration, \"m\")\n        .toDate(),\n      room: room,\n      duration: duration,\n      resourceId: parseInt(selectedTeacher),\n      type: eventType,\n      recur: isRecurring\n    });\n    resetForm();\n    setSelectedEvent(\"\");\n  };\n\n  const handleEditEvent = e => {\n    e.preventDefault();\n    const startTimeObj = new Date(startDateTime);\n    const editedEvent = {\n      title: title,\n      start: startTimeObj,\n      end: moment(startTimeObj)\n        .add(duration, \"m\")\n        .toDate(),\n      room: room,\n      duration: duration,\n      resourceId: parseInt(resource),\n      type: eventType,\n      isRecurring: isRecurring\n    };\n    changeEvent(events, event, editedEvent, setEvents);\n    resetForm();\n    setSelectedEvent(\"\");\n    hideForm();\n  };\n\n  const handleDeleteEvent = () => {\n    deleteEvent(events, event, setEvents);\n    setSelectedEvent(\"\");\n    hideForm();\n  };\n\n  const handleToggleRecurrence = () => {\n    toggleIsRecurring(!isRecurring);\n  };\n\n  const handleCancel = () => {\n    resetForm();\n    setSelectedEvent(\"\");\n    hideForm();\n  };\n\n  return (\n    <Dialog\n      open={formType === \"event\"}\n      onClose={hideForm}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <ValidatorForm onSubmit={event ? handleEditEvent : handleAddEvent}>\n        <DialogTitle id=\"form-dialog-title\">New Lesson</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter Lesson Info</DialogContentText>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isRecurring}\n                onChange={handleToggleRecurrence}\n                value={isRecurring}\n              />\n            }\n            label=\"Weekly lesson\"\n          />\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Lesson Name\"\n              type=\"text\"\n              value={title}\n              onChange={updateTitle}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Lesson Name\"]}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"startTime\"\n              label=\"Start Time\"\n              type=\"text\"\n              value={startDateTime}\n              onChange={updateStartTime}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Start Time\"]}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"duration\"\n              label=\"Lesson Duration\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              value={duration}\n              onChange={updateDuration}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Duration\"]}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <SelectValidator\n              className={classes.selectStyles}\n              margin=\"dense\"\n              label=\"Teacher\"\n              InputLabelProps={{ shrink: true }}\n              fullWidth\n              id=\"resource\"\n              value={resource}\n              onChange={updateResource}\n              name=\"resource\"\n              validators={teacherValidators}\n              errorMessages={teacherValMsgs}\n            >\n              <MenuItem value=\"\" />\n              {teachers.map(t => (\n                <MenuItem key={`teacher-${t.resourceId}`} value={t.resourceId}>\n                  {t.name}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <SelectValidator\n              className={classes.selectStyles}\n              label=\"Room\"\n              InputLabelProps={{ shrink: true }}\n              margin=\"dense\"\n              fullWidth\n              id=\"room\"\n              value={room}\n              onChange={updateRoom}\n              name=\"room\"\n              validators={roomValidators}\n              errorMessages={roomValMsgs}\n            >\n              <MenuItem value=\"\" />\n              {roomList.map(r => (\n                <MenuItem key={`room-${r}`} value={r}>\n                  {r}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <SelectValidator\n              className={classes.selectStyles}\n              margin=\"dense\"\n              label=\"Lesson Type\"\n              InputLabelProps={{ shrink: true }}\n              fullWidth\n              id=\"type\"\n              value={eventType}\n              onChange={updateEventType}\n              name=\"type\"\n            >\n              <MenuItem value=\"\" />\n              {lessonTypes.map(t => (\n                <MenuItem key={`type-${t.shortName}`} value={t.type}>\n                  {t.name}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteEvent} color=\"secondary\">\n            Delete Lesson\n          </Button>\n          <Button onClick={handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            {event ? \"Confirm Change\" : \"Add Lesson\"}\n          </Button>\n        </DialogActions>\n      </ValidatorForm>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}