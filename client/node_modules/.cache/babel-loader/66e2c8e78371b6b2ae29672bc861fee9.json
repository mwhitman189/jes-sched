{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { getRecurrences, getEvents } from \"../helperFunctions\";\nexport default function (initialEvents) {\n  const _useState = useState(initialEvents),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const JapaneseHolidays = require(\"japanese-holidays\");\n\n  const testObj = {\n    events,\n    addEvent: async function (event) {\n      const newEvents = [];\n\n      if (event.recur === true) {\n        const recurrences = getRecurrences(event);\n        recurrences.map(r => {\n          const newEvent = _objectSpread({}, event, {\n            start: r,\n            end: moment(r).add(event.duration, \"m\").toDate(),\n            isNewEvent: false,\n            isLast: false\n          });\n\n          if (JapaneseHolidays.isHoliday(r)) {\n            newEvent.isHoliday = true;\n          }\n\n          newEvents.push(newEvent);\n        });\n        newEvents[newEvents.length - 1].isLast = true;\n      }\n\n      if (JapaneseHolidays.isHoliday(event.start)) {\n        event = _objectSpread({}, event, {\n          isHoliday: true\n        });\n      }\n\n      event = _objectSpread({}, event, {\n        isNewEvent: true\n      });\n      newEvents.unshift(event);\n      await axios.post(\"/lessons/add\", newEvents).then(res => console.log(res.data)).catch(err => console.log(err));\n      return this.getEvents();\n    },\n    deleteEvent: async function (event) {\n      const newEvents = events.filter(evt => evt._id !== event._id);\n      setEvents(newEvents);\n      return await axios.delete(`/lessons/delete/${event._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n    },\n    editEvent: async function (event, editedEvent) {\n      const idx = events.findIndex(e => e._id === event._id);\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, editedEvent);\n      setEvents(nextEvents);\n      return await axios.put(`/lessons/update/${event._id}`, editedEvent).then(res => console.log(res.data)).catch(err => console.log(err));\n    }\n  };\n  return testObj;\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/hooks/useEventsState.js"],"names":["useState","axios","moment","getRecurrences","getEvents","initialEvents","events","setEvents","JapaneseHolidays","require","testObj","addEvent","event","newEvents","recur","recurrences","map","r","newEvent","start","end","add","duration","toDate","isNewEvent","isLast","isHoliday","push","length","unshift","post","then","res","console","log","data","catch","err","deleteEvent","filter","evt","_id","delete","editEvent","editedEvent","idx","findIndex","e","nextEvents","splice","put"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { getRecurrences, getEvents } from \"../helperFunctions\";\n\nexport default function(initialEvents) {\n  const [events, setEvents] = useState(initialEvents);\n  const JapaneseHolidays = require(\"japanese-holidays\");\n\n  const testObj = {\n    events,\n    addEvent: async function(event) {\n      const newEvents = [];\n      if (event.recur === true) {\n        const recurrences = getRecurrences(event);\n        recurrences.map(r => {\n          const newEvent = {\n            ...event,\n            start: r,\n            end: moment(r)\n              .add(event.duration, \"m\")\n              .toDate(),\n            isNewEvent: false,\n            isLast: false\n          };\n          if (JapaneseHolidays.isHoliday(r)) {\n            newEvent.isHoliday = true;\n          }\n          newEvents.push(newEvent);\n        });\n        newEvents[newEvents.length - 1].isLast = true;\n      }\n      if (JapaneseHolidays.isHoliday(event.start)) {\n        event = { ...event, isHoliday: true };\n      }\n      event = { ...event, isNewEvent: true };\n      newEvents.unshift(event);\n\n      await axios\n        .post(\"/lessons/add\", newEvents)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n      return this.getEvents();\n    },\n    deleteEvent: async function(event) {\n      const newEvents = events.filter(evt => evt._id !== event._id);\n      setEvents(newEvents);\n      return await axios\n        .delete(`/lessons/delete/${event._id}`)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n    },\n    editEvent: async function(event, editedEvent) {\n      const idx = events.findIndex(e => e._id === event._id);\n      const nextEvents = [...events];\n\n      nextEvents.splice(idx, 1, editedEvent);\n      setEvents(nextEvents);\n\n      return await axios\n        .put(`/lessons/update/${event._id}`, editedEvent)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n    }\n  };\n\n  return testObj;\n}\n"]},"metadata":{},"sourceType":"module"}