{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/StudentForm.js\";\nimport React, { useContext } from \"react\";\nimport { SelectValidator, ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { StudentsContext } from \"../context/StudentsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const formType = props.formType,\n        setFormType = props.setFormType;\n\n  const _useContext = useContext(StudentsContext),\n        addStudent = _useContext.addStudent;\n\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 2),\n        givenName = _useInputState2[0],\n        setGivenName = _useInputState2[1];\n\n  const _useInputState3 = useInputState(\"\"),\n        _useInputState4 = _slicedToArray(_useInputState3, 2),\n        familyName = _useInputState4[0],\n        setFamilyName = _useInputState4[1];\n\n  const _useInputState5 = useInputState(\"\"),\n        _useInputState6 = _slicedToArray(_useInputState5, 2),\n        level = _useInputState6[0],\n        setLevel = _useInputState6[1];\n\n  const _useInputState7 = useInputState(\"\"),\n        _useInputState8 = _slicedToArray(_useInputState7, 2),\n        email = _useInputState8[0],\n        setEmail = _useInputState8[1];\n\n  const _useInputState9 = useInputState(\"\"),\n        _useInputState10 = _slicedToArray(_useInputState9, 2),\n        phone = _useInputState10[0],\n        setPhone = _useInputState10[1];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isLoading = _useToggleState2[0],\n        toggleIsLoading = _useToggleState2[1];\n\n  const levels = [{\n    level: \"BE\",\n    name: \"Beginner\"\n  }, {\n    level: \"FB\",\n    name: \"False Beginner\"\n  }, {\n    level: \"EL\",\n    name: \"Elementary\"\n  }, {\n    level: \"LI\",\n    name: \"Low Intermediate\"\n  }, {\n    level: \"HI\",\n    name: \"High Intermediate\"\n  }, {\n    level: \"AD\",\n    name: \"Advanced\"\n  }];\n\n  const handleAddStudent = e => {\n    e.preventDefault();\n    toggleIsLoading(true);\n    addStudent({\n      givenName: givenName,\n      familyName: familyName,\n      level: level,\n      phone: phone,\n      email: email\n    });\n    toggleIsLoading(false);\n    hideForm();\n  };\n\n  const hideForm = () => setFormType(\"\");\n\n  return React.createElement(Dialog, {\n    open: formType === \"student\",\n    onClose: hideForm,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(ValidatorForm, {\n    onSubmit: handleAddStudent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"New Student\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Enter Student Info\"), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"givenName\",\n    label: \"Given Name\",\n    type: \"text\",\n    value: givenName,\n    onChange: setGivenName,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Given Name\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"familyName\",\n    label: \"Family Name\",\n    type: \"text\",\n    value: familyName,\n    onChange: setFamilyName,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Last Name\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(SelectValidator, {\n    classes: {\n      root: classes.root\n    },\n    margin: \"dense\",\n    label: \"Level\",\n    InputLabelProps: {\n      shrink: true\n    },\n    fullWidth: true,\n    id: \"level\",\n    value: level,\n    onChange: setLevel,\n    name: \"level\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), levels.map(l => React.createElement(MenuItem, {\n    key: `level-${l.level}`,\n    value: l.level,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, l.name)))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    value: email,\n    onChange: setEmail,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter a valid email\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"phone\",\n    label: \"Phone\",\n    type: \"text\",\n    value: phone,\n    onChange: setPhone,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Given Name\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: hideForm,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Back\"), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Add Student\"))));\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/StudentForm.js"],"names":["React","useContext","SelectValidator","ValidatorForm","TextValidator","useInputState","useToggleState","StudentsContext","makeStyles","MenuItem","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","EventForm","props","classes","formType","setFormType","addStudent","givenName","setGivenName","familyName","setFamilyName","level","setLevel","email","setEmail","phone","setPhone","isLoading","toggleIsLoading","levels","name","handleAddStudent","e","preventDefault","hideForm","root","shrink","map","l"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport {\n  SelectValidator,\n  ValidatorForm,\n  TextValidator,\n} from \"react-material-ui-form-validator\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { StudentsContext } from \"../context/StudentsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const { formType, setFormType } = props;\n  const { addStudent } = useContext(StudentsContext);\n\n  const [givenName, setGivenName] = useInputState(\"\");\n  const [familyName, setFamilyName] = useInputState(\"\");\n  const [level, setLevel] = useInputState(\"\");\n  const [email, setEmail] = useInputState(\"\");\n  const [phone, setPhone] = useInputState(\"\");\n  const [isLoading, toggleIsLoading] = useToggleState(false);\n\n  const levels = [\n    { level: \"BE\", name: \"Beginner\" },\n    { level: \"FB\", name: \"False Beginner\" },\n    { level: \"EL\", name: \"Elementary\" },\n    { level: \"LI\", name: \"Low Intermediate\" },\n    { level: \"HI\", name: \"High Intermediate\" },\n    { level: \"AD\", name: \"Advanced\" },\n  ];\n\n  const handleAddStudent = (e) => {\n    e.preventDefault();\n    toggleIsLoading(true);\n    addStudent({\n      givenName: givenName,\n      familyName: familyName,\n      level: level,\n      phone: phone,\n      email: email,\n    });\n    toggleIsLoading(false);\n    hideForm();\n  };\n\n  const hideForm = () => setFormType(\"\");\n\n  return (\n    <Dialog\n      open={formType === \"student\"}\n      onClose={hideForm}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <ValidatorForm onSubmit={handleAddStudent}>\n        <DialogTitle id=\"form-dialog-title\">New Student</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter Student Info</DialogContentText>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"givenName\"\n              label=\"Given Name\"\n              type=\"text\"\n              value={givenName}\n              onChange={setGivenName}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Given Name\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"familyName\"\n              label=\"Family Name\"\n              type=\"text\"\n              value={familyName}\n              onChange={setFamilyName}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Last Name\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <SelectValidator\n              classes={{ root: classes.root }}\n              margin=\"dense\"\n              label=\"Level\"\n              InputLabelProps={{ shrink: true }}\n              fullWidth\n              id=\"level\"\n              value={level}\n              onChange={setLevel}\n              name=\"level\"\n            >\n              <MenuItem value=\"\" />\n              {levels.map((l) => (\n                <MenuItem key={`level-${l.level}`} value={l.level}>\n                  {l.name}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={setEmail}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter a valid email\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"phone\"\n              label=\"Phone\"\n              type=\"text\"\n              value={phone}\n              onChange={setPhone}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Given Name\"]}\n              required\n            />\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={hideForm} color=\"primary\">\n            Back\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            Add Student\n          </Button>\n        </DialogActions>\n      </ValidatorForm>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}