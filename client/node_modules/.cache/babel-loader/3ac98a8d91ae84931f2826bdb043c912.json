{"ast":null,"code":"var _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/CustomToolbar.js\";\nimport React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RightArrowIcon from \"@material-ui/icons/ChevronRight\";\nimport LeftArrowIcon from \"@material-ui/icons/ChevronLeft\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"../styles/CustomToolbarStyles\";\nimport \"react-big-calendar/lib/sass/toolbar.scss\";\nconst CustomToolbar = withStyles(theme => ({\n  handleBtnClick,\n  handlePayrollBtnClick\n})(props => {\n  const classes = props.classes,\n        onNavigate = props.onNavigate,\n        onView = props.onView,\n        isRTL = props.isRTL,\n        date = props.date,\n        handleBtnClick = props.handleBtnClick;\n\n  const _useContext = useContext(TeachersContext),\n        teachers = _useContext.teachers;\n\n  const authAPI = useContext(AuthAPI);\n  return React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.btnGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: classes.navBtn,\n    type: \"button\",\n    onClick: () => onView(\"week\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Week\"), React.createElement(\"button\", {\n    className: classes.navBtn,\n    type: \"button\",\n    onClick: () => onView(\"day\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Day\")), React.createElement(\"div\", {\n    className: classes.btnGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.navBtn,\n    type: \"button\",\n    onClick: () => onNavigate(\"PREV\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(LeftArrowIcon, {\n    className: classes.navIcon,\n    icon: isRTL ? \"chevron-right\" : \"chevron-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: classes.todayLabel,\n    onClick: () => onNavigate(\"TODAY\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, moment(date).format(\"dddd MM/DD\").toLocaleString()), React.createElement(IconButton, {\n    className: classes.navBtn,\n    type: \"button\",\n    onClick: () => onNavigate(\"NEXT\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(RightArrowIcon, {\n    className: classes.navIcon,\n    icon: isRTL ? \"chevron-left\" : \"chevron-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: classes.teacherList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, teachers.map(t => React.createElement(\"li\", {\n    className: t.overThresholdTwoMins > 0 ? classes.listItemRed : t.overThresholdOneMins > 0 ? classes.listItemYellow : classes.listItem,\n    key: t.resourceId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, `${t.name}: ${t.teachingMins}`)))), React.createElement(\"div\", {\n    className: classes.btnGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: classes.navBtn,\n    onClick: handleBtnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"New Teacher\")), React.createElement(\"div\", {\n    className: classes.btnGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: classes.navBtn,\n    onClick: handlePayrollBtnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Payroll\")));\n})); // const CustomToolbar = ({ handleBtnClick, handlePayrollBtnClick }) => {\n//   return withStyles(styles)(\n//     class CustomToolbarClass extends Component {\n//       static contextType = TeachersContext;\n//       render() {\n//         const { classes } = this.props;\n//         const { teachers } = this.context;\n//         return (\n//           <div className={classes.toolbar}>\n//             <div className={classes.btnGroup}>\n//               <button\n//                 className={classes.navBtn}\n//                 type=\"button\"\n//                 onClick={() => this.props.onView(\"week\")}\n//               >\n//                 Week\n//               </button>\n//               <button\n//                 className={classes.navBtn}\n//                 type=\"button\"\n//                 onClick={() => this.props.onView(\"day\")}\n//               >\n//                 Day\n//               </button>\n//             </div>\n//             <div className={classes.btnGroup}>\n//               <IconButton\n//                 className={classes.navBtn}\n//                 type=\"button\"\n//                 onClick={() => this.props.onNavigate(\"PREV\")}\n//               >\n//                 <LeftArrowIcon\n//                   className={classes.navIcon}\n//                   icon={this.props.isRTL ? \"chevron-right\" : \"chevron-left\"}\n//                 />\n//               </IconButton>\n//               <span\n//                 className={classes.todayLabel}\n//                 onClick={() => this.props.onNavigate(\"TODAY\")}\n//               >\n//                 {moment(this.props.date)\n//                   .format(\"dddd MM/DD\")\n//                   .toLocaleString()}\n//               </span>\n//               <IconButton\n//                 className={classes.navBtn}\n//                 type=\"button\"\n//                 onClick={() => this.props.onNavigate(\"NEXT\")}\n//               >\n//                 <RightArrowIcon\n//                   className={classes.navIcon}\n//                   icon={this.props.isRTL ? \"chevron-left\" : \"chevron-right\"}\n//                 />\n//               </IconButton>\n//             </div>\n//             <div>\n//               <ul className={classes.teacherList}>\n//                 {teachers.map(t => (\n//                   <li\n//                     className={\n//                       t.overThresholdTwoMins > 0\n//                         ? classes.listItemRed\n//                         : t.overThresholdOneMins > 0\n//                         ? classes.listItemYellow\n//                         : classes.listItem\n//                     }\n//                     key={t.resourceId}\n//                   >{`${t.name}: ${t.teachingMins}`}</li>\n//                 ))}\n//               </ul>\n//             </div>\n//             <div className={classes.btnGroup}>\n//               <button className={classes.navBtn} onClick={handleBtnClick}>\n//                 New Teacher\n//               </button>\n//             </div>\n//             <div className={classes.btnGroup}>\n//               <button\n//                 className={classes.navBtn}\n//                 onClick={handlePayrollBtnClick}\n//               >\n//                 Payroll\n//               </button>\n//             </div>\n//           </div>\n//         );\n//       }\n//     }\n//   );\n// };\n\nexport default CustomToolbar;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/CustomToolbar.js"],"names":["React","useContext","moment","TeachersContext","IconButton","RightArrowIcon","LeftArrowIcon","withStyles","styles","CustomToolbar","theme","handleBtnClick","handlePayrollBtnClick","props","classes","onNavigate","onView","isRTL","date","teachers","authAPI","AuthAPI","toolbar","btnGroup","navBtn","navIcon","todayLabel","format","toLocaleString","teacherList","map","t","overThresholdTwoMins","listItemRed","overThresholdOneMins","listItemYellow","listItem","resourceId","name","teachingMins"],"mappings":"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;AAAA;AAAA;AAAA;AAAA,KASG,GAAEN,CAAC,CAACO,IAAK,KAAIP,CAAC,CAACQ,YAAa,EAT/B,CADD,CADH,CADF,CA/CF,EA+DE;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAACS,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAET,OAAO,CAACU,MAA3B;AAAmC,IAAA,OAAO,EAAEb,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CA/DF,EAoEE;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACS,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAET,OAAO,CAACU,MAA3B;AAAmC,IAAA,OAAO,EAAEZ,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CApEF,CADF;AA4ED,CAjFA,CAD6B,CAAhC,C,CAqFA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeH,aAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RightArrowIcon from \"@material-ui/icons/ChevronRight\";\nimport LeftArrowIcon from \"@material-ui/icons/ChevronLeft\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"../styles/CustomToolbarStyles\";\nimport \"react-big-calendar/lib/sass/toolbar.scss\";\n\nconst CustomToolbar = withStyles(theme =>\n  ({ handleBtnClick, handlePayrollBtnClick }(props => {\n    const { classes, onNavigate, onView, isRTL, date, handleBtnClick } = props;\n    const { teachers } = useContext(TeachersContext);\n    const authAPI = useContext(AuthAPI);\n\n    return (\n      <div className={classes.toolbar}>\n        <div className={classes.btnGroup}>\n          <button\n            className={classes.navBtn}\n            type=\"button\"\n            onClick={() => onView(\"week\")}\n          >\n            Week\n          </button>\n          <button\n            className={classes.navBtn}\n            type=\"button\"\n            onClick={() => onView(\"day\")}\n          >\n            Day\n          </button>\n        </div>\n        <div className={classes.btnGroup}>\n          <IconButton\n            className={classes.navBtn}\n            type=\"button\"\n            onClick={() => onNavigate(\"PREV\")}\n          >\n            <LeftArrowIcon\n              className={classes.navIcon}\n              icon={isRTL ? \"chevron-right\" : \"chevron-left\"}\n            />\n          </IconButton>\n          <span\n            className={classes.todayLabel}\n            onClick={() => onNavigate(\"TODAY\")}\n          >\n            {moment(date)\n              .format(\"dddd MM/DD\")\n              .toLocaleString()}\n          </span>\n          <IconButton\n            className={classes.navBtn}\n            type=\"button\"\n            onClick={() => onNavigate(\"NEXT\")}\n          >\n            <RightArrowIcon\n              className={classes.navIcon}\n              icon={isRTL ? \"chevron-left\" : \"chevron-right\"}\n            />\n          </IconButton>\n        </div>\n        <div>\n          <ul className={classes.teacherList}>\n            {teachers.map(t => (\n              <li\n                className={\n                  t.overThresholdTwoMins > 0\n                    ? classes.listItemRed\n                    : t.overThresholdOneMins > 0\n                    ? classes.listItemYellow\n                    : classes.listItem\n                }\n                key={t.resourceId}\n              >{`${t.name}: ${t.teachingMins}`}</li>\n            ))}\n          </ul>\n        </div>\n        <div className={classes.btnGroup}>\n          <button className={classes.navBtn} onClick={handleBtnClick}>\n            New Teacher\n          </button>\n        </div>\n        <div className={classes.btnGroup}>\n          <button className={classes.navBtn} onClick={handlePayrollBtnClick}>\n            Payroll\n          </button>\n        </div>\n      </div>\n    );\n  }))\n);\n\n// const CustomToolbar = ({ handleBtnClick, handlePayrollBtnClick }) => {\n//   return withStyles(styles)(\n//     class CustomToolbarClass extends Component {\n//       static contextType = TeachersContext;\n\n//       render() {\n//         const { classes } = this.props;\n//         const { teachers } = this.context;\n\n//         return (\n//           <div className={classes.toolbar}>\n//             <div className={classes.btnGroup}>\n//               <button\n//                 className={classes.navBtn}\n//                 type=\"button\"\n//                 onClick={() => this.props.onView(\"week\")}\n//               >\n//                 Week\n//               </button>\n//               <button\n//                 className={classes.navBtn}\n//                 type=\"button\"\n//                 onClick={() => this.props.onView(\"day\")}\n//               >\n//                 Day\n//               </button>\n//             </div>\n//             <div className={classes.btnGroup}>\n//               <IconButton\n//                 className={classes.navBtn}\n//                 type=\"button\"\n//                 onClick={() => this.props.onNavigate(\"PREV\")}\n//               >\n//                 <LeftArrowIcon\n//                   className={classes.navIcon}\n//                   icon={this.props.isRTL ? \"chevron-right\" : \"chevron-left\"}\n//                 />\n//               </IconButton>\n//               <span\n//                 className={classes.todayLabel}\n//                 onClick={() => this.props.onNavigate(\"TODAY\")}\n//               >\n//                 {moment(this.props.date)\n//                   .format(\"dddd MM/DD\")\n//                   .toLocaleString()}\n//               </span>\n//               <IconButton\n//                 className={classes.navBtn}\n//                 type=\"button\"\n//                 onClick={() => this.props.onNavigate(\"NEXT\")}\n//               >\n//                 <RightArrowIcon\n//                   className={classes.navIcon}\n//                   icon={this.props.isRTL ? \"chevron-left\" : \"chevron-right\"}\n//                 />\n//               </IconButton>\n//             </div>\n//             <div>\n//               <ul className={classes.teacherList}>\n//                 {teachers.map(t => (\n//                   <li\n//                     className={\n//                       t.overThresholdTwoMins > 0\n//                         ? classes.listItemRed\n//                         : t.overThresholdOneMins > 0\n//                         ? classes.listItemYellow\n//                         : classes.listItem\n//                     }\n//                     key={t.resourceId}\n//                   >{`${t.name}: ${t.teachingMins}`}</li>\n//                 ))}\n//               </ul>\n//             </div>\n//             <div className={classes.btnGroup}>\n//               <button className={classes.navBtn} onClick={handleBtnClick}>\n//                 New Teacher\n//               </button>\n//             </div>\n//             <div className={classes.btnGroup}>\n//               <button\n//                 className={classes.navBtn}\n//                 onClick={handlePayrollBtnClick}\n//               >\n//                 Payroll\n//               </button>\n//             </div>\n//           </div>\n//         );\n//       }\n//     }\n//   );\n// };\n\nexport default CustomToolbar;\n"]},"metadata":{},"sourceType":"module"}