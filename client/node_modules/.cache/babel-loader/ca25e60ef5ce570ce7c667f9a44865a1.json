{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/StaffForm.js\";\nimport React, { useContext } from \"react\";\nimport axios from \"axios\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport useInputState from \"../hooks/useInputState\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\nimport { UserContext } from \"../context/UserContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const formType = props.formType,\n        setFormType = props.setFormType;\n\n  const _useContext = useContext(UserContext),\n        user = _useContext.user;\n\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 2),\n        givenName = _useInputState2[0],\n        updateGivenName = _useInputState2[1];\n\n  const _useInputState3 = useInputState(\"\"),\n        _useInputState4 = _slicedToArray(_useInputState3, 2),\n        familyName = _useInputState4[0],\n        updateFamilyName = _useInputState4[1];\n\n  const _useInputState5 = useInputState(\"\"),\n        _useInputState6 = _slicedToArray(_useInputState5, 2),\n        email = _useInputState6[0],\n        updateEmail = _useInputState6[1];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isLoading = _useToggleState2[0],\n        toggleIsLoading = _useToggleState2[1];\n\n  const addStaff = async newStaff => {\n    toggleIsLoading(true);\n    await axios.put(`/api/staff/add`, newStaff, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n    toggleIsLoading(false);\n  };\n\n  const handleAddStaff = e => {\n    e.preventDefault();\n    addStaff({\n      name: givenName,\n      familyName: familyName,\n      email: email\n    });\n    hideForm();\n  };\n\n  const hideForm = () => setFormType(\"\");\n\n  return React.createElement(Dialog, {\n    open: formType === \"staff\",\n    onClose: hideForm,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(ValidatorForm, {\n    onSubmit: handleAddStaff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"New Staff\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Enter Staff Info\"), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"givenName\",\n    label: \"Given Name\",\n    type: \"text\",\n    value: givenName,\n    onChange: updateGivenName,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Given Name\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"lastName\",\n    label: \"Family Name\",\n    type: \"text\",\n    value: familyName,\n    onChange: updateFamilyName,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Last Name\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    value: email,\n    onChange: updateEmail,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter a valid email\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: hideForm,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Back\"), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Add Staff\"))));\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/StaffForm.js"],"names":["React","useContext","axios","ValidatorForm","TextValidator","useInputState","tokenConfig","UserContext","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","EventForm","props","classes","formType","setFormType","user","givenName","updateGivenName","familyName","updateFamilyName","email","updateEmail","useToggleState","isLoading","toggleIsLoading","addStaff","newStaff","put","then","res","console","log","data","catch","err","handleAddStaff","e","preventDefault","name","hideForm"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport axios from \"axios\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport useInputState from \"../hooks/useInputState\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\nimport { UserContext } from \"../context/UserContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const { formType, setFormType } = props;\n  const { user } = useContext(UserContext);\n\n  const [givenName, updateGivenName] = useInputState(\"\");\n  const [familyName, updateFamilyName] = useInputState(\"\");\n  const [email, updateEmail] = useInputState(\"\");\n  const [isLoading, toggleIsLoading] = useToggleState(false);\n\n  const addStaff = async (newStaff) => {\n    toggleIsLoading(true);\n    await axios\n      .put(`/api/staff/add`, newStaff, tokenConfig(user))\n      .then((res) => console.log(res.data))\n      .catch((err) => console.log(err));\n    toggleIsLoading(false);\n  };\n\n  const handleAddStaff = (e) => {\n    e.preventDefault();\n    addStaff({\n      name: givenName,\n      familyName: familyName,\n      email: email,\n    });\n    hideForm();\n  };\n\n  const hideForm = () => setFormType(\"\");\n\n  return (\n    <Dialog\n      open={formType === \"staff\"}\n      onClose={hideForm}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <ValidatorForm onSubmit={handleAddStaff}>\n        <DialogTitle id=\"form-dialog-title\">New Staff</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter Staff Info</DialogContentText>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"givenName\"\n              label=\"Given Name\"\n              type=\"text\"\n              value={givenName}\n              onChange={updateGivenName}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Given Name\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"lastName\"\n              label=\"Family Name\"\n              type=\"text\"\n              value={familyName}\n              onChange={updateFamilyName}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Last Name\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={updateEmail}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter a valid email\"]}\n              required\n            />\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={hideForm} color=\"primary\">\n            Back\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            Add Staff\n          </Button>\n        </DialogActions>\n      </ValidatorForm>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}