{"ast":null,"code":"import axios from \"axios\";\n\nconst loadUser = async (state, dispatch) => {\n  dispatch({\n    type: \"USER_LOADING\"\n  });\n  await axios.get(\"/api/auth/user\", config).then(res => {\n    dispatch({\n      type: \"USER_LOADED\",\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: \"AUTH_ERROR\"\n    });\n  });\n};\n\nconst tokenConfig = state => {\n  const token = state.user;\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) config.headers[\"x-auth-token\"] = token;\n  return config;\n};\n\nexport default loadUser;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/reducers/loadUserReducer.js"],"names":["axios","loadUser","state","dispatch","type","get","config","then","res","payload","data","catch","err","tokenConfig","token","user","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC1CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AAEA,QAAMJ,KAAK,CACRK,GADG,CACC,gBADD,EACmBC,MADnB,EAEHC,IAFG,CAEGC,GAAD,IAAS;AACbL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,aADC;AAEPK,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,KAAD,CAAR;AAID,GAPG,EAQHC,KARG,CAQIC,GAAD,IAAS;AACdT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAVG,CAAN;AAWD,CAdD;;AAgBA,MAAMS,WAAW,GAAIX,KAAD,IAAW;AAC7B,QAAMY,KAAK,GAAGZ,KAAK,CAACa,IAApB;AACA,QAAMT,MAAM,GAAG;AACbU,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf,CAF6B,CAQ7B;;AACA,MAAIF,KAAJ,EAAWR,MAAM,CAACU,OAAP,CAAe,cAAf,IAAiCF,KAAjC;AACX,SAAOR,MAAP;AACD,CAXD;;AAaA,eAAeL,QAAf","sourcesContent":["import axios from \"axios\";\n\nconst loadUser = async (state, dispatch) => {\n  dispatch({ type: \"USER_LOADING\" });\n\n  await axios\n    .get(\"/api/auth/user\", config)\n    .then((res) => {\n      dispatch({\n        type: \"USER_LOADED\",\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: \"AUTH_ERROR\" });\n    });\n};\n\nconst tokenConfig = (state) => {\n  const token = state.user;\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers\n  if (token) config.headers[\"x-auth-token\"] = token;\n  return config;\n};\n\nexport default loadUser;\n"]},"metadata":{},"sourceType":"module"}