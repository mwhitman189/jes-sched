{"ast":null,"code":"import moment from \"moment\";\n\nfunction validateRoom(events, room, start, duration) {\n  return events.every(event => {\n    if (testDateOverlap([event.start, event.end], [moment(new Date(start)), moment(moment(new Date(start)).add(duration, \"m\").toDate())])) {\n      return parseInt(event.room) !== parseInt(room);\n    }\n\n    return true;\n  });\n}\n\nfunction validateTeacher(otherEvents, eventResourceId, eventStart, eventDuration) {\n  return otherEvents.every(otherEvent => {\n    if (testDateOverlap([otherEvent.start, otherEvent.end], [moment(new Date(eventStart)), moment(moment(new Date(eventStart)).add(eventDuration, \"m\").toDate())])) {\n      return parseInt(otherEvent.resourceId) !== parseInt(eventResourceId);\n    }\n\n    return true;\n  });\n}\n\nfunction testDateOverlap(dateArr, testDateArr) {\n  if (testDateArr[0].isBetween(dateArr[0], dateArr[1], null, \"[]\") || testDateArr[1].isBetween(dateArr[0], dateArr[1], null, \"[]\")) {\n    return true;\n  }\n}\n\nexport { validateRoom, validateTeacher };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/validators.js"],"names":["moment","validateRoom","events","room","start","duration","every","event","testDateOverlap","end","Date","add","toDate","parseInt","validateTeacher","otherEvents","eventResourceId","eventStart","eventDuration","otherEvent","resourceId","dateArr","testDateArr","isBetween"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,QAA3C,EAAqD;AACnD,SAAOH,MAAM,CAACI,KAAP,CAAcC,KAAD,IAAW;AAC7B,QACEC,eAAe,CACb,CAACD,KAAK,CAACH,KAAP,EAAcG,KAAK,CAACE,GAApB,CADa,EAEb,CACET,MAAM,CAAC,IAAIU,IAAJ,CAASN,KAAT,CAAD,CADR,EAEEJ,MAAM,CAACA,MAAM,CAAC,IAAIU,IAAJ,CAASN,KAAT,CAAD,CAAN,CAAwBO,GAAxB,CAA4BN,QAA5B,EAAsC,GAAtC,EAA2CO,MAA3C,EAAD,CAFR,CAFa,CADjB,EAQE;AACA,aAAOC,QAAQ,CAACN,KAAK,CAACJ,IAAP,CAAR,KAAyBU,QAAQ,CAACV,IAAD,CAAxC;AACD;;AACD,WAAO,IAAP;AACD,GAbM,CAAP;AAcD;;AAED,SAASW,eAAT,CACEC,WADF,EAEEC,eAFF,EAGEC,UAHF,EAIEC,aAJF,EAKE;AACA,SAAOH,WAAW,CAACT,KAAZ,CAAmBa,UAAD,IAAgB;AACvC,QACEX,eAAe,CACb,CAACW,UAAU,CAACf,KAAZ,EAAmBe,UAAU,CAACV,GAA9B,CADa,EAEb,CACET,MAAM,CAAC,IAAIU,IAAJ,CAASO,UAAT,CAAD,CADR,EAEEjB,MAAM,CAACA,MAAM,CAAC,IAAIU,IAAJ,CAASO,UAAT,CAAD,CAAN,CAA6BN,GAA7B,CAAiCO,aAAjC,EAAgD,GAAhD,EAAqDN,MAArD,EAAD,CAFR,CAFa,CADjB,EAQE;AACA,aAAOC,QAAQ,CAACM,UAAU,CAACC,UAAZ,CAAR,KAAoCP,QAAQ,CAACG,eAAD,CAAnD;AACD;;AACD,WAAO,IAAP;AACD,GAbM,CAAP;AAcD;;AAED,SAASR,eAAT,CAAyBa,OAAzB,EAAkCC,WAAlC,EAA+C;AAC7C,MACEA,WAAW,CAAC,CAAD,CAAX,CAAeC,SAAf,CAAyBF,OAAO,CAAC,CAAD,CAAhC,EAAqCA,OAAO,CAAC,CAAD,CAA5C,EAAiD,IAAjD,EAAuD,IAAvD,KACAC,WAAW,CAAC,CAAD,CAAX,CAAeC,SAAf,CAAyBF,OAAO,CAAC,CAAD,CAAhC,EAAqCA,OAAO,CAAC,CAAD,CAA5C,EAAiD,IAAjD,EAAuD,IAAvD,CAFF,EAGE;AACA,WAAO,IAAP;AACD;AACF;;AAED,SAASpB,YAAT,EAAuBa,eAAvB","sourcesContent":["import moment from \"moment\";\n\nfunction validateRoom(events, room, start, duration) {\n  return events.every((event) => {\n    if (\n      testDateOverlap(\n        [event.start, event.end],\n        [\n          moment(new Date(start)),\n          moment(moment(new Date(start)).add(duration, \"m\").toDate()),\n        ]\n      )\n    ) {\n      return parseInt(event.room) !== parseInt(room);\n    }\n    return true;\n  });\n}\n\nfunction validateTeacher(\n  otherEvents,\n  eventResourceId,\n  eventStart,\n  eventDuration\n) {\n  return otherEvents.every((otherEvent) => {\n    if (\n      testDateOverlap(\n        [otherEvent.start, otherEvent.end],\n        [\n          moment(new Date(eventStart)),\n          moment(moment(new Date(eventStart)).add(eventDuration, \"m\").toDate()),\n        ]\n      )\n    ) {\n      return parseInt(otherEvent.resourceId) !== parseInt(eventResourceId);\n    }\n    return true;\n  });\n}\n\nfunction testDateOverlap(dateArr, testDateArr) {\n  if (\n    testDateArr[0].isBetween(dateArr[0], dateArr[1], null, \"[]\") ||\n    testDateArr[1].isBetween(dateArr[0], dateArr[1], null, \"[]\")\n  ) {\n    return true;\n  }\n}\n\nexport { validateRoom, validateTeacher };\n"]},"metadata":{},"sourceType":"module"}