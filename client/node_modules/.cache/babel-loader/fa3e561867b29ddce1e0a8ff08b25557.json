{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { addNewEvent } from \"../helperFunctions\";\nimport { UserContext } from \"../context/UserContext\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\nexport default function (initialEvents) {\n  const _useContext = useContext(UserContext),\n        user = _useContext.user;\n\n  const _useState = useState(initialEvents),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  return {\n    events,\n    getEvents: function (dateTime) {\n      axios.get(\"/api/lessons\", tokenConfig(user)).then(res => {\n        if (res.data.length > 0) {\n          res.data.forEach(event => {\n            event.start = new Date(event.start);\n            event.end = new Date(event.end); // Check if last recurrence, and if so, create two more months of recurrences\n\n            if (event.isLast) {\n              if (dateTime >= event.start.getTime()) {\n                const newEvents = addNewEvent(event);\n                res.data = [...res.data, newEvents];\n              }\n            }\n          });\n          return setEvents(res.data);\n        }\n      }).catch(err => console.log(err));\n    },\n    addEvent: async function (event) {\n      const newEvents = addNewEvent(event);\n      await axios.post(\"/api/lessons/add\", newEvents, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n    },\n    deleteEvent: async function (event) {\n      await axios.delete(`/api/lessons/delete/${event._id}`, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n    },\n    editEvent: async function (event, editedEvent) {\n      await axios.put(`/api/lessons/update/${event._id}`, editedEvent, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n    }\n  };\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/hooks/useEventsState.js"],"names":["useState","useContext","axios","addNewEvent","UserContext","tokenConfig","initialEvents","user","events","setEvents","getEvents","dateTime","get","then","res","data","length","forEach","event","start","Date","end","isLast","getTime","newEvents","catch","err","console","log","addEvent","post","deleteEvent","delete","_id","editEvent","editedEvent","put"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { addNewEvent } from \"../helperFunctions\";\nimport { UserContext } from \"../context/UserContext\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\n\nexport default function (initialEvents) {\n  const { user } = useContext(UserContext);\n  const [events, setEvents] = useState(initialEvents);\n\n  return {\n    events,\n    getEvents: function (dateTime) {\n      axios\n        .get(\"/api/lessons\", tokenConfig(user))\n        .then((res) => {\n          if (res.data.length > 0) {\n            res.data.forEach((event) => {\n              event.start = new Date(event.start);\n              event.end = new Date(event.end);\n              // Check if last recurrence, and if so, create two more months of recurrences\n              if (event.isLast) {\n                if (dateTime >= event.start.getTime()) {\n                  const newEvents = addNewEvent(event);\n                  res.data = [...res.data, newEvents];\n                }\n              }\n            });\n            return setEvents(res.data);\n          }\n        })\n        .catch((err) => console.log(err));\n    },\n    addEvent: async function (event) {\n      const newEvents = addNewEvent(event);\n      await axios\n        .post(\"/api/lessons/add\", newEvents, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n    },\n    deleteEvent: async function (event) {\n      await axios\n        .delete(`/api/lessons/delete/${event._id}`, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n    },\n    editEvent: async function (event, editedEvent) {\n      await axios\n        .put(`/api/lessons/update/${event._id}`, editedEvent, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}