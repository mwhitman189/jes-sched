{"ast":null,"code":"import axios from \"axios\";\n\nconst loadUser = async (state, dispatch) => {\n  dispatch({\n    type: \"USER_LOADING\"\n  }); // const token = localStorage.getItem(\"token\");\n\n  const token = state.token;\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) config.headers[\"x-auth-token\"] = token; // await axios\n  //   .get(\"/api/auth/user\", config)\n  //   .then((res) => {\n  //     dispatch({\n  //       type: \"USER_LOADED\",\n  //       payload: res.data,\n  //     });\n  //   })\n  //   .catch((err) => {\n  //     dispatch({ type: \"AUTH_ERROR\" });\n  //   });\n};\n\nexport default loadUser;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/reducers/loadUserReducer.js"],"names":["axios","loadUser","state","dispatch","type","token","config","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC1CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR,CAD0C,CAG1C;;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACG,KAApB;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf,CAL0C,CAW1C;;AACA,MAAIF,KAAJ,EAAWC,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCF,KAAjC,CAZ+B,CAc1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAzBD;;AA0BA,eAAeJ,QAAf","sourcesContent":["import axios from \"axios\";\n\nconst loadUser = async (state, dispatch) => {\n  dispatch({ type: \"USER_LOADING\" });\n\n  // const token = localStorage.getItem(\"token\");\n  const token = state.token;\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers\n  if (token) config.headers[\"x-auth-token\"] = token;\n\n  // await axios\n  //   .get(\"/api/auth/user\", config)\n  //   .then((res) => {\n  //     dispatch({\n  //       type: \"USER_LOADED\",\n  //       payload: res.data,\n  //     });\n  //   })\n  //   .catch((err) => {\n  //     dispatch({ type: \"AUTH_ERROR\" });\n  //   });\n};\nexport default loadUser;\n"]},"metadata":{},"sourceType":"module"}