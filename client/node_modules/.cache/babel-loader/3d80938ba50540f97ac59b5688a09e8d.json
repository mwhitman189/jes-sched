{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { addNewEvent } from \"../helperFunctions\";\nimport { UserContext } from \"../context/UserContext\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\n\nconst getEventsFunc = async function (dateTime) {\n  await axios.get(\"/api/lessons\", tokenConfig(user)).then(res => {\n    if (res.data.length > 0) {\n      res.data.forEach(event => {\n        event.start = new Date(event.start);\n        event.end = new Date(event.end); // Check if last recurrence, and if so, create two more months of recurrences\n\n        if (event.isLast) {\n          if (dateTime >= event.start.getTime()) {\n            addNewEvent(event);\n          }\n        }\n      });\n      return setEvents(res.data);\n    }\n  }).catch(err => console.log(err));\n};\n\nexport default function (initialEvents) {\n  const _useContext = useContext(UserContext),\n        user = _useContext.user;\n\n  const _useState = useState(initialEvents),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  return {\n    events,\n    getEvents: getEventsFunc(),\n    addEvent: async function (event) {\n      const newEvents = addNewEvent(event);\n      setEvents([...events, ...newEvents]);\n      await axios.post(\"/api/lessons/add\", newEvents, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n    },\n    deleteEvent: async function (event) {\n      await axios.delete(`/api/lessons/delete/${event._id}`, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      this.getEvents();\n    },\n    editEvent: async function (event, editedEvent) {\n      const idx = events.findIndex(e => e._id === event._id);\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, editedEvent);\n      setEvents(nextEvents);\n      await axios.put(`/api/lessons/update/${event._id}`, editedEvent, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n    }\n  };\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/hooks/useEventsState.js"],"names":["useState","useContext","axios","addNewEvent","UserContext","tokenConfig","getEventsFunc","dateTime","get","user","then","res","data","length","forEach","event","start","Date","end","isLast","getTime","setEvents","catch","err","console","log","initialEvents","events","getEvents","addEvent","newEvents","post","deleteEvent","delete","_id","editEvent","editedEvent","idx","findIndex","e","nextEvents","splice","put"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { addNewEvent } from \"../helperFunctions\";\nimport { UserContext } from \"../context/UserContext\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\n\nconst getEventsFunc = async function (dateTime) {\n  await axios\n    .get(\"/api/lessons\", tokenConfig(user))\n    .then((res) => {\n      if (res.data.length > 0) {\n        res.data.forEach((event) => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n          // Check if last recurrence, and if so, create two more months of recurrences\n          if (event.isLast) {\n            if (dateTime >= event.start.getTime()) {\n              addNewEvent(event);\n            }\n          }\n        });\n        return setEvents(res.data);\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\nexport default function (initialEvents) {\n  const { user } = useContext(UserContext);\n  const [events, setEvents] = useState(initialEvents);\n\n  return {\n    events,\n    getEvents: getEventsFunc(),\n    addEvent: async function (event) {\n      const newEvents = addNewEvent(event);\n      setEvents([...events, ...newEvents]);\n      await axios\n        .post(\"/api/lessons/add\", newEvents, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n    },\n    deleteEvent: async function (event) {\n      await axios\n        .delete(`/api/lessons/delete/${event._id}`, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      this.getEvents();\n    },\n    editEvent: async function (event, editedEvent) {\n      const idx = events.findIndex((e) => e._id === event._id);\n      const nextEvents = [...events];\n\n      nextEvents.splice(idx, 1, editedEvent);\n      setEvents(nextEvents);\n      await axios\n        .put(`/api/lessons/update/${event._id}`, editedEvent, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}