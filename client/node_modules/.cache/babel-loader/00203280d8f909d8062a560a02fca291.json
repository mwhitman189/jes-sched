{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/Schedule.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { protectAction } from \"../helperFunctions\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { UserContext } from \"../context/UserContext\";\nimport useFormState from \"../hooks/useInputState\";\nimport EventForm from \"./EventForm\";\nimport StaffForm from \"./StaffForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport Footer from \"./Footer\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const _useContext = useContext(TeachersContext),\n        getTeachers = _useContext.getTeachers,\n        addTeachingMins = _useContext.addTeachingMins;\n\n  const _useContext2 = useContext(EventsContext),\n        events = _useContext2.events,\n        editEvent = _useContext2.editEvent,\n        getEvents = _useContext2.getEvents;\n\n  const _useContext3 = useContext(UserContext),\n        user = _useContext3.user;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        formType = _useState2[0],\n        setFormType = _useState2[1];\n\n  const _useFormState = useFormState(new Date()),\n        _useFormState2 = _slicedToArray(_useFormState, 2),\n        startTime = _useFormState2[0],\n        updateStartTime = _useFormState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedEvent = _useState4[0],\n        setSelectedEvent = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isOpen = _useState6[0],\n        setIsOpen = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedTeacher = _useState10[0],\n        setSelectedTeacher = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        isLoading = _useState12[0],\n        setIsLoading = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        isDetailView = _useState14[0],\n        setIsDetailView = _useState14[1];\n\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  useEffect(() => {\n    // Pass current dateTime to compare to recurrence events to check if a new batch of recurrences\n    // is needed\n    getEvents(now.getTime());\n    getTeachers(events);\n  }, []);\n  useEffect(() => {\n    addTeachingMins(events, monthStart, monthEnd);\n  }, [events]);\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end\n    });\n\n    handleDoubleClick(updatedEvent);\n  };\n\n  const validateRoomAndResource = (event, resourceId, start) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (!validateRoom(otherEvents, event.room, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return false;\n    }\n\n    if (!validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Teacher Conflict. Please choose another teacher or time\");\n      return false;\n    }\n\n    return true;\n  }; // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n\n\n  const handleMove = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    setIsLoading(true);\n\n    if (validateRoomAndResource(event, resourceId, start)) {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end\n      });\n      setIsLoading(false);\n      return true;\n    }\n\n    setIsLoading(false);\n    return false;\n  };\n\n  const handleSelect = ({\n    start,\n    resourceId\n  }) => {\n    toggleIsLoading(true);\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n    toggleIsLoading(false);\n  };\n\n  const handleDoubleClick = event => {\n    toggleIsLoading(true);\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n    toggleIsLoading(false);\n  };\n\n  const handleAddTeacherNav = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleAddStaffNav = () => {\n    setFormType(\"staff\");\n  };\n\n  const handleToggleSnackbar = msg => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollNav = () => {\n    setFormType(\"payroll\");\n  };\n\n  const handleSingleClick = event => {\n    if (user.user.role === \"teacher\") {\n      const updatedEvent = _objectSpread({}, event, {\n        isNewEvent: false\n      });\n\n      editEvent(event, updatedEvent);\n    }\n\n    setIsDetailView(true);\n    console.log(isDetailView);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, formType === \"event\" && React.createElement(EventForm, {\n    formType: formType,\n    setFormType: setFormType,\n    startTime: startTime,\n    updateStartTime: updateStartTime,\n    event: selectedEvent,\n    setSelectedEvent: setSelectedEvent,\n    selectedTeacher: selectedTeacher,\n    validateRoomAndResource: validateRoomAndResource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), formType === \"teacher\" && React.createElement(TeacherForm, {\n    formType: formType,\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), formType === \"staff\" && React.createElement(StaffForm, {\n    formType: formType,\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), formType === \"payroll\" && React.createElement(Payroll, {\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(CustomizedSnackbars, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    variant: \"error\",\n    msg: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(CustomDnDCalendar, {\n    handleMove: protectAction(user, handleMove),\n    handleSelect: protectAction(user, handleSelect),\n    handleDoubleClick: protectAction(user, handleDoubleClick),\n    handleAddTeacherNav: protectAction(user, handleAddTeacherNav),\n    handleAddStaffNav: protectAction(user, handleAddStaffNav),\n    handlePayrollNav: protectAction(user, handlePayrollNav),\n    handleOpenDetailView: handleSingleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/Schedule.js"],"names":["React","useState","useEffect","useContext","CustomDnDCalendar","useToggleState","protectAction","validateRoom","validateTeacher","TeachersContext","EventsContext","UserContext","useFormState","EventForm","StaffForm","TeacherForm","CustomizedSnackbars","Payroll","Footer","Schedule","getTeachers","addTeachingMins","events","editEvent","getEvents","user","formType","setFormType","Date","startTime","updateStartTime","selectedEvent","setSelectedEvent","isOpen","setIsOpen","message","setMessage","selectedTeacher","setSelectedTeacher","isLoading","setIsLoading","isDetailView","setIsDetailView","now","monthStart","getFullYear","getMonth","monthEnd","getTime","moveEvent","event","resourceId","start","end","updatedEvent","handleDoubleClick","validateRoomAndResource","idx","indexOf","otherEvents","slice","room","parseInt","duration","handleToggleSnackbar","handleMove","handleSelect","toggleIsLoading","handleAddTeacherNav","handleAddStaffNav","msg","handlePayrollNav","handleSingleClick","role","isNewEvent","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { protectAction } from \"../helperFunctions\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { UserContext } from \"../context/UserContext\";\nimport useFormState from \"../hooks/useInputState\";\nimport EventForm from \"./EventForm\";\nimport StaffForm from \"./StaffForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport Footer from \"./Footer\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const { getTeachers, addTeachingMins } = useContext(TeachersContext);\n  const { events, editEvent, getEvents } = useContext(EventsContext);\n  const { user } = useContext(UserContext);\n\n  const [formType, setFormType] = useState(\"\");\n  const [startTime, updateStartTime] = useFormState(new Date());\n  const [selectedEvent, setSelectedEvent] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [selectedTeacher, setSelectedTeacher] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDetailView, setIsDetailView] = useState(false);\n\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n  useEffect(() => {\n    // Pass current dateTime to compare to recurrence events to check if a new batch of recurrences\n    // is needed\n    getEvents(now.getTime());\n    getTeachers(events);\n  }, []);\n\n  useEffect(() => {\n    addTeachingMins(events, monthStart, monthEnd);\n  }, [events]);\n\n  const moveEvent = ({ event, resourceId, start, end }) => {\n    const updatedEvent = { ...event, resourceId, start, end };\n    handleDoubleClick(updatedEvent);\n  };\n\n  const validateRoomAndResource = (event, resourceId, start) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (\n      !validateRoom(otherEvents, event.room, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return false;\n    }\n    if (\n      !validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\n        \"Teacher Conflict. Please choose another teacher or time\"\n      );\n      return false;\n    }\n    return true;\n  };\n\n  // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n  const handleMove = ({ event, resourceId, start, end }) => {\n    setIsLoading(true);\n    if (validateRoomAndResource(event, resourceId, start)) {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end,\n      });\n      setIsLoading(false);\n      return true;\n    }\n    setIsLoading(false);\n    return false;\n  };\n\n  const handleSelect = ({ start, resourceId }) => {\n    toggleIsLoading(true);\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n    toggleIsLoading(false);\n  };\n\n  const handleDoubleClick = (event) => {\n    toggleIsLoading(true);\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n    toggleIsLoading(false);\n  };\n\n  const handleAddTeacherNav = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleAddStaffNav = () => {\n    setFormType(\"staff\");\n  };\n\n  const handleToggleSnackbar = (msg) => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollNav = () => {\n    setFormType(\"payroll\");\n  };\n\n  const handleSingleClick = (event) => {\n    if (user.user.role === \"teacher\") {\n      const updatedEvent = { ...event, isNewEvent: false };\n      editEvent(event, updatedEvent);\n    }\n    setIsDetailView(true);\n    console.log(isDetailView);\n  };\n\n  return (\n    <div>\n      {formType === \"event\" && (\n        <EventForm\n          formType={formType}\n          setFormType={setFormType}\n          startTime={startTime}\n          updateStartTime={updateStartTime}\n          event={selectedEvent}\n          setSelectedEvent={setSelectedEvent}\n          selectedTeacher={selectedTeacher}\n          validateRoomAndResource={validateRoomAndResource}\n        />\n      )}\n      {formType === \"teacher\" && (\n        <TeacherForm formType={formType} setFormType={setFormType} />\n      )}\n      {formType === \"staff\" && (\n        <StaffForm formType={formType} setFormType={setFormType} />\n      )}\n      {formType === \"payroll\" && <Payroll setFormType={setFormType} />}\n      <CustomizedSnackbars\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        variant={\"error\"}\n        msg={message}\n      />\n      <CustomDnDCalendar\n        handleMove={protectAction(user, handleMove)}\n        handleSelect={protectAction(user, handleSelect)}\n        handleDoubleClick={protectAction(user, handleDoubleClick)}\n        handleAddTeacherNav={protectAction(user, handleAddTeacherNav)}\n        handleAddStaffNav={protectAction(user, handleAddStaffNav)}\n        handlePayrollNav={protectAction(user, handlePayrollNav)}\n        handleOpenDetailView={handleSingleClick}\n      />\n      <Footer />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}