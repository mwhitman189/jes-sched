{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/EventForm.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport moment from \"moment\";\nimport MomentUtils from \"@date-io/moment\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { checkForSameDate } from \"../helperFunctions\";\nimport roomList from \"../rooms\";\nimport lessonTypes from \"../lessonTypes\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display: \"inline\",\n    \"& .MuiFormControl-root\": {\n      margin: \"10px\",\n      width: \"110px\"\n    }\n  },\n  recurSwitch: {\n    position: \"absolute\",\n    right: \"1rem\",\n    top: \"1rem\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  timePickerContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  }\n}));\nexport default function EventForm(props) {\n  const classes = useStyles();\n\n  const _useContext = useContext(EventsContext),\n        events = _useContext.events,\n        addEvent = _useContext.addEvent,\n        getEvents = _useContext.getEvents,\n        editEvent = _useContext.editEvent,\n        deleteEvent = _useContext.deleteEvent;\n\n  const _useContext2 = useContext(TeachersContext),\n        teachers = _useContext2.teachers;\n\n  const formType = props.formType,\n        setFormType = props.setFormType,\n        event = props.event,\n        startTime = props.startTime,\n        setSelectedEvent = props.setSelectedEvent,\n        selectedTeacher = props.selectedTeacher,\n        validateRoomAndResource = props.validateRoomAndResource;\n\n  const _useInputState = useInputState(startTime),\n        _useInputState2 = _slicedToArray(_useInputState, 2),\n        start = _useInputState2[0],\n        updateStart = _useInputState2[1];\n\n  const _useInputState3 = useInputState(event ? event.title : \"\"),\n        _useInputState4 = _slicedToArray(_useInputState3, 3),\n        title = _useInputState4[0],\n        updateTitle = _useInputState4[1],\n        resetTitle = _useInputState4[2];\n\n  const _useInputState5 = useInputState(event ? event.duration : \"\"),\n        _useInputState6 = _slicedToArray(_useInputState5, 3),\n        duration = _useInputState6[0],\n        updateDuration = _useInputState6[1],\n        resetDuration = _useInputState6[2];\n\n  const _useInputState7 = useInputState(event ? event.resourceId : selectedTeacher),\n        _useInputState8 = _slicedToArray(_useInputState7, 3),\n        resource = _useInputState8[0],\n        updateResource = _useInputState8[1],\n        resetResource = _useInputState8[2];\n\n  const _useInputState9 = useInputState(event ? event.room : \"\"),\n        _useInputState10 = _slicedToArray(_useInputState9, 3),\n        room = _useInputState10[0],\n        updateRoom = _useInputState10[1],\n        resetRoom = _useInputState10[2];\n\n  const _useInputState11 = useInputState(event ? event.type : \"\"),\n        _useInputState12 = _slicedToArray(_useInputState11, 3),\n        eventType = _useInputState12[0],\n        updateEventType = _useInputState12[1],\n        resetEventType = _useInputState12[2];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isRecurring = _useToggleState2[0],\n        toggleIsRecurring = _useToggleState2[1];\n\n  let teacherValidators = [\"required\"];\n  let teacherValMsgs = [\"Teacher Required\"];\n  let roomValidators = [\"required\"];\n  let roomValMsgs = [\"Room Required\"];\n\n  if (!event) {\n    teacherValidators.push(\"teacherIsAvailable\");\n    teacherValMsgs.push(\"Teacher unavailable\");\n    roomValidators.push(\"roomIsAvailable\");\n    roomValMsgs.push(\"Room unavailable\");\n  }\n\n  const today = new Date().getTime(); // If an event does not exist, check whether the selected room is\n  // available at the specified time\n\n  ValidatorForm.addValidationRule(\"teacherIsAvailable\", teacher => {\n    return validateTeacher(events, teacher, start, duration);\n  }); // If an event does not exist, check whether the selected room is\n  // available at the specified time\n\n  ValidatorForm.addValidationRule(\"roomIsAvailable\", room => {\n    return validateRoom(events, room, start, duration);\n  });\n  useEffect(() => {\n    getEvents(today);\n  }, [events]);\n\n  const handleTimeChange = date => {\n    updateStart(date._d);\n  };\n\n  const hideForm = () => {\n    resetForm();\n    setFormType(\"\");\n  };\n\n  const resetForm = () => {\n    resetTitle();\n    resetDuration();\n    resetResource();\n    resetRoom();\n    resetEventType();\n    toggleIsRecurring(false);\n    setSelectedEvent(\"\");\n  };\n\n  const handleAddEvent = e => {\n    e.preventDefault();\n    addEvent({\n      title: title,\n      start: start,\n      end: moment(start).add(duration, \"m\").toDate(),\n      room: room,\n      duration: parseInt(duration),\n      resourceId: resource,\n      type: eventType,\n      recur: isRecurring\n    }); // getEvents(today);\n\n    hideForm();\n  };\n\n  const handleEditEvent = e => {\n    e.preventDefault();\n    validateRoomAndResource(e, resource, start);\n    const editedEvent = {\n      title: title,\n      start: start,\n      end: moment(start).add(duration, \"m\").toDate(),\n      room: room,\n      duration: parseInt(duration),\n      resourceId: parseInt(resource),\n      type: eventType,\n      isRecurring: isRecurring,\n      isNewEvent: true\n    };\n    editEvent(event, editedEvent); // getEvents(today);\n\n    hideForm();\n  };\n\n  const handleCancelEvent = e => {\n    e.preventDefault();\n    let sdCancellation = checkForSameDate(event.start);\n\n    const editedEvent = _objectSpread({}, event, {\n      cancelled: true,\n      sameDayCancellation: sdCancellation\n    });\n\n    editEvent(event, editedEvent); // getEvents(today);\n\n    hideForm();\n  };\n\n  const handleDeleteEvent = () => {\n    deleteEvent(event); // getEvents(today);\n\n    hideForm();\n  };\n\n  const handleToggleRecurrence = () => {\n    toggleIsRecurring(!isRecurring);\n  };\n\n  return React.createElement(Dialog, {\n    open: formType === \"event\",\n    onClose: hideForm,\n    \"aria-labelledby\": \"form-dialog-title\" // Allow TimePicker component to gain focus, preventing stack overflow\n    ,\n    disableEnforceFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(ValidatorForm, {\n    onSubmit: event ? handleEditEvent : handleAddEvent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"New Lesson\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    className: classes.recurSwitch,\n    control: React.createElement(Switch, {\n      checked: isRecurring,\n      onChange: handleToggleRecurrence,\n      value: isRecurring,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }),\n    label: \"Weekly lesson\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    className: [classes.formControl, classes.timePickerContainer].join(\" \"),\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(TimePicker, {\n    value: start,\n    onChange: handleTimeChange,\n    minutesStep: 5,\n    margin: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"title\",\n    label: \"Lesson Name\",\n    type: \"text\",\n    value: title,\n    onChange: updateTitle,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Lesson Name\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"duration\",\n    label: \"Duration\",\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    value: duration,\n    onChange: updateDuration,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Duration\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(SelectValidator, {\n    className: classes.selectStyles,\n    margin: \"dense\",\n    label: \"Teacher\",\n    InputLabelProps: {\n      shrink: true\n    },\n    fullWidth: true,\n    id: \"resource\",\n    value: resource,\n    onChange: updateResource,\n    name: \"resource\",\n    validators: teacherValidators,\n    errorMessages: teacherValMsgs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }), teachers.map(t => React.createElement(MenuItem, {\n    key: `teacher-${t.resourceId}`,\n    value: t.resourceId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, t.name)))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(SelectValidator, {\n    className: classes.selectStyles,\n    label: \"Room\",\n    InputLabelProps: {\n      shrink: true\n    },\n    margin: \"dense\",\n    fullWidth: true,\n    id: \"room\",\n    value: room,\n    onChange: updateRoom,\n    name: \"room\",\n    validators: roomValidators,\n    errorMessages: roomValMsgs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }), roomList.map(r => React.createElement(MenuItem, {\n    key: `room-${r}`,\n    value: r,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, r)))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(SelectValidator, {\n    className: classes.selectStyles,\n    margin: \"dense\",\n    label: \"Lesson Type\",\n    InputLabelProps: {\n      shrink: true\n    },\n    fullWidth: true,\n    id: \"type\",\n    value: eventType,\n    onChange: updateEventType,\n    name: \"type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }), lessonTypes.map(t => React.createElement(MenuItem, {\n    key: `type-${t.shortName}`,\n    value: t.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, t.name))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleDeleteEvent,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, \"Delete Lesson\"), React.createElement(Button, {\n    onClick: handleCancelEvent,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, \"Cancel Lesson\"), React.createElement(Button, {\n    onClick: hideForm,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, \"Back\"), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, event ? \"Confirm Change\" : \"Add Lesson\"))));\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/EventForm.js"],"names":["React","useContext","useEffect","moment","MomentUtils","ValidatorForm","TextValidator","SelectValidator","useInputState","useToggleState","validateRoom","validateTeacher","TeachersContext","EventsContext","checkForSameDate","roomList","lessonTypes","makeStyles","TimePicker","MuiPickersUtilsProvider","MenuItem","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","FormControlLabel","Switch","useStyles","theme","formControl","margin","spacing","minWidth","display","width","recurSwitch","position","right","top","selectEmpty","marginTop","timePickerContainer","justifyContent","EventForm","props","classes","events","addEvent","getEvents","editEvent","deleteEvent","teachers","formType","setFormType","event","startTime","setSelectedEvent","selectedTeacher","validateRoomAndResource","start","updateStart","title","updateTitle","resetTitle","duration","updateDuration","resetDuration","resourceId","resource","updateResource","resetResource","room","updateRoom","resetRoom","type","eventType","updateEventType","resetEventType","isRecurring","toggleIsRecurring","teacherValidators","teacherValMsgs","roomValidators","roomValMsgs","push","today","Date","getTime","addValidationRule","teacher","handleTimeChange","date","_d","hideForm","resetForm","handleAddEvent","e","preventDefault","end","add","toDate","parseInt","recur","handleEditEvent","editedEvent","isNewEvent","handleCancelEvent","sdCancellation","cancelled","sameDayCancellation","handleDeleteEvent","handleToggleRecurrence","join","flexDirection","selectStyles","shrink","map","t","name","r","shortName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport moment from \"moment\";\nimport MomentUtils from \"@date-io/moment\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { checkForSameDate } from \"../helperFunctions\";\nimport roomList from \"../rooms\";\nimport lessonTypes from \"../lessonTypes\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display: \"inline\",\n    \"& .MuiFormControl-root\": {\n      margin: \"10px\",\n      width: \"110px\",\n    },\n  },\n  recurSwitch: {\n    position: \"absolute\",\n    right: \"1rem\",\n    top: \"1rem\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  timePickerContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n}));\n\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const { events, addEvent, getEvents, editEvent, deleteEvent } = useContext(\n    EventsContext\n  );\n  const { teachers } = useContext(TeachersContext);\n  const {\n    formType,\n    setFormType,\n    event,\n    startTime,\n    setSelectedEvent,\n    selectedTeacher,\n    validateRoomAndResource,\n  } = props;\n\n  const [start, updateStart] = useInputState(startTime);\n\n  const [title, updateTitle, resetTitle] = useInputState(\n    event ? event.title : \"\"\n  );\n  const [duration, updateDuration, resetDuration] = useInputState(\n    event ? event.duration : \"\"\n  );\n  const [resource, updateResource, resetResource] = useInputState(\n    event ? event.resourceId : selectedTeacher\n  );\n  const [room, updateRoom, resetRoom] = useInputState(event ? event.room : \"\");\n  const [eventType, updateEventType, resetEventType] = useInputState(\n    event ? event.type : \"\"\n  );\n  const [isRecurring, toggleIsRecurring] = useToggleState(false);\n\n  let teacherValidators = [\"required\"];\n  let teacherValMsgs = [\"Teacher Required\"];\n  let roomValidators = [\"required\"];\n  let roomValMsgs = [\"Room Required\"];\n  if (!event) {\n    teacherValidators.push(\"teacherIsAvailable\");\n    teacherValMsgs.push(\"Teacher unavailable\");\n    roomValidators.push(\"roomIsAvailable\");\n    roomValMsgs.push(\"Room unavailable\");\n  }\n\n  const today = new Date().getTime();\n\n  // If an event does not exist, check whether the selected room is\n  // available at the specified time\n  ValidatorForm.addValidationRule(\"teacherIsAvailable\", (teacher) => {\n    return validateTeacher(events, teacher, start, duration);\n  });\n\n  // If an event does not exist, check whether the selected room is\n  // available at the specified time\n  ValidatorForm.addValidationRule(\"roomIsAvailable\", (room) => {\n    return validateRoom(events, room, start, duration);\n  });\n\n  useEffect(() => {\n    getEvents(today);\n  }, [events]);\n\n  const handleTimeChange = (date) => {\n    updateStart(date._d);\n  };\n\n  const hideForm = () => {\n    resetForm();\n    setFormType(\"\");\n  };\n\n  const resetForm = () => {\n    resetTitle();\n    resetDuration();\n    resetResource();\n    resetRoom();\n    resetEventType();\n    toggleIsRecurring(false);\n    setSelectedEvent(\"\");\n  };\n\n  const handleAddEvent = (e) => {\n    e.preventDefault();\n    addEvent({\n      title: title,\n      start: start,\n      end: moment(start).add(duration, \"m\").toDate(),\n      room: room,\n      duration: parseInt(duration),\n      resourceId: resource,\n      type: eventType,\n      recur: isRecurring,\n    });\n    // getEvents(today);\n    hideForm();\n  };\n\n  const handleEditEvent = (e) => {\n    e.preventDefault();\n    validateRoomAndResource(e, resource, start);\n    const editedEvent = {\n      title: title,\n      start: start,\n      end: moment(start).add(duration, \"m\").toDate(),\n      room: room,\n      duration: parseInt(duration),\n      resourceId: parseInt(resource),\n      type: eventType,\n      isRecurring: isRecurring,\n      isNewEvent: true,\n    };\n    editEvent(event, editedEvent);\n    // getEvents(today);\n    hideForm();\n  };\n\n  const handleCancelEvent = (e) => {\n    e.preventDefault();\n    let sdCancellation = checkForSameDate(event.start);\n    const editedEvent = {\n      ...event,\n      cancelled: true,\n      sameDayCancellation: sdCancellation,\n    };\n    editEvent(event, editedEvent);\n    // getEvents(today);\n    hideForm();\n  };\n\n  const handleDeleteEvent = () => {\n    deleteEvent(event);\n    // getEvents(today);\n    hideForm();\n  };\n\n  const handleToggleRecurrence = () => {\n    toggleIsRecurring(!isRecurring);\n  };\n\n  return (\n    <Dialog\n      open={formType === \"event\"}\n      onClose={hideForm}\n      aria-labelledby=\"form-dialog-title\"\n      // Allow TimePicker component to gain focus, preventing stack overflow\n      disableEnforceFocus\n    >\n      <ValidatorForm onSubmit={event ? handleEditEvent : handleAddEvent}>\n        <DialogTitle id=\"form-dialog-title\">New Lesson</DialogTitle>\n        <DialogContent>\n          <FormControlLabel\n            className={classes.recurSwitch}\n            control={\n              <Switch\n                checked={isRecurring}\n                onChange={handleToggleRecurrence}\n                value={isRecurring}\n              />\n            }\n            label=\"Weekly lesson\"\n          />\n          <FormControl\n            className={[classes.formControl, classes.timePickerContainer].join(\n              \" \"\n            )}\n            style={{ flexDirection: \"row\" }}\n          >\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <TimePicker\n                value={start}\n                onChange={handleTimeChange}\n                minutesStep={5}\n                margin=\"dense\"\n              />\n            </MuiPickersUtilsProvider>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Lesson Name\"\n              type=\"text\"\n              value={title}\n              onChange={updateTitle}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Lesson Name\"]}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"duration\"\n              label=\"Duration\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              value={duration}\n              onChange={updateDuration}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Duration\"]}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <SelectValidator\n              className={classes.selectStyles}\n              margin=\"dense\"\n              label=\"Teacher\"\n              InputLabelProps={{ shrink: true }}\n              fullWidth\n              id=\"resource\"\n              value={resource}\n              onChange={updateResource}\n              name=\"resource\"\n              validators={teacherValidators}\n              errorMessages={teacherValMsgs}\n            >\n              <MenuItem value=\"\" />\n              {teachers.map((t) => (\n                <MenuItem key={`teacher-${t.resourceId}`} value={t.resourceId}>\n                  {t.name}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <SelectValidator\n              className={classes.selectStyles}\n              label=\"Room\"\n              InputLabelProps={{ shrink: true }}\n              margin=\"dense\"\n              fullWidth\n              id=\"room\"\n              value={room}\n              onChange={updateRoom}\n              name=\"room\"\n              validators={roomValidators}\n              errorMessages={roomValMsgs}\n            >\n              <MenuItem value=\"\" />\n              {roomList.map((r) => (\n                <MenuItem key={`room-${r}`} value={r}>\n                  {r}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <SelectValidator\n              className={classes.selectStyles}\n              margin=\"dense\"\n              label=\"Lesson Type\"\n              InputLabelProps={{ shrink: true }}\n              fullWidth\n              id=\"type\"\n              value={eventType}\n              onChange={updateEventType}\n              name=\"type\"\n            >\n              <MenuItem value=\"\" />\n              {lessonTypes.map((t) => (\n                <MenuItem key={`type-${t.shortName}`} value={t.type}>\n                  {t.name}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteEvent} color=\"secondary\">\n            Delete Lesson\n          </Button>\n          <Button onClick={handleCancelEvent} color=\"secondary\">\n            Cancel Lesson\n          </Button>\n          <Button onClick={hideForm} color=\"primary\">\n            Back\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            {event ? \"Confirm Change\" : \"Add Lesson\"}\n          </Button>\n        </DialogActions>\n      </ValidatorForm>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}