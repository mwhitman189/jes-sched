{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { addNewEvent } from \"../helperFunctions\";\nimport { UserContext } from \"../context/UserContext\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\nexport default function (initialEvents) {\n  const _useContext = useContext(UserContext),\n        user = _useContext.user;\n\n  const _useState = useState(initialEvents),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const todaysDate = new Date().getTime();\n\n  const getEvents = async dateTime => {\n    await axios.get(\"/api/lessons\", tokenConfig(user)).then(res => {\n      res.data.forEach(event => {\n        event.start = new Date(event.start);\n        event.end = new Date(event.end); // Check if last recurrence, and if so, create two more months of recurrences\n\n        if (event.isLast) {\n          if (dateTime >= event.start.getTime()) {\n            const newEvents = addNewEvent(event);\n            res.data = [...res.data, newEvents];\n          }\n        }\n      });\n      return setEvents(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  return {\n    events,\n    getEvents: () => {\n      getEvents(todaysDate);\n    },\n    addEvent: async function (event) {\n      const newEvents = addNewEvent(event);\n      const updatedEvents = [...events, ...newEvents];\n      await axios.post(\"/api/lessons/add\", newEvents, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      getEvents(todaysDate);\n    },\n    deleteEvent: async function (event) {\n      await axios.delete(`/api/lessons/delete/${event._id}`, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      const updatedEvents = events.filter(evt => evt._id !== event._id);\n      getEvents(todaysDate);\n    },\n    editEvent: async function (event, editedEvent) {\n      await axios.put(`/api/lessons/update/${event._id}`, editedEvent, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      getEvents(todaysDate);\n    }\n  };\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/hooks/useEventsState.js"],"names":["useState","useContext","axios","addNewEvent","UserContext","tokenConfig","initialEvents","user","events","setEvents","todaysDate","Date","getTime","getEvents","dateTime","get","then","res","data","forEach","event","start","end","isLast","newEvents","catch","err","console","log","addEvent","updatedEvents","post","deleteEvent","delete","_id","filter","evt","editEvent","editedEvent","put"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { addNewEvent } from \"../helperFunctions\";\nimport { UserContext } from \"../context/UserContext\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\n\nexport default function (initialEvents) {\n  const { user } = useContext(UserContext);\n  const [events, setEvents] = useState(initialEvents);\n  const todaysDate = new Date().getTime();\n\n  const getEvents = async (dateTime) => {\n    await axios\n      .get(\"/api/lessons\", tokenConfig(user))\n      .then((res) => {\n        res.data.forEach((event) => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n          // Check if last recurrence, and if so, create two more months of recurrences\n          if (event.isLast) {\n            if (dateTime >= event.start.getTime()) {\n              const newEvents = addNewEvent(event);\n              res.data = [...res.data, newEvents];\n            }\n          }\n        });\n        return setEvents(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return {\n    events,\n    getEvents: () => {\n      getEvents(todaysDate);\n    },\n    addEvent: async function (event) {\n      const newEvents = addNewEvent(event);\n      const updatedEvents = [...events, ...newEvents];\n      await axios\n        .post(\"/api/lessons/add\", newEvents, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      getEvents(todaysDate);\n    },\n    deleteEvent: async function (event) {\n      await axios\n        .delete(`/api/lessons/delete/${event._id}`, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      const updatedEvents = events.filter((evt) => evt._id !== event._id);\n      getEvents(todaysDate);\n    },\n    editEvent: async function (event, editedEvent) {\n      await axios\n        .put(`/api/lessons/update/${event._id}`, editedEvent, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      getEvents(todaysDate);\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}