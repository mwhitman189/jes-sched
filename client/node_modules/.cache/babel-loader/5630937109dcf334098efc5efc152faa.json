{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/Schedule.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { protectAction } from \"../helperFunctions\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { UserContext } from \"../context/UserContext\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport useFormState from \"../hooks/useInputState\";\nimport EventForm from \"./EventForm\";\nimport StaffForm from \"./StaffForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport Footer from \"./Footer\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const _useContext = useContext(TeachersContext),\n        teachers = _useContext.teachers,\n        getTeachers = _useContext.getTeachers,\n        addTeachingMins = _useContext.addTeachingMins;\n\n  const _useContext2 = useContext(EventsContext),\n        events = _useContext2.events,\n        getEvents = _useContext2.getEvents;\n\n  const _useContext3 = useContext(UserContext),\n        user = _useContext3.user;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        formType = _useState2[0],\n        setFormType = _useState2[1];\n\n  const _useFormState = useFormState(new Date()),\n        _useFormState2 = _slicedToArray(_useFormState, 2),\n        startTime = _useFormState2[0],\n        updateStartTime = _useFormState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedEvent = _useState4[0],\n        setSelectedEvent = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isOpen = _useState6[0],\n        setIsOpen = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedTeacher = _useState10[0],\n        setSelectedTeacher = _useState10[1];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isLoading = _useToggleState2[0],\n        toggleIsLoading = _useToggleState2[1];\n\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  useEffect(() => {\n    // Pass current dateTime to compare to recurrence events to check if a new batch of recurrences\n    // is needed\n    getEvents(now.getTime());\n    getTeachers(events);\n\n    for (const teacher in teachers) {\n      teacher.minsByDate = createPayPeriodData(events, teacher, monthStart, monthEnd);\n    }\n  }, []);\n  useEffect(() => {\n    addTeachingMins(events, now);\n  }, [events]);\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end\n    });\n\n    handleDoubleClick(updatedEvent);\n  };\n\n  const validateRoomAndResource = (event, resourceId, start) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (!validateRoom(otherEvents, event.room, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return false;\n    }\n\n    if (!validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Teacher Conflict. Please choose another teacher or time\");\n      return false;\n    }\n\n    return true;\n  }; // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n\n\n  const handleMove = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    toggleIsLoading(true);\n\n    if (validateRoomAndResource(event, resourceId, start)) {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end\n      });\n      toggleIsLoading(false);\n      return true;\n    }\n\n    toggleIsLoading(false);\n    return false;\n  };\n\n  const handleSelect = ({\n    start,\n    resourceId\n  }) => {\n    toggleIsLoading(true);\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n    toggleIsLoading(false);\n  };\n\n  const handleDoubleClick = event => {\n    toggleIsLoading(true);\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n    toggleIsLoading(false);\n  };\n\n  const handleAddTeacherNav = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleAddStaffNav = () => {\n    setFormType(\"staff\");\n  };\n\n  const handleToggleSnackbar = msg => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollNav = () => {\n    setFormType(\"payroll\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, formType === \"event\" && React.createElement(EventForm, {\n    formType: formType,\n    setFormType: setFormType,\n    startTime: startTime,\n    updateStartTime: updateStartTime,\n    event: selectedEvent,\n    setSelectedEvent: setSelectedEvent,\n    selectedTeacher: selectedTeacher,\n    validateRoomAndResource: validateRoomAndResource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), formType === \"teacher\" && React.createElement(TeacherForm, {\n    formType: formType,\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), formType === \"staff\" && React.createElement(StaffForm, {\n    formType: formType,\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), formType === \"payroll\" && React.createElement(Payroll, {\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(CustomizedSnackbars, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    variant: \"error\",\n    msg: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(CustomDnDCalendar, {\n    handleMove: protectAction(user, handleMove),\n    handleSelect: protectAction(user, handleSelect),\n    handleDoubleClick: protectAction(user, handleDoubleClick),\n    handleAddTeacherNav: protectAction(user, handleAddTeacherNav),\n    handleAddStaffNav: protectAction(user, handleAddStaffNav),\n    handlePayrollNav: protectAction(user, handlePayrollNav),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/Schedule.js"],"names":["React","useState","useEffect","useContext","CustomDnDCalendar","useToggleState","protectAction","validateRoom","validateTeacher","TeachersContext","EventsContext","UserContext","createPayPeriodData","useFormState","EventForm","StaffForm","TeacherForm","CustomizedSnackbars","Payroll","Footer","Schedule","teachers","getTeachers","addTeachingMins","events","getEvents","user","formType","setFormType","Date","startTime","updateStartTime","selectedEvent","setSelectedEvent","isOpen","setIsOpen","message","setMessage","selectedTeacher","setSelectedTeacher","isLoading","toggleIsLoading","now","monthStart","getFullYear","getMonth","monthEnd","getTime","teacher","minsByDate","moveEvent","event","resourceId","start","end","updatedEvent","handleDoubleClick","validateRoomAndResource","idx","indexOf","otherEvents","slice","room","parseInt","duration","handleToggleSnackbar","handleMove","handleSelect","handleAddTeacherNav","handleAddStaffNav","msg","handlePayrollNav"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { protectAction } from \"../helperFunctions\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { EventsContext } from \"../context/EventsContext\";\nimport { UserContext } from \"../context/UserContext\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport useFormState from \"../hooks/useInputState\";\nimport EventForm from \"./EventForm\";\nimport StaffForm from \"./StaffForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport Footer from \"./Footer\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const { teachers, getTeachers, addTeachingMins } = useContext(\n    TeachersContext\n  );\n  const { events, getEvents } = useContext(EventsContext);\n  const { user } = useContext(UserContext);\n\n  const [formType, setFormType] = useState(\"\");\n  const [startTime, updateStartTime] = useFormState(new Date());\n  const [selectedEvent, setSelectedEvent] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [selectedTeacher, setSelectedTeacher] = useState(\"\");\n  const [isLoading, toggleIsLoading] = useToggleState(false);\n\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n  useEffect(() => {\n    // Pass current dateTime to compare to recurrence events to check if a new batch of recurrences\n    // is needed\n    getEvents(now.getTime());\n    getTeachers(events);\n    for (const teacher in teachers) {\n      teacher.minsByDate = createPayPeriodData(\n        events,\n        teacher,\n        monthStart,\n        monthEnd\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    addTeachingMins(events, now);\n  }, [events]);\n\n  const moveEvent = ({ event, resourceId, start, end }) => {\n    const updatedEvent = { ...event, resourceId, start, end };\n    handleDoubleClick(updatedEvent);\n  };\n\n  const validateRoomAndResource = (event, resourceId, start) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (\n      !validateRoom(otherEvents, event.room, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return false;\n    }\n    if (\n      !validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\n        \"Teacher Conflict. Please choose another teacher or time\"\n      );\n      return false;\n    }\n    return true;\n  };\n\n  // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n  const handleMove = ({ event, resourceId, start, end }) => {\n    toggleIsLoading(true);\n    if (validateRoomAndResource(event, resourceId, start)) {\n      moveEvent({\n        event,\n        resourceId,\n        start,\n        end,\n      });\n      toggleIsLoading(false);\n      return true;\n    }\n    toggleIsLoading(false);\n    return false;\n  };\n\n  const handleSelect = ({ start, resourceId }) => {\n    toggleIsLoading(true);\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n    toggleIsLoading(false);\n  };\n\n  const handleDoubleClick = (event) => {\n    toggleIsLoading(true);\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n    toggleIsLoading(false);\n  };\n\n  const handleAddTeacherNav = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleAddStaffNav = () => {\n    setFormType(\"staff\");\n  };\n\n  const handleToggleSnackbar = (msg) => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollNav = () => {\n    setFormType(\"payroll\");\n  };\n\n  return (\n    <div>\n      {formType === \"event\" && (\n        <EventForm\n          formType={formType}\n          setFormType={setFormType}\n          startTime={startTime}\n          updateStartTime={updateStartTime}\n          event={selectedEvent}\n          setSelectedEvent={setSelectedEvent}\n          selectedTeacher={selectedTeacher}\n          validateRoomAndResource={validateRoomAndResource}\n        />\n      )}\n      {formType === \"teacher\" && (\n        <TeacherForm formType={formType} setFormType={setFormType} />\n      )}\n      {formType === \"staff\" && (\n        <StaffForm formType={formType} setFormType={setFormType} />\n      )}\n      {formType === \"payroll\" && <Payroll setFormType={setFormType} />}\n      <CustomizedSnackbars\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        variant={\"error\"}\n        msg={message}\n      />\n\n      <CustomDnDCalendar\n        handleMove={protectAction(user, handleMove)}\n        handleSelect={protectAction(user, handleSelect)}\n        handleDoubleClick={protectAction(user, handleDoubleClick)}\n        handleAddTeacherNav={protectAction(user, handleAddTeacherNav)}\n        handleAddStaffNav={protectAction(user, handleAddStaffNav)}\n        handlePayrollNav={protectAction(user, handlePayrollNav)}\n      />\n      <Footer />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}