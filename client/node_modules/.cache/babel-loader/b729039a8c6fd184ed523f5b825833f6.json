{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { addNewEvent } from \"../helperFunctions\";\nimport { UserContext } from \"../context/UserContext\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\nexport default function (initialEvents) {\n  const _useContext = useContext(UserContext),\n        user = _useContext.user;\n\n  const _useState = useState(initialEvents),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const getEventsFunc = async function (dateTime) {\n    await axios.get(\"/api/lessons\", tokenConfig(user)).then(res => {\n      if (res.data.length > 0) {\n        res.data.forEach(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end); // Check if last recurrence, and if so, create two more months of recurrences\n\n          if (event.isLast) {\n            if (dateTime >= event.start.getTime()) {\n              addNewEvent(event);\n            }\n          }\n        });\n        return setEvents(res.data);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return {\n    events,\n    getEvents: getEventsFunc(),\n    addEvent: async function (event) {\n      const newEvents = addNewEvent(event);\n      setEvents([...events, ...newEvents]);\n      await axios.post(\"/api/lessons/add\", newEvents, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n    },\n    deleteEvent: async function (event) {\n      await axios.delete(`/api/lessons/delete/${event._id}`, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      getEventsFunc();\n    },\n    editEvent: async function (event, editedEvent) {\n      const idx = events.findIndex(e => e._id === event._id);\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, editedEvent);\n      setEvents(nextEvents);\n      await axios.put(`/api/lessons/update/${event._id}`, editedEvent, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n    }\n  };\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/hooks/useEventsState.js"],"names":["useState","useContext","axios","addNewEvent","UserContext","tokenConfig","initialEvents","user","events","setEvents","getEventsFunc","dateTime","get","then","res","data","length","forEach","event","start","Date","end","isLast","getTime","catch","err","console","log","getEvents","addEvent","newEvents","post","deleteEvent","delete","_id","editEvent","editedEvent","idx","findIndex","e","nextEvents","splice","put"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { addNewEvent } from \"../helperFunctions\";\nimport { UserContext } from \"../context/UserContext\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\n\nexport default function (initialEvents) {\n  const { user } = useContext(UserContext);\n  const [events, setEvents] = useState(initialEvents);\n\n  const getEventsFunc = async function (dateTime) {\n    await axios\n      .get(\"/api/lessons\", tokenConfig(user))\n      .then((res) => {\n        if (res.data.length > 0) {\n          res.data.forEach((event) => {\n            event.start = new Date(event.start);\n            event.end = new Date(event.end);\n            // Check if last recurrence, and if so, create two more months of recurrences\n            if (event.isLast) {\n              if (dateTime >= event.start.getTime()) {\n                addNewEvent(event);\n              }\n            }\n          });\n          return setEvents(res.data);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return {\n    events,\n    getEvents: getEventsFunc(),\n    addEvent: async function (event) {\n      const newEvents = addNewEvent(event);\n      setEvents([...events, ...newEvents]);\n      await axios\n        .post(\"/api/lessons/add\", newEvents, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n    },\n    deleteEvent: async function (event) {\n      await axios\n        .delete(`/api/lessons/delete/${event._id}`, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      getEventsFunc();\n    },\n    editEvent: async function (event, editedEvent) {\n      const idx = events.findIndex((e) => e._id === event._id);\n      const nextEvents = [...events];\n\n      nextEvents.splice(idx, 1, editedEvent);\n      setEvents(nextEvents);\n      await axios\n        .put(`/api/lessons/update/${event._id}`, editedEvent, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}