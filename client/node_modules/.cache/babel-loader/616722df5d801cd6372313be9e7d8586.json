{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/TeacherForm.js\";\nimport React, { useContext } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const formType = props.formType,\n        setFormType = props.setFormType;\n\n  const _useContext = useContext(TeachersContext),\n        addTeacher = _useContext.addTeacher,\n        teachers = _useContext.teachers;\n\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 2),\n        givenName = _useInputState2[0],\n        updateGivenName = _useInputState2[1];\n\n  const _useInputState3 = useInputState(\"\"),\n        _useInputState4 = _slicedToArray(_useInputState3, 2),\n        familyName = _useInputState4[0],\n        updateFamilyName = _useInputState4[1];\n\n  const _useInputState5 = useInputState(\"\"),\n        _useInputState6 = _slicedToArray(_useInputState5, 2),\n        otThresholdHours = _useInputState6[0],\n        updateOtThresholdHours = _useInputState6[1];\n\n  const _useInputState7 = useInputState(\"\"),\n        _useInputState8 = _slicedToArray(_useInputState7, 2),\n        contractType = _useInputState8[0],\n        updateContractType = _useInputState8[1];\n\n  const _useInputState9 = useInputState(\"\"),\n        _useInputState10 = _slicedToArray(_useInputState9, 2),\n        dependentsNum = _useInputState10[0],\n        updateDependentsNum = _useInputState10[1];\n\n  const _useInputState11 = useInputState(\"\"),\n        _useInputState12 = _slicedToArray(_useInputState11, 2),\n        email = _useInputState12[0],\n        updateEmail = _useInputState12[1];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isPartTime = _useToggleState2[0],\n        toggleIsPartTime = _useToggleState2[1];\n\n  const signupTeacher = async () => {\n    e.preventDefault();\n    const user = {\n      givenName: givenName,\n      familyName: familyName,\n      email: email,\n      password: password\n    };\n    await axios.post(\"/api/users/signup\", user).then(res => {\n      dispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: res.data\n      });\n    }).catch(err => dispatch({\n      type: \"REGISTER_FAIL\"\n    }));\n    return console.log(\"Success! Logged In\");\n  };\n\n  const handleAddTeacher = e => {\n    e.preventDefault(); // Incrementally add 1 to the teacher resource ID to ensure unique IDs\n\n    let bigResourceId = 1;\n\n    if (teachers) {\n      teachers.forEach(t => {\n        if (t.resourceId > bigResourceId) {\n          bigResourceId = t.resourceId + 1;\n        } else {\n          bigResourceId++;\n        }\n      });\n    }\n\n    addTeacher({\n      resourceId: bigResourceId,\n      resourceTitle: givenName,\n      email: email,\n      name: givenName,\n      familyName: familyName,\n      teachingMins: 0,\n      otThreshold: parseInt(otThresholdHours * 60),\n      contractType: contractType,\n      dependentsNum: dependentsNum,\n      isPartTime: isPartTime\n    });\n    signupTeacher();\n    hideForm();\n  };\n\n  const hideForm = () => setFormType(\"\");\n\n  return React.createElement(Dialog, {\n    open: formType === \"teacher\",\n    onClose: hideForm,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(ValidatorForm, {\n    onSubmit: handleAddTeacher,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"New Teacher\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Enter Teacher Info\"), React.createElement(FormControlLabel, {\n    control: React.createElement(Switch, {\n      checked: isPartTime,\n      onChange: toggleIsPartTime,\n      value: isPartTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }),\n    label: \"Part-Time Teacher\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"givenName\",\n    label: \"Given Name\",\n    type: \"text\",\n    value: givenName,\n    onChange: updateGivenName,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Given Name\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"lastName\",\n    label: \"Family Name\",\n    type: \"text\",\n    value: familyName,\n    onChange: updateFamilyName,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter the Last Name\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    value: email,\n    onChange: updateEmail,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Enter a valid email\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"contractType\",\n    label: \"Contract Type\",\n    type: \"text\",\n    value: contractType,\n    onChange: updateContractType,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Select a contract type\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), !isPartTime && React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"otThreshold\",\n    label: \"Overtime threshold (hours)\",\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    value: otThresholdHours,\n    onChange: updateOtThresholdHours,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Set first OT threshold\"],\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), !isPartTime && React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    margin: \"dense\",\n    id: \"dependentsNum\",\n    label: \"Number of dependents\",\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    value: dependentsNum,\n    onChange: updateDependentsNum,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: hideForm,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Add Teacher\"))));\n}","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/TeacherForm.js"],"names":["React","useContext","ValidatorForm","TextValidator","useInputState","useToggleState","TeachersContext","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","Switch","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","EventForm","props","classes","formType","setFormType","addTeacher","teachers","givenName","updateGivenName","familyName","updateFamilyName","otThresholdHours","updateOtThresholdHours","contractType","updateContractType","dependentsNum","updateDependentsNum","email","updateEmail","isPartTime","toggleIsPartTime","signupTeacher","e","preventDefault","user","password","axios","post","then","res","dispatch","type","payload","data","catch","err","console","log","handleAddTeacher","bigResourceId","forEach","t","resourceId","resourceTitle","name","teachingMins","otThreshold","parseInt","hideForm"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { TeachersContext } from \"../context/TeachersContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const { formType, setFormType } = props;\n  const { addTeacher, teachers } = useContext(TeachersContext);\n\n  const [givenName, updateGivenName] = useInputState(\"\");\n  const [familyName, updateFamilyName] = useInputState(\"\");\n  const [otThresholdHours, updateOtThresholdHours] = useInputState(\"\");\n  const [contractType, updateContractType] = useInputState(\"\");\n  const [dependentsNum, updateDependentsNum] = useInputState(\"\");\n  const [email, updateEmail] = useInputState(\"\");\n  const [isPartTime, toggleIsPartTime] = useToggleState(false);\n\n  const signupTeacher = async () => {\n    e.preventDefault();\n    const user = {\n      givenName: givenName,\n      familyName: familyName,\n      email: email,\n      password: password,\n    };\n    await axios\n      .post(\"/api/users/signup\", user)\n      .then((res) => {\n        dispatch({\n          type: \"REGISTER_SUCCESS\",\n          payload: res.data,\n        });\n      })\n      .catch((err) => dispatch({ type: \"REGISTER_FAIL\" }));\n    return console.log(\"Success! Logged In\");\n  };\n\n  const handleAddTeacher = (e) => {\n    e.preventDefault();\n    // Incrementally add 1 to the teacher resource ID to ensure unique IDs\n    let bigResourceId = 1;\n    if (teachers) {\n      teachers.forEach((t) => {\n        if (t.resourceId > bigResourceId) {\n          bigResourceId = t.resourceId + 1;\n        } else {\n          bigResourceId++;\n        }\n      });\n    }\n    addTeacher({\n      resourceId: bigResourceId,\n      resourceTitle: givenName,\n      email: email,\n      name: givenName,\n      familyName: familyName,\n      teachingMins: 0,\n      otThreshold: parseInt(otThresholdHours * 60),\n      contractType: contractType,\n      dependentsNum: dependentsNum,\n      isPartTime: isPartTime,\n    });\n    signupTeacher();\n    hideForm();\n  };\n\n  const hideForm = () => setFormType(\"\");\n\n  return (\n    <Dialog\n      open={formType === \"teacher\"}\n      onClose={hideForm}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <ValidatorForm onSubmit={handleAddTeacher}>\n        <DialogTitle id=\"form-dialog-title\">New Teacher</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter Teacher Info</DialogContentText>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isPartTime}\n                onChange={toggleIsPartTime}\n                value={isPartTime}\n              />\n            }\n            label=\"Part-Time Teacher\"\n          />\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"givenName\"\n              label=\"Given Name\"\n              type=\"text\"\n              value={givenName}\n              onChange={updateGivenName}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Given Name\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"lastName\"\n              label=\"Family Name\"\n              type=\"text\"\n              value={familyName}\n              onChange={updateFamilyName}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Last Name\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={updateEmail}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter a valid email\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"contractType\"\n              label=\"Contract Type\"\n              type=\"text\"\n              value={contractType}\n              onChange={updateContractType}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Select a contract type\"]}\n              required\n            />\n          </FormControl>\n          {!isPartTime && (\n            <FormControl className={classes.formControl}>\n              <TextValidator\n                margin=\"dense\"\n                id=\"otThreshold\"\n                label=\"Overtime threshold (hours)\"\n                type=\"text\"\n                pattern=\"[0-9]*\"\n                value={otThresholdHours}\n                onChange={updateOtThresholdHours}\n                fullWidth\n                validators={[\"required\"]}\n                errorMessages={[\"Set first OT threshold\"]}\n                required\n              />\n            </FormControl>\n          )}\n          {!isPartTime && (\n            <FormControl className={classes.formControl}>\n              <TextValidator\n                margin=\"dense\"\n                id=\"dependentsNum\"\n                label=\"Number of dependents\"\n                type=\"text\"\n                pattern=\"[0-9]*\"\n                value={dependentsNum}\n                onChange={updateDependentsNum}\n                fullWidth\n                required\n              />\n            </FormControl>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={hideForm} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            Add Teacher\n          </Button>\n        </DialogActions>\n      </ValidatorForm>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}