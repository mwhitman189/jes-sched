{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport axios from \"axios\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport uuid from \"uuid/v4\";\n\nconst updateTeacher = async (state, teacher) => {\n  await axios.put(`/teachers/update/${teacher._id}`, teacher).then(res => console.log(res.data)).catch(err => console.log(err));\n  return state.map(t => t.id === teacher.id ? _objectSpread({}, t, {\n    resourceTitle: t.resourceTitle,\n    name: t.name,\n    familyName: t.familyName,\n    teachingMins: t.teachingMins,\n    holidayMins: t.holidayMins,\n    outsideDutyMins: t.outsideDutyMins,\n    otThreshold: t.otThreshold,\n    overThresholdOneMins: t.overThresholdOneMins,\n    overThresholdTwoMins: t.overThresholdTwoMins\n  }) : t);\n};\n\nconst reducer = async (state, action) => {\n  const teacher = action.teacher && action.Teacher;\n  const events = action.events && action.events;\n\n  switch (action.type) {\n    case \"GET_TEACHERS\":\n      let teachersArr;\n      await axios.get(\"/teachers/\").then(res => {\n        teachersArr = res.data;\n      }).catch(err => console.log(err));\n      return [...state, teachersArr];\n\n    case \"ADD_TEACHER\":\n      await axios.post(\"/teachers/add\", teacher).then(res => console.log(res.data)).catch(err => console.log(err));\n      return [...state, {\n        id: uuid(),\n        teacher\n      }];\n\n    case \"DELETE_TEACHER\":\n      await axios.delete(`/teachers/delete/${teacher._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n      return state.filter(t => t.id !== action.id);\n\n    case \"UPDATE_TEACHER\":\n      updateTeacher(state, teacher);\n\n    case \"CALC_TEACHING_MINS\":\n      const now = new Date(); // Create start and end dates for the current month to calc\n      // teaching minutes\n\n      const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n      const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n      if (state.length > 0) {\n        // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n        state.forEach(t => {\n          t.teachingMins = 0;\n          t.outsideDutyMins = 0;\n          t.holidayMins = 0;\n          t.overThresholdOneMins = 0;\n          t.overThresholdTwoMins = 0;\n          createPayPeriodData(events, teacher, monthStart, monthEnd);\n          updateTeacher(state, t);\n        });\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/reducers/teachersReducer.js"],"names":["axios","createPayPeriodData","uuid","updateTeacher","state","teacher","put","_id","then","res","console","log","data","catch","err","map","t","id","resourceTitle","name","familyName","teachingMins","holidayMins","outsideDutyMins","otThreshold","overThresholdOneMins","overThresholdTwoMins","reducer","action","Teacher","events","type","teachersArr","get","post","delete","filter","now","Date","monthStart","getFullYear","getMonth","monthEnd","length","forEach"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport uuid from \"uuid/v4\";\n\nconst updateTeacher = async (state, teacher) => {\n  await axios\n    .put(`/teachers/update/${teacher._id}`, teacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  return state.map(t =>\n    t.id === teacher.id\n      ? {\n          ...t,\n          resourceTitle: t.resourceTitle,\n          name: t.name,\n          familyName: t.familyName,\n          teachingMins: t.teachingMins,\n          holidayMins: t.holidayMins,\n          outsideDutyMins: t.outsideDutyMins,\n          otThreshold: t.otThreshold,\n          overThresholdOneMins: t.overThresholdOneMins,\n          overThresholdTwoMins: t.overThresholdTwoMins\n        }\n      : t\n  );\n};\n\nconst reducer = async (state, action) => {\n  const teacher = action.teacher && action.Teacher;\n  const events = action.events && action.events;\n\n  switch (action.type) {\n    case \"GET_TEACHERS\":\n      let teachersArr;\n      await axios\n        .get(\"/teachers/\")\n        .then(res => {\n          teachersArr = res.data;\n        })\n        .catch(err => console.log(err));\n      return [...state, teachersArr];\n\n    case \"ADD_TEACHER\":\n      await axios\n        .post(\"/teachers/add\", teacher)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n      return [...state, { id: uuid(), teacher }];\n\n    case \"DELETE_TEACHER\":\n      await axios\n        .delete(`/teachers/delete/${teacher._id}`)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err));\n      return state.filter(t => t.id !== action.id);\n\n    case \"UPDATE_TEACHER\":\n      updateTeacher(state, teacher);\n\n    case \"CALC_TEACHING_MINS\":\n      const now = new Date();\n      // Create start and end dates for the current month to calc\n      // teaching minutes\n      const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n      const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n      if (state.length > 0) {\n        // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n        state.forEach(t => {\n          t.teachingMins = 0;\n          t.outsideDutyMins = 0;\n          t.holidayMins = 0;\n          t.overThresholdOneMins = 0;\n          t.overThresholdTwoMins = 0;\n\n          createPayPeriodData(events, teacher, monthStart, monthEnd);\n          updateTeacher(state, t);\n        });\n      }\n      return state;\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}