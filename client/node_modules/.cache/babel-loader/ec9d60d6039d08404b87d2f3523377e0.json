{"ast":null,"code":"import _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\nimport { UserContext } from \"../context/UserContext\";\nexport default (initialStudents => {\n  const _useContext = useContext(UserContext),\n        user = _useContext.user;\n\n  const _useState = useState(initialStudents),\n        _useState2 = _slicedToArray(_useState, 2),\n        students = _useState2[0],\n        setStudents = _useState2[1];\n\n  const getStudents = async dateTime => {\n    await axios.get(\"/api/lessons\", tokenConfig(user)).then(res => {\n      res.data.forEach(student => {\n        student.start = new Date(student.start);\n        student.end = new Date(student.end); // Check if last recurrence, and if so, create two more months of recurrences\n\n        if (student.isLast) {\n          if (dateTime >= student.start.getTime()) {\n            const newStudents = addNewStudent(student);\n            res.data = [...res.data, newStudents];\n          }\n        }\n      });\n      return setStudents(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  return {\n    students,\n    setStudents,\n    addStudent: async newStudent => {\n      await axios.post(\"/api/students/add\", newStudent, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      return setStudents([...students, newStudent]);\n    },\n    editStudent: async function (student, editedStudent) {\n      await axios.put(`/api/lessons/update/${student._id}`, editedStudent, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      getStudents(todaysDate);\n    },\n    deleteStudent: async student => {\n      await axios.delete(`/api/students/delete/${student._id}`, tokenConfig(user)).then(res => console.log(res.data)).catch(err => console.log(err));\n      return setStudents(students.filter(t => t._id !== student._id));\n    }\n  };\n});","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/hooks/useStudentsState.js"],"names":["useState","useContext","axios","tokenConfig","UserContext","initialStudents","user","students","setStudents","getStudents","dateTime","get","then","res","data","forEach","student","start","Date","end","isLast","getTime","newStudents","addNewStudent","catch","err","console","log","addStudent","newStudent","post","editStudent","editedStudent","put","_id","todaysDate","deleteStudent","delete","filter","t"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,gBAAgBC,eAAD,IAAqB;AAAA,sBACjBJ,UAAU,CAACG,WAAD,CADO;AAAA,QAC1BE,IAD0B,eAC1BA,IAD0B;;AAAA,oBAEFN,QAAQ,CAACK,eAAD,CAFN;AAAA;AAAA,QAE3BE,QAF2B;AAAA,QAEjBC,WAFiB;;AAIlC,QAAMC,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtC,UAAMR,KAAK,CACRS,GADG,CACC,cADD,EACiBR,WAAW,CAACG,IAAD,CAD5B,EAEHM,IAFG,CAEGC,GAAD,IAAS;AACbA,MAAAA,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAkBC,OAAD,IAAa;AAC5BA,QAAAA,OAAO,CAACC,KAAR,GAAgB,IAAIC,IAAJ,CAASF,OAAO,CAACC,KAAjB,CAAhB;AACAD,QAAAA,OAAO,CAACG,GAAR,GAAc,IAAID,IAAJ,CAASF,OAAO,CAACG,GAAjB,CAAd,CAF4B,CAG5B;;AACA,YAAIH,OAAO,CAACI,MAAZ,EAAoB;AAClB,cAAIV,QAAQ,IAAIM,OAAO,CAACC,KAAR,CAAcI,OAAd,EAAhB,EAAyC;AACvC,kBAAMC,WAAW,GAAGC,aAAa,CAACP,OAAD,CAAjC;AACAH,YAAAA,GAAG,CAACC,IAAJ,GAAW,CAAC,GAAGD,GAAG,CAACC,IAAR,EAAcQ,WAAd,CAAX;AACD;AACF;AACF,OAVD;AAWA,aAAOd,WAAW,CAACK,GAAG,CAACC,IAAL,CAAlB;AACD,KAfG,EAgBHU,KAhBG,CAgBIC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhBZ,CAAN;AAiBD,GAlBD;;AAoBA,SAAO;AACLlB,IAAAA,QADK;AAELC,IAAAA,WAFK;AAGLoB,IAAAA,UAAU,EAAE,MAAOC,UAAP,IAAsB;AAChC,YAAM3B,KAAK,CACR4B,IADG,CACE,mBADF,EACuBD,UADvB,EACmC1B,WAAW,CAACG,IAAD,CAD9C,EAEHM,IAFG,CAEGC,GAAD,IAASa,OAAO,CAACC,GAAR,CAAYd,GAAG,CAACC,IAAhB,CAFX,EAGHU,KAHG,CAGIC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHZ,CAAN;AAIA,aAAOjB,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcsB,UAAd,CAAD,CAAlB;AACD,KATI;AAULE,IAAAA,WAAW,EAAE,gBAAgBf,OAAhB,EAAyBgB,aAAzB,EAAwC;AACnD,YAAM9B,KAAK,CACR+B,GADG,CAED,uBAAsBjB,OAAO,CAACkB,GAAI,EAFjC,EAGFF,aAHE,EAIF7B,WAAW,CAACG,IAAD,CAJT,EAMHM,IANG,CAMGC,GAAD,IAASa,OAAO,CAACC,GAAR,CAAYd,GAAG,CAACC,IAAhB,CANX,EAOHU,KAPG,CAOIC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPZ,CAAN;AAQAhB,MAAAA,WAAW,CAAC0B,UAAD,CAAX;AACD,KApBI;AAqBLC,IAAAA,aAAa,EAAE,MAAOpB,OAAP,IAAmB;AAChC,YAAMd,KAAK,CACRmC,MADG,CACK,wBAAuBrB,OAAO,CAACkB,GAAI,EADxC,EAC2C/B,WAAW,CAACG,IAAD,CADtD,EAEHM,IAFG,CAEGC,GAAD,IAASa,OAAO,CAACC,GAAR,CAAYd,GAAG,CAACC,IAAhB,CAFX,EAGHU,KAHG,CAGIC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHZ,CAAN;AAIA,aAAOjB,WAAW,CAACD,QAAQ,CAAC+B,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUlB,OAAO,CAACkB,GAAzC,CAAD,CAAlB;AACD;AA3BI,GAAP;AA6BD,CArDD","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"../reducers/loadUserReducer\";\nimport { UserContext } from \"../context/UserContext\";\n\nexport default (initialStudents) => {\n  const { user } = useContext(UserContext);\n  const [students, setStudents] = useState(initialStudents);\n\n  const getStudents = async (dateTime) => {\n    await axios\n      .get(\"/api/lessons\", tokenConfig(user))\n      .then((res) => {\n        res.data.forEach((student) => {\n          student.start = new Date(student.start);\n          student.end = new Date(student.end);\n          // Check if last recurrence, and if so, create two more months of recurrences\n          if (student.isLast) {\n            if (dateTime >= student.start.getTime()) {\n              const newStudents = addNewStudent(student);\n              res.data = [...res.data, newStudents];\n            }\n          }\n        });\n        return setStudents(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return {\n    students,\n    setStudents,\n    addStudent: async (newStudent) => {\n      await axios\n        .post(\"/api/students/add\", newStudent, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      return setStudents([...students, newStudent]);\n    },\n    editStudent: async function (student, editedStudent) {\n      await axios\n        .put(\n          `/api/lessons/update/${student._id}`,\n          editedStudent,\n          tokenConfig(user)\n        )\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      getStudents(todaysDate);\n    },\n    deleteStudent: async (student) => {\n      await axios\n        .delete(`/api/students/delete/${student._id}`, tokenConfig(user))\n        .then((res) => console.log(res.data))\n        .catch((err) => console.log(err));\n      return setStudents(students.filter((t) => t._id !== student._id));\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}