{"ast":null,"code":"import axios from \"axios\";\n\nconst loadUserReducer = async (state, dispatch) => {\n  dispatch({\n    type: \"USER_LOADING\"\n  });\n  console.log(state);\n  const token = state.token;\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) config.headers[\"x-auth-token\"] = token;\n  await axios.post(\"/api/auth/user\", config).then(res => {\n    // Cookies.set(\"token\", res.data.token);\n    dispatch({\n      type: \"USER_LOADED\",\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: \"AUTH_ERROR\"\n    });\n  });\n};\n\nexport default loadUserReducer;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/reducers/loadUserReducer.js"],"names":["axios","loadUserReducer","state","dispatch","type","console","log","token","config","headers","post","then","res","payload","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AACjDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,QAAMK,KAAK,GAAGL,KAAK,CAACK,KAApB;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf,CALiD,CAWjD;;AACA,MAAIF,KAAJ,EAAWC,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCF,KAAjC;AAEX,QAAMP,KAAK,CACRU,IADG,CACE,gBADF,EACoBF,MADpB,EAEHG,IAFG,CAEGC,GAAD,IAAS;AACb;AACAT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,aADC;AAEPS,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,KAAD,CAAR;AAID,GARG,EASHC,KATG,CASIC,GAAD,IAAS;AACdb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAXG,CAAN;AAYD,CA1BD;;AA2BA,eAAeH,eAAf","sourcesContent":["import axios from \"axios\";\n\nconst loadUserReducer = async (state, dispatch) => {\n  dispatch({ type: \"USER_LOADING\" });\n  console.log(state);\n  const token = state.token;\n\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers\n  if (token) config.headers[\"x-auth-token\"] = token;\n\n  await axios\n    .post(\"/api/auth/user\", config)\n    .then((res) => {\n      // Cookies.set(\"token\", res.data.token);\n      dispatch({\n        type: \"USER_LOADED\",\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: \"AUTH_ERROR\" });\n    });\n};\nexport default loadUserReducer;\n"]},"metadata":{},"sourceType":"module"}