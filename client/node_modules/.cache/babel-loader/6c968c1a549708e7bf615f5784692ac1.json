{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport axios from \"axios\";\nimport { RRule } from \"rrule\";\nimport moment from \"moment\";\n\nvar JapaneseHolidays = require(\"japanese-holidays\");\n\nconst getRecurrences = event => {\n  const now = new Date(); // Create start and end dates for the current month to calc\n  // teaching minutes\n\n  const month_start = new Date(now.getFullYear(), now.getMonth(), 1);\n  const month_end = new Date(now.getFullYear(), now.getMonth() + 2, 0); // Create an array of DateTimes for the recurrence of events.\n\n  const rrule = new RRule({\n    freq: RRule.WEEKLY,\n    count: 26,\n    interval: 1,\n    dtstart: new Date(event.start)\n  });\n  const twoMonthsRecurrences = rrule.between(month_start, month_end);\n  twoMonthsRecurrences.shift();\n  return twoMonthsRecurrences;\n}; // for each:\n// if !startTime, set startTime and endTime, otherwise:\n// if new.startTime < old.startTime:\n// set new.startTime, otherwise:\n// if new.endTime > old.endTime:\n// set new.endTime, otherwise:\n// return start and end times as object\n\n\nconst calcDutyHours = (dutyHours, start, end) => {\n  if (moment(start) < dutyHours.startTime) {\n    dutyHours.startTime = moment(start);\n  } else if (moment(end) > dutyHours.endTime) {\n    dutyHours.endTime = moment(end);\n  } // Add 9 hours to the DH start time to ensure a minimum of 9 DH\n\n\n  if (dutyHours.endTime.diff(dutyHours.startTime, \"hours\") < 9) {\n    dutyHours.endTime = moment(dutyHours.startTime).add(9, \"hours\");\n  }\n\n  return dutyHours;\n};\n\nconst calcOutsideDutyMins = (eventStart, eventEnd, duration, dutyHoursStart, dutyHoursEnd) => {\n  // Calculate difference in hours between the duty hours start time and the lesson start time\n  const startDiff = dutyHoursStart.diff(eventStart, \"minutes\");\n  const endDiff = dutyHoursStart.diff(eventEnd, \"minutes\"); // Calculate difference in hours between the duty hours end time and the lesson end time\n\n  const afterDhEndDiff = -dutyHoursEnd.diff(eventEnd, \"minutes\");\n  const afterDhStartDiff = -dutyHoursEnd.diff(eventStart, \"minutes\");\n  let outsideDutyMins;\n\n  if (startDiff <= 0 && afterDhEndDiff <= 0) {\n    outsideDutyMins = 0;\n    return {\n      teachingMins: duration,\n      outsideDutyMins: outsideDutyMins\n    };\n  } else if (startDiff > 0 && endDiff > 0 || afterDhEndDiff > 0 && afterDhStartDiff > 0) {\n    return {\n      teachingMins: 0,\n      outsideDutyMins: duration\n    };\n  } else if (startDiff > 0) {\n    const regularTeachingMins = duration - startDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: startDiff\n    };\n  } else {\n    const regularTeachingMins = duration - afterDhEndDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: afterDhEndDiff\n    };\n  }\n};\n\nconst createPayPeriodData = (events, teacher, monthStart, monthEnd) => {\n  // Creates an object of dates containing minutes worked, by work type\n  const datesData = {};\n  teacher.teachingMins = 0;\n  teacher.outsideDutyMins = 0;\n  teacher.holidayMins = 0;\n  teacher.overThresholdOneMins = 0;\n  teacher.overThresholdTwoMins = 0;\n  const monthEvents = events.filter(e => {\n    return moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\") && e.resourceId === teacher.resourceId;\n  });\n  const dutyHoursByDate = {};\n  monthEvents.forEach(e => {\n    const date = e.start.getDate(); // Set the base duty hours to noon to ensure at least 9 duty hours\n\n    if (!dutyHoursByDate[date]) {\n      const baseDutyHours = {\n        startTime: moment(e.start).set(\"hour\", 12).set(\"minutes\", 0),\n        endTime: moment(e.start).set(\"hour\", 12).set(\"minutes\", 0)\n      }; // Set the duty hours for the event's date\n\n      dutyHoursByDate[date] = calcDutyHours(baseDutyHours, e.start, e.end);\n    } else {\n      // Set the duty hours for the event's date\n      dutyHoursByDate[date] = calcDutyHours(dutyHoursByDate[date], e.start, e.end);\n    }\n  });\n  console.log(dutyHoursByDate);\n  monthEvents.forEach(e => {\n    if (moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\")) {\n      if (e.resourceId === teacher.resourceId) {\n        const date = e.start.getDate();\n        const day = e.start.getDay(); // Calculate number of minutes to add to first threshold to calc second threshold. (10 hours * 60 mins)\n\n        const secondThreshold = 10 * 60;\n        let teachingMins = 0;\n        let outsideDutyMins = 0;\n        let holidayMins = 0; // If event falls on a national holiday, add the class duration to holiday minutes,\n        // otherwise, add to total teaching minutes\n\n        if (JapaneseHolidays.isHoliday(e.start) || e.start.getDay() === (0 || 1)) {\n          holidayMins = parseInt(e.duration);\n          teacher.holidayMins += holidayMins;\n        } else {\n          const totalTeachingMins = calcOutsideDutyMins(e.start, e.end, e.duration, dutyHoursByDate[date].startTime, dutyHoursByDate[date].endTime); // Add total teaching minutes and outside duty minutes to teacher object\n\n          teachingMins = totalTeachingMins.teachingMins;\n          teacher.teachingMins += teachingMins;\n          outsideDutyMins = totalTeachingMins.outsideDutyMins;\n          teacher.outsideDutyMins += outsideDutyMins;\n        } // Calculate hours worked over monthly thresholds one and two\n\n\n        if (teacher.teachingMins >= teacher.otThreshold + secondThreshold) {\n          teacher.overThresholdTwoMins += teacher.teachingMins - (teacher.otThreshold + secondThreshold);\n          teacher.overThresholdOneMins += secondThreshold;\n        } else if (teacher.teachingMins >= teacher.otThreshold) {\n          teacher.overThresholdOneMins += teacher.teachingMins - teacher.otThreshold;\n        } // Teaching minutes object to be added to hash table\n\n\n        const dateData = {\n          resourceId: teacher,\n          date: date,\n          day: day,\n          teachingMins: teachingMins,\n          outsideDutyMins: outsideDutyMins,\n          overThresholdOneMins: teacher.overThresholdOneMins,\n          overThresholdTwoMins: teacher.overThresholdTwoMins,\n          holidayMins: holidayMins,\n          travelAllowance: 0,\n          travelExpenses: 0\n        }; // If date already in hash table, add teaching minutes to existing keys, otherwise create\n        // a new date object\n\n        if (datesData[date]) {\n          datesData[date].teachingMins += dateData.teachingMins;\n          datesData[date].outsideDutyMins += dateData.outsideDutyMins;\n          datesData[date].overThresholdOneMins += dateData.overThresholdOneMins;\n          datesData[date].overThresholdTwoMins += dateData.overThresholdTwoMins;\n          datesData[date].holidayMins += dateData.holidayMins;\n          datesData[date].travelAllowance += dateData.travelAllowance;\n          datesData[date].travelExpenses += dateData.travelExpenses;\n        } else {\n          datesData[date] = dateData;\n        }\n      }\n    }\n  });\n  return datesData;\n};\n\nconst addTeachingMins = (events, teachers, setTeachers) => {\n  const now = new Date(); // Create start and end dates for the current month to calc\n  // teaching minutes\n\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n  if (teachers.length > 0) {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      teacher.teachingMins = 0;\n      teacher.outsideDutyMins = 0;\n      teacher.holidayMins = 0;\n      teacher.overThresholdOneMins = 0;\n      teacher.overThresholdTwoMins = 0;\n    });\n    teachers.forEach(teacher => {\n      createPayPeriodData(events, teacher, monthStart, monthEnd);\n      updateTeacher(teacher, teachers, setTeachers);\n    });\n  }\n};\n\nconst getTeachers = async (events, teachers, setTeachers) => {\n  return await axios.get(\"/teachers/\").then(res => {\n    if (res.data.length > 0) {\n      setTeachers(res.data);\n    }\n  }).then(addTeachingMins(events, teachers, setTeachers)).catch(err => console.log(err));\n};\n\nconst getLessons = async (events, setEvents) => {\n  return await axios.get(\"/lessons/\").then(res => {\n    if (res.data.length > 0) {\n      res.data.map(event => {\n        event.start = new Date(event.start);\n        event.end = new Date(event.end);\n      });\n      setEvents([...res.data, events[0]]);\n    }\n  }).catch(err => console.log(err));\n};\n\nconst addLesson = async (events, event, setEvents) => {\n  const newEvents = [];\n\n  if (event.recur === true) {\n    const recurrences = getRecurrences(event);\n    recurrences.map(r => {\n      const newEvent = _objectSpread({}, event, {\n        start: r,\n        end: moment(r).add(event.duration, \"m\").toDate(),\n        isNewEvent: false\n      });\n\n      if (JapaneseHolidays.isHoliday(r)) {\n        newEvent.isHoliday = true;\n      }\n\n      newEvents.push(newEvent);\n    });\n  }\n\n  if (JapaneseHolidays.isHoliday(event.start)) {\n    event = _objectSpread({}, event, {\n      isHoliday: true\n    });\n  }\n\n  event = _objectSpread({}, event, {\n    isNewEvent: true\n  });\n  newEvents.push(event);\n  await axios.post(\"/lessons/add\", newEvents).then(res => console.log(res.data)).catch(err => console.log(err));\n  return getLessons(events, setEvents);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios.post(\"/teachers/add\", newTeacher).then(res => console.log(res.data)).catch(err => console.log(err));\n  return setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async (teacher, teachers, setTeachers) => {\n  const idx = teachers.findIndex(t => t._id === teacher._id);\n  const updatedTeachers = [...teachers];\n\n  const updatedTeacher = _objectSpread({}, teacher, {\n    resourceTitle: teacher.resourceTitle,\n    name: teacher.name,\n    familyName: teacher.familyName,\n    teachingMins: teacher.teachingMins,\n    holidayMins: teacher.holidayMins,\n    outsideDutyMins: teacher.outsideDutyMins,\n    otThreshold: teacher.otThreshold,\n    overThresholdOneMins: teacher.overThresholdOneMins,\n    overThresholdTwoMins: teacher.overThresholdTwoMins\n  });\n\n  updatedTeachers.splice(idx, 1, updatedTeacher);\n  setTeachers(updatedTeachers);\n  return await axios.put(`/teachers/update/${teacher._id}`, updatedTeacher).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst deleteTeacher = async teacher => {\n  return await axios.delete(`/teachers/delete/${teacher._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst deleteEvent = async (events, event, setEvents) => {\n  const newEvents = events.filter(evt => evt._id !== event._id);\n  setEvents(newEvents);\n  return await axios.delete(`/lessons/delete/${event._id}`).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst changeEvent = async (events, event, editedEvent, setEvents) => {\n  const idx = events.findIndex(e => e._id === event._id);\n  const nextEvents = [...events];\n  nextEvents.splice(idx, 1, editedEvent);\n  setEvents(nextEvents);\n  return await axios.put(`/lessons/update/${event._id}`, editedEvent).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nconst addPayment = async newPayment => {\n  return await axios.post(`/payments/add`, newPayment).then(res => console.log(res.data)).catch(err => console.log(err));\n};\n\nexport { getRecurrences, addTeachingMins, getTeachers, getLessons, addLesson, addTeacher, updateTeacher, deleteTeacher, deleteEvent, changeEvent, addPayment, createPayPeriodData };","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/helperFunctions.js"],"names":["axios","RRule","moment","JapaneseHolidays","require","getRecurrences","event","now","Date","month_start","getFullYear","getMonth","month_end","rrule","freq","WEEKLY","count","interval","dtstart","start","twoMonthsRecurrences","between","shift","calcDutyHours","dutyHours","end","startTime","endTime","diff","add","calcOutsideDutyMins","eventStart","eventEnd","duration","dutyHoursStart","dutyHoursEnd","startDiff","endDiff","afterDhEndDiff","afterDhStartDiff","outsideDutyMins","teachingMins","regularTeachingMins","createPayPeriodData","events","teacher","monthStart","monthEnd","datesData","holidayMins","overThresholdOneMins","overThresholdTwoMins","monthEvents","filter","e","isBetween","resourceId","dutyHoursByDate","forEach","date","getDate","baseDutyHours","set","console","log","day","getDay","secondThreshold","isHoliday","parseInt","totalTeachingMins","otThreshold","dateData","travelAllowance","travelExpenses","addTeachingMins","teachers","setTeachers","length","updateTeacher","getTeachers","get","then","res","data","catch","err","getLessons","setEvents","map","addLesson","newEvents","recur","recurrences","r","newEvent","toDate","isNewEvent","push","post","addTeacher","newTeacher","idx","findIndex","t","_id","updatedTeachers","updatedTeacher","resourceTitle","name","familyName","splice","put","deleteTeacher","delete","deleteEvent","evt","changeEvent","editedEvent","nextEvents","addPayment","newPayment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { RRule } from \"rrule\";\nimport moment from \"moment\";\n\nvar JapaneseHolidays = require(\"japanese-holidays\");\n\nconst getRecurrences = event => {\n  const now = new Date();\n  // Create start and end dates for the current month to calc\n  // teaching minutes\n  const month_start = new Date(now.getFullYear(), now.getMonth(), 1);\n  const month_end = new Date(now.getFullYear(), now.getMonth() + 2, 0);\n  // Create an array of DateTimes for the recurrence of events.\n  const rrule = new RRule({\n    freq: RRule.WEEKLY,\n    count: 26,\n    interval: 1,\n    dtstart: new Date(event.start)\n  });\n  const twoMonthsRecurrences = rrule.between(month_start, month_end);\n  twoMonthsRecurrences.shift();\n  return twoMonthsRecurrences;\n};\n\n// for each:\n// if !startTime, set startTime and endTime, otherwise:\n// if new.startTime < old.startTime:\n// set new.startTime, otherwise:\n// if new.endTime > old.endTime:\n// set new.endTime, otherwise:\n// return start and end times as object\nconst calcDutyHours = (dutyHours, start, end) => {\n  if (moment(start) < dutyHours.startTime) {\n    dutyHours.startTime = moment(start);\n  } else if (moment(end) > dutyHours.endTime) {\n    dutyHours.endTime = moment(end);\n  }\n\n  // Add 9 hours to the DH start time to ensure a minimum of 9 DH\n  if (dutyHours.endTime.diff(dutyHours.startTime, \"hours\") < 9) {\n    dutyHours.endTime = moment(dutyHours.startTime).add(9, \"hours\");\n  }\n  return dutyHours;\n};\n\nconst calcOutsideDutyMins = (\n  eventStart,\n  eventEnd,\n  duration,\n  dutyHoursStart,\n  dutyHoursEnd\n) => {\n  // Calculate difference in hours between the duty hours start time and the lesson start time\n  const startDiff = dutyHoursStart.diff(eventStart, \"minutes\");\n  const endDiff = dutyHoursStart.diff(eventEnd, \"minutes\");\n\n  // Calculate difference in hours between the duty hours end time and the lesson end time\n  const afterDhEndDiff = -dutyHoursEnd.diff(eventEnd, \"minutes\");\n  const afterDhStartDiff = -dutyHoursEnd.diff(eventStart, \"minutes\");\n\n  let outsideDutyMins;\n  if (startDiff <= 0 && afterDhEndDiff <= 0) {\n    outsideDutyMins = 0;\n    return {\n      teachingMins: duration,\n      outsideDutyMins: outsideDutyMins\n    };\n  } else if (\n    (startDiff > 0 && endDiff > 0) ||\n    (afterDhEndDiff > 0 && afterDhStartDiff > 0)\n  ) {\n    return {\n      teachingMins: 0,\n      outsideDutyMins: duration\n    };\n  } else if (startDiff > 0) {\n    const regularTeachingMins = duration - startDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: startDiff\n    };\n  } else {\n    const regularTeachingMins = duration - afterDhEndDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: afterDhEndDiff\n    };\n  }\n};\n\nconst createPayPeriodData = (events, teacher, monthStart, monthEnd) => {\n  // Creates an object of dates containing minutes worked, by work type\n  const datesData = {};\n  teacher.teachingMins = 0;\n  teacher.outsideDutyMins = 0;\n  teacher.holidayMins = 0;\n  teacher.overThresholdOneMins = 0;\n  teacher.overThresholdTwoMins = 0;\n\n  const monthEvents = events.filter(e => {\n    return (\n      moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\") &&\n      e.resourceId === teacher.resourceId\n    );\n  });\n\n  const dutyHoursByDate = {};\n  monthEvents.forEach(e => {\n    const date = e.start.getDate();\n    // Set the base duty hours to noon to ensure at least 9 duty hours\n    if (!dutyHoursByDate[date]) {\n      const baseDutyHours = {\n        startTime: moment(e.start)\n          .set(\"hour\", 12)\n          .set(\"minutes\", 0),\n        endTime: moment(e.start)\n          .set(\"hour\", 12)\n          .set(\"minutes\", 0)\n      };\n      // Set the duty hours for the event's date\n      dutyHoursByDate[date] = calcDutyHours(baseDutyHours, e.start, e.end);\n    } else {\n      // Set the duty hours for the event's date\n      dutyHoursByDate[date] = calcDutyHours(\n        dutyHoursByDate[date],\n        e.start,\n        e.end\n      );\n    }\n  });\n  console.log(dutyHoursByDate);\n\n  monthEvents.forEach(e => {\n    if (moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\")) {\n      if (e.resourceId === teacher.resourceId) {\n        const date = e.start.getDate();\n        const day = e.start.getDay();\n        // Calculate number of minutes to add to first threshold to calc second threshold. (10 hours * 60 mins)\n        const secondThreshold = 10 * 60;\n        let teachingMins = 0;\n        let outsideDutyMins = 0;\n        let holidayMins = 0;\n\n        // If event falls on a national holiday, add the class duration to holiday minutes,\n        // otherwise, add to total teaching minutes\n        if (\n          JapaneseHolidays.isHoliday(e.start) ||\n          e.start.getDay() === (0 || 1)\n        ) {\n          holidayMins = parseInt(e.duration);\n          teacher.holidayMins += holidayMins;\n        } else {\n          const totalTeachingMins = calcOutsideDutyMins(\n            e.start,\n            e.end,\n            e.duration,\n            dutyHoursByDate[date].startTime,\n            dutyHoursByDate[date].endTime\n          );\n\n          // Add total teaching minutes and outside duty minutes to teacher object\n          teachingMins = totalTeachingMins.teachingMins;\n          teacher.teachingMins += teachingMins;\n          outsideDutyMins = totalTeachingMins.outsideDutyMins;\n          teacher.outsideDutyMins += outsideDutyMins;\n        }\n        // Calculate hours worked over monthly thresholds one and two\n        if (teacher.teachingMins >= teacher.otThreshold + secondThreshold) {\n          teacher.overThresholdTwoMins +=\n            teacher.teachingMins - (teacher.otThreshold + secondThreshold);\n          teacher.overThresholdOneMins += secondThreshold;\n        } else if (teacher.teachingMins >= teacher.otThreshold) {\n          teacher.overThresholdOneMins +=\n            teacher.teachingMins - teacher.otThreshold;\n        }\n        // Teaching minutes object to be added to hash table\n        const dateData = {\n          resourceId: teacher,\n          date: date,\n          day: day,\n          teachingMins: teachingMins,\n          outsideDutyMins: outsideDutyMins,\n          overThresholdOneMins: teacher.overThresholdOneMins,\n          overThresholdTwoMins: teacher.overThresholdTwoMins,\n          holidayMins: holidayMins,\n          travelAllowance: 0,\n          travelExpenses: 0\n        };\n        // If date already in hash table, add teaching minutes to existing keys, otherwise create\n        // a new date object\n        if (datesData[date]) {\n          datesData[date].teachingMins += dateData.teachingMins;\n          datesData[date].outsideDutyMins += dateData.outsideDutyMins;\n          datesData[date].overThresholdOneMins += dateData.overThresholdOneMins;\n          datesData[date].overThresholdTwoMins += dateData.overThresholdTwoMins;\n          datesData[date].holidayMins += dateData.holidayMins;\n          datesData[date].travelAllowance += dateData.travelAllowance;\n          datesData[date].travelExpenses += dateData.travelExpenses;\n        } else {\n          datesData[date] = dateData;\n        }\n      }\n    }\n  });\n  return datesData;\n};\n\nconst addTeachingMins = (events, teachers, setTeachers) => {\n  const now = new Date();\n  // Create start and end dates for the current month to calc\n  // teaching minutes\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  if (teachers.length > 0) {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      teacher.teachingMins = 0;\n      teacher.outsideDutyMins = 0;\n      teacher.holidayMins = 0;\n      teacher.overThresholdOneMins = 0;\n      teacher.overThresholdTwoMins = 0;\n    });\n    teachers.forEach(teacher => {\n      createPayPeriodData(events, teacher, monthStart, monthEnd);\n      updateTeacher(teacher, teachers, setTeachers);\n    });\n  }\n};\n\nconst getTeachers = async (events, teachers, setTeachers) => {\n  return await axios\n    .get(\"/teachers/\")\n    .then(res => {\n      if (res.data.length > 0) {\n        setTeachers(res.data);\n      }\n    })\n    .then(addTeachingMins(events, teachers, setTeachers))\n    .catch(err => console.log(err));\n};\n\nconst getLessons = async (events, setEvents) => {\n  return await axios\n    .get(\"/lessons/\")\n    .then(res => {\n      if (res.data.length > 0) {\n        res.data.map(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n        });\n        setEvents([...res.data, events[0]]);\n      }\n    })\n    .catch(err => console.log(err));\n};\n\nconst addLesson = async (events, event, setEvents) => {\n  const newEvents = [];\n  if (event.recur === true) {\n    const recurrences = getRecurrences(event);\n    recurrences.map(r => {\n      const newEvent = {\n        ...event,\n        start: r,\n        end: moment(r)\n          .add(event.duration, \"m\")\n          .toDate(),\n        isNewEvent: false\n      };\n      if (JapaneseHolidays.isHoliday(r)) {\n        newEvent.isHoliday = true;\n      }\n      newEvents.push(newEvent);\n    });\n  }\n  if (JapaneseHolidays.isHoliday(event.start)) {\n    event = { ...event, isHoliday: true };\n  }\n  event = { ...event, isNewEvent: true };\n  newEvents.push(event);\n  await axios\n    .post(\"/lessons/add\", newEvents)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  return getLessons(events, setEvents);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios\n    .post(\"/teachers/add\", newTeacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  return setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async (teacher, teachers, setTeachers) => {\n  const idx = teachers.findIndex(t => t._id === teacher._id);\n  const updatedTeachers = [...teachers];\n\n  const updatedTeacher = {\n    ...teacher,\n    resourceTitle: teacher.resourceTitle,\n    name: teacher.name,\n    familyName: teacher.familyName,\n    teachingMins: teacher.teachingMins,\n    holidayMins: teacher.holidayMins,\n    outsideDutyMins: teacher.outsideDutyMins,\n    otThreshold: teacher.otThreshold,\n    overThresholdOneMins: teacher.overThresholdOneMins,\n    overThresholdTwoMins: teacher.overThresholdTwoMins\n  };\n  updatedTeachers.splice(idx, 1, updatedTeacher);\n\n  setTeachers(updatedTeachers);\n  return await axios\n    .put(`/teachers/update/${teacher._id}`, updatedTeacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst deleteTeacher = async teacher => {\n  return await axios\n    .delete(`/teachers/delete/${teacher._id}`)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst deleteEvent = async (events, event, setEvents) => {\n  const newEvents = events.filter(evt => evt._id !== event._id);\n  setEvents(newEvents);\n  return await axios\n    .delete(`/lessons/delete/${event._id}`)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst changeEvent = async (events, event, editedEvent, setEvents) => {\n  const idx = events.findIndex(e => e._id === event._id);\n  const nextEvents = [...events];\n\n  nextEvents.splice(idx, 1, editedEvent);\n  setEvents(nextEvents);\n\n  return await axios\n    .put(`/lessons/update/${event._id}`, editedEvent)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst addPayment = async newPayment => {\n  return await axios\n    .post(`/payments/add`, newPayment)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nexport {\n  getRecurrences,\n  addTeachingMins,\n  getTeachers,\n  getLessons,\n  addLesson,\n  addTeacher,\n  updateTeacher,\n  deleteTeacher,\n  deleteEvent,\n  changeEvent,\n  addPayment,\n  createPayPeriodData\n};\n"]},"metadata":{},"sourceType":"module"}