{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n\n/*\n\n    日本の休日を JavaScript で計算するためのライブラリ\n                         Osamu Takeuchi <osamu@big.jp>\n */\n(function () {\n  \"use strict\";\n\n  var definition, furikaeHoliday, getHolidaysOf, getJDate, getJDay, getJFullYear, getJHours, getJMinutes, getJMonth, happyMonday, holidays, isHoliday, isHolidayAt, j2u, jDate, kokuminHoliday, ref, shiftDate, shubun, shubunWithTime, shunbun, shunbunWithTime, simpleHoliday, target, u2j, uDate;\n\n  shiftDate = function (date, year, mon, day, hour, min, sec, msec) {\n    var res;\n    res = new Date(2000, 0, 1);\n    res.setTime(date.getTime() + ((((day != null ? day : 0) * 24 + (hour != null ? hour : 0)) * 60 + (min != null ? min : 0)) * 60 + (sec != null ? sec : 0)) * 1000 + (msec != null ? msec : 0));\n    res.setFullYear(res.getFullYear() + (year != null ? year : 0) + Math.floor((res.getMonth() + (mon != null ? mon : 0)) / 12));\n    res.setMonth(((res.getMonth() + (mon != null ? mon : 0)) % 12 + 12) % 12);\n    return res;\n  };\n\n  u2j = function (d) {\n    return shiftDate(d, 0, 0, 0, +9);\n  };\n\n  j2u = function (d) {\n    return shiftDate(d, 0, 0, 0, -9);\n  };\n\n  uDate = function (y, m, d) {\n    return new Date(Date.UTC(y, m, d));\n  };\n\n  jDate = function (y, m, d) {\n    return j2u(uDate(y, m, d));\n  };\n\n  getJDay = function (d) {\n    return u2j(d).getUTCDay();\n  };\n\n  getJDate = function (d) {\n    return u2j(d).getUTCDate();\n  };\n\n  getJMonth = function (d) {\n    return u2j(d).getUTCMonth();\n  };\n\n  getJFullYear = function (d) {\n    return u2j(d).getUTCFullYear();\n  };\n\n  getJHours = function (d) {\n    return u2j(d).getUTCHours();\n  };\n\n  getJMinutes = function (d) {\n    return u2j(d).getUTCMinutes();\n  };\n  /*\n      ヘルパ関数\n   */\n\n\n  simpleHoliday = function (month, day) {\n    return function (year) {\n      return jDate(year, month - 1, day);\n    };\n  };\n\n  happyMonday = function (month, nth) {\n    return function (year) {\n      var first, monday;\n      monday = 1;\n      first = jDate(year, month - 1, 1);\n      return shiftDate(first, 0, 0, (7 - (getJDay(first) - monday)) % 7 + (nth - 1) * 7);\n    };\n  };\n\n  shunbunWithTime = function (year) {\n    return new Date(-655866700000 + 31556940400 * (year - 1949));\n  };\n\n  shunbun = function (year) {\n    var date;\n    date = shunbunWithTime(year);\n    return jDate(year, getJMonth(date), getJDate(date));\n  };\n\n  shubunWithTime = function (year) {\n    var day;\n\n    if (day = {\n      1603: 23,\n      2074: 23,\n      2355: 23,\n      2384: 22\n    }[year]) {\n      return jDate(year, 9 - 1, day);\n    } else {\n      return new Date(-671316910000 + 31556910000 * (year - 1948));\n    }\n  };\n\n  shubun = function (year) {\n    var date;\n    date = shubunWithTime(year);\n    return jDate(year, getJMonth(date), getJDate(date));\n  };\n  /*\n      休日定義\n      https://ja.wikipedia.org/wiki/%E5%9B%BD%E6%B0%91%E3%81%AE%E7%A5%9D%E6%97%A5\n   */\n\n\n  definition = [[\"元日\", simpleHoliday(1, 1), 1949], [\"成人の日\", simpleHoliday(1, 15), 1949, 1999], [\"成人の日\", happyMonday(1, 2), 2000], [\"建国記念の日\", simpleHoliday(2, 11), 1967], [\"天皇誕生日\", simpleHoliday(2, 23), 2020], [\"昭和天皇の大喪の礼\", simpleHoliday(2, 24), 1989, 1989], [\"春分の日\", shunbun, 1949], [\"皇太子明仁親王の結婚の儀\", simpleHoliday(4, 10), 1959, 1959], [\"天皇誕生日\", simpleHoliday(4, 29), 1949, 1988], [\"みどりの日\", simpleHoliday(4, 29), 1989, 2006], [\"昭和の日\", simpleHoliday(4, 29), 2007], [\"即位の日\", simpleHoliday(5, 1), 2019, 2019], [\"憲法記念日\", simpleHoliday(5, 3), 1949], [\"みどりの日\", simpleHoliday(5, 4), 2007], [\"こどもの日\", simpleHoliday(5, 5), 1949], [\"皇太子徳仁親王の結婚の儀\", simpleHoliday(6, 9), 1993, 1993], [\"海の日\", simpleHoliday(7, 20), 1996, 2002], [\"海の日\", happyMonday(7, 3), 2003, 2019], [\"海の日\", simpleHoliday(7, 23), 2020, 2020], [\"海の日\", happyMonday(7, 3), 2021], [\"山の日\", simpleHoliday(8, 11), 2016, 2019], [\"山の日\", simpleHoliday(8, 10), 2020, 2020], [\"山の日\", simpleHoliday(8, 11), 2021], [\"敬老の日\", simpleHoliday(9, 15), 1966, 2002], [\"敬老の日\", happyMonday(9, 3), 2003], [\"秋分の日\", shubun, 1948], [\"体育の日\", simpleHoliday(10, 10), 1966, 1999], [\"体育の日\", happyMonday(10, 2), 2000, 2019], [\"スポーツの日\", simpleHoliday(7, 24), 2020, 2020], [\"スポーツの日\", happyMonday(10, 2), 2021], [\"即位礼正殿の儀\", simpleHoliday(10, 22), 2019, 2019], [\"文化の日\", simpleHoliday(11, 3), 1948], [\"即位礼正殿の儀\", simpleHoliday(11, 12), 1990, 1990], [\"勤労感謝の日\", simpleHoliday(11, 23), 1948], [\"天皇誕生日\", simpleHoliday(12, 23), 1989, 2018]];\n\n  furikaeHoliday = function (holiday) {\n    var furikae, sunday;\n    sunday = 0;\n\n    if (holiday < jDate(1973, 4 - 1, 30 - 1) || getJDay(holiday) !== sunday) {\n      return null;\n    }\n\n    furikae = shiftDate(holiday, 0, 0, 1);\n\n    if (!isHolidayAt(furikae, false)) {\n      return furikae;\n    }\n\n    if (holiday < jDate(2007, 1 - 1, 1)) {\n      return null;\n    }\n\n    while (true) {\n      furikae = shiftDate(furikae, 0, 0, 1);\n\n      if (!isHolidayAt(furikae, false)) {\n        return furikae;\n      }\n    }\n  };\n\n  kokuminHoliday = function (holiday) {\n    var kokumin, monday, sunday;\n\n    if (getJFullYear(holiday) < 1988) {\n      return null;\n    }\n\n    if (!isHolidayAt(shiftDate(holiday, 0, 0, 2), false)) {\n      return null;\n    }\n\n    sunday = 0;\n    monday = 1;\n    kokumin = shiftDate(holiday, 0, 0, 1);\n\n    if (isHolidayAt(kokumin, false) || getJDay(kokumin) === sunday || getJDay(kokumin) === monday) {\n      return null;\n    }\n\n    return kokumin;\n  };\n\n  holidays = {\n    \"true\": {},\n    \"false\": {}\n  };\n\n  getHolidaysOf = function (y, furikae) {\n    var cache, d, entry, holiday, i, j, kokuminHolidays, len, len1, m, month_day, name, w_furikae, wo_furikae;\n    furikae = furikae == null || furikae ? true : false;\n    cache = holidays[furikae][y];\n\n    if (cache != null) {\n      return cache;\n    }\n\n    wo_furikae = {};\n\n    for (i = 0, len = definition.length; i < len; i++) {\n      entry = definition[i];\n\n      if (entry[2] != null && y < entry[2]) {\n        continue;\n      }\n\n      if (entry[3] != null && entry[3] < y) {\n        continue;\n      }\n\n      holiday = entry[1](y);\n\n      if (holiday == null) {\n        continue;\n      }\n\n      m = getJMonth(holiday) + 1;\n      d = getJDate(holiday);\n      wo_furikae[[m, d]] = entry[0];\n    }\n\n    holidays[false][y] = wo_furikae;\n    kokuminHolidays = [];\n\n    for (month_day in wo_furikae) {\n      month_day = month_day.split(\",\");\n      holiday = kokuminHoliday(jDate(y, month_day[0] - 1, month_day[1]));\n\n      if (holiday != null) {\n        m = getJMonth(holiday) + 1;\n        d = getJDate(holiday);\n        kokuminHolidays.push([m, d]);\n      }\n    }\n\n    for (j = 0, len1 = kokuminHolidays.length; j < len1; j++) {\n      holiday = kokuminHolidays[j];\n      wo_furikae[holiday] = \"国民の休日\";\n    }\n\n    w_furikae = {};\n\n    for (month_day in wo_furikae) {\n      name = wo_furikae[month_day];\n      w_furikae[month_day] = name;\n      month_day = month_day.split(\",\");\n      holiday = furikaeHoliday(jDate(y, month_day[0] - 1, month_day[1]));\n\n      if (holiday != null) {\n        m = getJMonth(holiday) + 1;\n        d = getJDate(holiday);\n        w_furikae[[m, d]] = \"振替休日\";\n      }\n    }\n\n    holidays[true][y] = w_furikae;\n    return holidays[furikae][y];\n  };\n  /*\n      クラス定義\n   */\n\n\n  target = (ref = typeof module !== \"undefined\" && module !== null ? module.exports : void 0) != null ? ref : this.JapaneseHolidays = {};\n\n  target.getHolidaysOf = function (y, furikae) {\n    var month_day, name, ref1, result;\n    result = [];\n    ref1 = getHolidaysOf(y, furikae);\n\n    for (month_day in ref1) {\n      name = ref1[month_day];\n      result.push({\n        month: parseInt(month_day.split(\",\")[0]),\n        date: parseInt(month_day.split(\",\")[1]),\n        name: name\n      });\n    }\n\n    result.sort(function (a, b) {\n      return a.month - b.month || a.date - b.date;\n    });\n    return result;\n  };\n\n  isHoliday = function (date, furikae) {\n    return getHolidaysOf(date.getFullYear(), furikae)[[date.getMonth() + 1, date.getDate()]];\n  };\n\n  isHolidayAt = function (date, furikae) {\n    return getHolidaysOf(getJFullYear(date), furikae)[[getJMonth(date) + 1, getJDate(date)]];\n  };\n\n  target.isHoliday = isHoliday;\n  target.isHolidayAt = isHolidayAt;\n  target.shiftDate = shiftDate;\n  target.u2j = u2j;\n  target.j2u = j2u;\n  target.jDate = jDate;\n  target.uDate = uDate;\n  target.getJDay = getJDay;\n  target.getJDate = getJDate;\n  target.getJMonth = getJMonth;\n  target.getJFullYear = getJFullYear;\n  target.getJHours = getJHours;\n  target.getJMinutes = getJMinutes;\n  target.__forTest = {\n    shunbunWithTime: shunbunWithTime,\n    shubunWithTime: shubunWithTime\n  };\n}).call(this);","map":{"version":3,"sources":["src/japanese-holidays.coffee"],"names":[],"mappings":"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","sourceRoot":"..","sourcesContent":["// Generated by CoffeeScript 1.12.7\n\n/*\n\n    日本の休日を JavaScript で計算するためのライブラリ\n                         Osamu Takeuchi <osamu@big.jp>\n */\n\n(function() {\n  \"use strict\";\n  var definition, furikaeHoliday, getHolidaysOf, getJDate, getJDay, getJFullYear, getJHours, getJMinutes, getJMonth, happyMonday, holidays, isHoliday, isHolidayAt, j2u, jDate, kokuminHoliday, ref, shiftDate, shubun, shubunWithTime, shunbun, shunbunWithTime, simpleHoliday, target, u2j, uDate;\n\n  shiftDate = function(date, year, mon, day, hour, min, sec, msec) {\n    var res;\n    res = new Date(2000, 0, 1);\n    res.setTime(date.getTime() + ((((day != null ? day : 0) * 24 + (hour != null ? hour : 0)) * 60 + (min != null ? min : 0)) * 60 + (sec != null ? sec : 0)) * 1000 + (msec != null ? msec : 0));\n    res.setFullYear(res.getFullYear() + (year != null ? year : 0) + Math.floor((res.getMonth() + (mon != null ? mon : 0)) / 12));\n    res.setMonth(((res.getMonth() + (mon != null ? mon : 0)) % 12 + 12) % 12);\n    return res;\n  };\n\n  u2j = function(d) {\n    return shiftDate(d, 0, 0, 0, +9);\n  };\n\n  j2u = function(d) {\n    return shiftDate(d, 0, 0, 0, -9);\n  };\n\n  uDate = function(y, m, d) {\n    return new Date(Date.UTC(y, m, d));\n  };\n\n  jDate = function(y, m, d) {\n    return j2u(uDate(y, m, d));\n  };\n\n  getJDay = function(d) {\n    return (u2j(d)).getUTCDay();\n  };\n\n  getJDate = function(d) {\n    return (u2j(d)).getUTCDate();\n  };\n\n  getJMonth = function(d) {\n    return (u2j(d)).getUTCMonth();\n  };\n\n  getJFullYear = function(d) {\n    return (u2j(d)).getUTCFullYear();\n  };\n\n  getJHours = function(d) {\n    return (u2j(d)).getUTCHours();\n  };\n\n  getJMinutes = function(d) {\n    return (u2j(d)).getUTCMinutes();\n  };\n\n\n  /*\n      ヘルパ関数\n   */\n\n  simpleHoliday = function(month, day) {\n    return function(year) {\n      return jDate(year, month - 1, day);\n    };\n  };\n\n  happyMonday = function(month, nth) {\n    return function(year) {\n      var first, monday;\n      monday = 1;\n      first = jDate(year, month - 1, 1);\n      return shiftDate(first, 0, 0, (7 - (getJDay(first) - monday)) % 7 + (nth - 1) * 7);\n    };\n  };\n\n  shunbunWithTime = function(year) {\n    return new Date(-655866700000 + 31556940400 * (year - 1949));\n  };\n\n  shunbun = function(year) {\n    var date;\n    date = shunbunWithTime(year);\n    return jDate(year, getJMonth(date), getJDate(date));\n  };\n\n  shubunWithTime = function(year) {\n    var day;\n    if (day = {\n      1603: 23,\n      2074: 23,\n      2355: 23,\n      2384: 22\n    }[year]) {\n      return jDate(year, 9 - 1, day);\n    } else {\n      return new Date(-671316910000 + 31556910000 * (year - 1948));\n    }\n  };\n\n  shubun = function(year) {\n    var date;\n    date = shubunWithTime(year);\n    return jDate(year, getJMonth(date), getJDate(date));\n  };\n\n\n  /*\n      休日定義\n      https://ja.wikipedia.org/wiki/%E5%9B%BD%E6%B0%91%E3%81%AE%E7%A5%9D%E6%97%A5\n   */\n\n  definition = [[\"元日\", simpleHoliday(1, 1), 1949], [\"成人の日\", simpleHoliday(1, 15), 1949, 1999], [\"成人の日\", happyMonday(1, 2), 2000], [\"建国記念の日\", simpleHoliday(2, 11), 1967], [\"天皇誕生日\", simpleHoliday(2, 23), 2020], [\"昭和天皇の大喪の礼\", simpleHoliday(2, 24), 1989, 1989], [\"春分の日\", shunbun, 1949], [\"皇太子明仁親王の結婚の儀\", simpleHoliday(4, 10), 1959, 1959], [\"天皇誕生日\", simpleHoliday(4, 29), 1949, 1988], [\"みどりの日\", simpleHoliday(4, 29), 1989, 2006], [\"昭和の日\", simpleHoliday(4, 29), 2007], [\"即位の日\", simpleHoliday(5, 1), 2019, 2019], [\"憲法記念日\", simpleHoliday(5, 3), 1949], [\"みどりの日\", simpleHoliday(5, 4), 2007], [\"こどもの日\", simpleHoliday(5, 5), 1949], [\"皇太子徳仁親王の結婚の儀\", simpleHoliday(6, 9), 1993, 1993], [\"海の日\", simpleHoliday(7, 20), 1996, 2002], [\"海の日\", happyMonday(7, 3), 2003, 2019], [\"海の日\", simpleHoliday(7, 23), 2020, 2020], [\"海の日\", happyMonday(7, 3), 2021], [\"山の日\", simpleHoliday(8, 11), 2016, 2019], [\"山の日\", simpleHoliday(8, 10), 2020, 2020], [\"山の日\", simpleHoliday(8, 11), 2021], [\"敬老の日\", simpleHoliday(9, 15), 1966, 2002], [\"敬老の日\", happyMonday(9, 3), 2003], [\"秋分の日\", shubun, 1948], [\"体育の日\", simpleHoliday(10, 10), 1966, 1999], [\"体育の日\", happyMonday(10, 2), 2000, 2019], [\"スポーツの日\", simpleHoliday(7, 24), 2020, 2020], [\"スポーツの日\", happyMonday(10, 2), 2021], [\"即位礼正殿の儀\", simpleHoliday(10, 22), 2019, 2019], [\"文化の日\", simpleHoliday(11, 3), 1948], [\"即位礼正殿の儀\", simpleHoliday(11, 12), 1990, 1990], [\"勤労感謝の日\", simpleHoliday(11, 23), 1948], [\"天皇誕生日\", simpleHoliday(12, 23), 1989, 2018]];\n\n  furikaeHoliday = function(holiday) {\n    var furikae, sunday;\n    sunday = 0;\n    if (holiday < jDate(1973, 4 - 1, 30 - 1) || getJDay(holiday) !== sunday) {\n      return null;\n    }\n    furikae = shiftDate(holiday, 0, 0, 1);\n    if (!isHolidayAt(furikae, false)) {\n      return furikae;\n    }\n    if (holiday < jDate(2007, 1 - 1, 1)) {\n      return null;\n    }\n    while (true) {\n      furikae = shiftDate(furikae, 0, 0, 1);\n      if (!isHolidayAt(furikae, false)) {\n        return furikae;\n      }\n    }\n  };\n\n  kokuminHoliday = function(holiday) {\n    var kokumin, monday, sunday;\n    if (getJFullYear(holiday) < 1988) {\n      return null;\n    }\n    if (!isHolidayAt(shiftDate(holiday, 0, 0, 2), false)) {\n      return null;\n    }\n    sunday = 0;\n    monday = 1;\n    kokumin = shiftDate(holiday, 0, 0, 1);\n    if (isHolidayAt(kokumin, false) || getJDay(kokumin) === sunday || getJDay(kokumin) === monday) {\n      return null;\n    }\n    return kokumin;\n  };\n\n  holidays = {\n    \"true\": {},\n    \"false\": {}\n  };\n\n  getHolidaysOf = function(y, furikae) {\n    var cache, d, entry, holiday, i, j, kokuminHolidays, len, len1, m, month_day, name, w_furikae, wo_furikae;\n    furikae = (furikae == null) || furikae ? true : false;\n    cache = holidays[furikae][y];\n    if (cache != null) {\n      return cache;\n    }\n    wo_furikae = {};\n    for (i = 0, len = definition.length; i < len; i++) {\n      entry = definition[i];\n      if ((entry[2] != null) && y < entry[2]) {\n        continue;\n      }\n      if ((entry[3] != null) && entry[3] < y) {\n        continue;\n      }\n      holiday = entry[1](y);\n      if (holiday == null) {\n        continue;\n      }\n      m = getJMonth(holiday) + 1;\n      d = getJDate(holiday);\n      wo_furikae[[m, d]] = entry[0];\n    }\n    holidays[false][y] = wo_furikae;\n    kokuminHolidays = [];\n    for (month_day in wo_furikae) {\n      month_day = month_day.split(\",\");\n      holiday = kokuminHoliday(jDate(y, month_day[0] - 1, month_day[1]));\n      if (holiday != null) {\n        m = getJMonth(holiday) + 1;\n        d = getJDate(holiday);\n        kokuminHolidays.push([m, d]);\n      }\n    }\n    for (j = 0, len1 = kokuminHolidays.length; j < len1; j++) {\n      holiday = kokuminHolidays[j];\n      wo_furikae[holiday] = \"国民の休日\";\n    }\n    w_furikae = {};\n    for (month_day in wo_furikae) {\n      name = wo_furikae[month_day];\n      w_furikae[month_day] = name;\n      month_day = month_day.split(\",\");\n      holiday = furikaeHoliday(jDate(y, month_day[0] - 1, month_day[1]));\n      if (holiday != null) {\n        m = getJMonth(holiday) + 1;\n        d = getJDate(holiday);\n        w_furikae[[m, d]] = \"振替休日\";\n      }\n    }\n    holidays[true][y] = w_furikae;\n    return holidays[furikae][y];\n  };\n\n\n  /*\n      クラス定義\n   */\n\n  target = (ref = typeof module !== \"undefined\" && module !== null ? module.exports : void 0) != null ? ref : this.JapaneseHolidays = {};\n\n  target.getHolidaysOf = function(y, furikae) {\n    var month_day, name, ref1, result;\n    result = [];\n    ref1 = getHolidaysOf(y, furikae);\n    for (month_day in ref1) {\n      name = ref1[month_day];\n      result.push({\n        month: parseInt(month_day.split(\",\")[0]),\n        date: parseInt(month_day.split(\",\")[1]),\n        name: name\n      });\n    }\n    result.sort(function(a, b) {\n      return (a.month - b.month) || (a.date - b.date);\n    });\n    return result;\n  };\n\n  isHoliday = function(date, furikae) {\n    return getHolidaysOf(date.getFullYear(), furikae)[[date.getMonth() + 1, date.getDate()]];\n  };\n\n  isHolidayAt = function(date, furikae) {\n    return getHolidaysOf(getJFullYear(date), furikae)[[getJMonth(date) + 1, getJDate(date)]];\n  };\n\n  target.isHoliday = isHoliday;\n\n  target.isHolidayAt = isHolidayAt;\n\n  target.shiftDate = shiftDate;\n\n  target.u2j = u2j;\n\n  target.j2u = j2u;\n\n  target.jDate = jDate;\n\n  target.uDate = uDate;\n\n  target.getJDay = getJDay;\n\n  target.getJDate = getJDate;\n\n  target.getJMonth = getJMonth;\n\n  target.getJFullYear = getJFullYear;\n\n  target.getJHours = getJHours;\n\n  target.getJMinutes = getJMinutes;\n\n  target.__forTest = {\n    shunbunWithTime: shunbunWithTime,\n    shubunWithTime: shubunWithTime\n  };\n\n}).call(this);\n\n//# sourceMappingURL=japanese-holidays.js.map\n"]},"metadata":{},"sourceType":"script"}