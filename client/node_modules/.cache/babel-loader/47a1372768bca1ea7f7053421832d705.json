{"ast":null,"code":"import _objectSpread from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/miles/webdev/jes-sched/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/miles/webdev/jes-sched/client/src/components/Schedule.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport EventForm from \"./EventForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport useFormState from \"../hooks/useInputState\";\nimport useToggle from \"../hooks/useToggle\";\nimport TeachersContext from \"../context/TeachersContext\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { addTeachingMins, getTeachers, getLessons, addLesson, addTeacher } from \"../helperFunctions\";\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const _useContext = useContext(TeachersContext),\n        teachers = _useContext.teachers,\n        setTeachers = _useContext.setTeachers;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        formType = _useState2[0],\n        setFormType = _useState2[1];\n\n  const _useState3 = useState([{\n    id: 1,\n    title: \"Dummy Event to fix drag and drop bug\",\n    start: new Date(),\n    end: new Date(),\n    room: 2,\n    duration: 0,\n    resourceId: 1,\n    hide: true\n  }]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        events = _useState4[0],\n        setEvents = _useState4[1];\n\n  const _useFormState = useFormState(new Date()),\n        _useFormState2 = _slicedToArray(_useFormState, 3),\n        startTime = _useFormState2[0],\n        updateStartTime = _useFormState2[1],\n        resetStartTime = _useFormState2[2];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedEvent = _useState6[0],\n        setSelectedEvent = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isOpen = _useState8[0],\n        setIsOpen = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        message = _useState10[0],\n        setMessage = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        selectedTeacher = _useState12[0],\n        setSelectedTeacher = _useState12[1];\n\n  const _useToggle = useToggle(false),\n        _useToggle2 = _slicedToArray(_useToggle, 2),\n        isRecurring = _useToggle2[0],\n        toggleIsRecurring = _useToggle2[1];\n\n  useEffect(() => {\n    getLessons(events, setEvents);\n    getTeachers(events, teachers, setTeachers);\n    addTeachingMins(events, teachers, setTeachers);\n  }, []);\n  useEffect(() => {\n    addTeachingMins(events, teachers, setTeachers);\n  }, [events, setTeachers]);\n\n  const moveEvent = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const updatedEvent = _objectSpread({}, event, {\n      resourceId,\n      start,\n      end\n    });\n\n    handleDoubleClick(updatedEvent);\n  }; // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n\n\n  const handleMove = ({\n    event,\n    resourceId,\n    start,\n    end\n  }) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (!validateRoom(otherEvents, event.room, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return 1;\n    }\n\n    if (!validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Teacher Conflict. Please choose another teacher or time\");\n      return 1;\n    }\n\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end\n    });\n    return 0;\n  };\n\n  const handleAddEvent = newEvent => {\n    const idx = events.indexOf(newEvent);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n\n    if (!validateRoom(otherEvents, newEvent.room, newEvent.start, parseInt(newEvent.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return 1;\n    }\n\n    if (!validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Teacher Conflict. Please choose another teacher or time\");\n      return 1;\n    }\n\n    addLesson(events, newEvent, setEvents);\n    setFormType(\"\");\n  };\n\n  const handleSelect = ({\n    start,\n    resourceId\n  }) => {\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n  };\n\n  const handleDoubleClick = event => {\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n  };\n\n  const handleAddTeacher = newTeacher => {\n    addTeacher(teachers, newTeacher, setTeachers);\n    setFormType(\"\");\n  };\n\n  const handleBtnClick = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleToggleSnackbar = msg => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollBtnClick = () => {\n    setFormType(\"payroll\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, formType === \"event\" && React.createElement(EventForm, {\n    formType: formType,\n    setFormType: setFormType,\n    addEvent: handleAddEvent,\n    events: events,\n    teachers: teachers,\n    startTime: startTime,\n    updateStartTime: updateStartTime,\n    resetStartTime: resetStartTime,\n    event: selectedEvent,\n    setSelectedEvent: setSelectedEvent,\n    setEvents: setEvents,\n    selectedTeacher: selectedTeacher,\n    isRecurring: isRecurring,\n    toggleIsRecurring: toggleIsRecurring,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), formType === \"teacher\" && React.createElement(TeacherForm, {\n    formType: formType,\n    setFormType: setFormType,\n    addTeacher: handleAddTeacher,\n    setTeachers: setTeachers,\n    teachers: teachers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), formType === \"payroll\" && React.createElement(Payroll, {\n    events: events,\n    setFormType: setFormType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(CustomizedSnackbars, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    variant: \"error\",\n    msg: message,\n    events: events,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(CustomDnDCalendar, {\n    handleMove: handleMove,\n    handleSelect: handleSelect,\n    handleDoubleClick: handleDoubleClick,\n    events: events,\n    setEvents: setEvents,\n    teachers: teachers,\n    handleBtnClick: handleBtnClick,\n    handlePayrollBtnClick: handlePayrollBtnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }));\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/home/miles/webdev/jes-sched/client/src/components/Schedule.js"],"names":["React","useState","useEffect","useContext","CustomDnDCalendar","EventForm","TeacherForm","CustomizedSnackbars","Payroll","useFormState","useToggle","TeachersContext","validateRoom","validateTeacher","addTeachingMins","getTeachers","getLessons","addLesson","addTeacher","Schedule","teachers","setTeachers","formType","setFormType","id","title","start","Date","end","room","duration","resourceId","hide","events","setEvents","startTime","updateStartTime","resetStartTime","selectedEvent","setSelectedEvent","isOpen","setIsOpen","message","setMessage","selectedTeacher","setSelectedTeacher","isRecurring","toggleIsRecurring","moveEvent","event","updatedEvent","handleDoubleClick","handleMove","idx","indexOf","otherEvents","slice","parseInt","handleToggleSnackbar","handleAddEvent","newEvent","handleSelect","handleAddTeacher","newTeacher","handleBtnClick","msg","handlePayrollBtnClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport EventForm from \"./EventForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport useFormState from \"../hooks/useInputState\";\nimport useToggle from \"../hooks/useToggle\";\nimport TeachersContext from \"../context/TeachersContext\";\n\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport {\n  addTeachingMins,\n  getTeachers,\n  getLessons,\n  addLesson,\n  addTeacher\n} from \"../helperFunctions\";\n\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const { teachers, setTeachers } = useContext(TeachersContext);\n  const [formType, setFormType] = useState(\"\");\n  const [events, setEvents] = useState([\n    {\n      id: 1,\n      title: \"Dummy Event to fix drag and drop bug\",\n      start: new Date(),\n      end: new Date(),\n      room: 2,\n      duration: 0,\n      resourceId: 1,\n      hide: true\n    }\n  ]);\n  const [startTime, updateStartTime, resetStartTime] = useFormState(new Date());\n  const [selectedEvent, setSelectedEvent] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [selectedTeacher, setSelectedTeacher] = useState(\"\");\n  const [isRecurring, toggleIsRecurring] = useToggle(false);\n\n  useEffect(() => {\n    getLessons(events, setEvents);\n    getTeachers(events, teachers, setTeachers);\n    addTeachingMins(events, teachers, setTeachers);\n  }, []);\n\n  useEffect(() => {\n    addTeachingMins(events, teachers, setTeachers);\n  }, [events, setTeachers]);\n\n  const moveEvent = ({ event, resourceId, start, end }) => {\n    const updatedEvent = { ...event, resourceId, start, end };\n    handleDoubleClick(updatedEvent);\n  };\n\n  // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n  const handleMove = ({ event, resourceId, start, end }) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n    if (\n      !validateRoom(otherEvents, event.room, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return 1;\n    }\n    if (\n      !validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\n        \"Teacher Conflict. Please choose another teacher or time\"\n      );\n      return 1;\n    }\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end\n    });\n    return 0;\n  };\n\n  const handleAddEvent = newEvent => {\n    const idx = events.indexOf(newEvent);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n    if (\n      !validateRoom(\n        otherEvents,\n        newEvent.room,\n        newEvent.start,\n        parseInt(newEvent.duration)\n      )\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return 1;\n    }\n    if (\n      !validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\n        \"Teacher Conflict. Please choose another teacher or time\"\n      );\n      return 1;\n    }\n    addLesson(events, newEvent, setEvents);\n    setFormType(\"\");\n  };\n\n  const handleSelect = ({ start, resourceId }) => {\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n  };\n\n  const handleDoubleClick = event => {\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n  };\n\n  const handleAddTeacher = newTeacher => {\n    addTeacher(teachers, newTeacher, setTeachers);\n    setFormType(\"\");\n  };\n\n  const handleBtnClick = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleToggleSnackbar = msg => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollBtnClick = () => {\n    setFormType(\"payroll\");\n  };\n\n  return (\n    <div>\n      {formType === \"event\" && (\n        <EventForm\n          formType={formType}\n          setFormType={setFormType}\n          addEvent={handleAddEvent}\n          events={events}\n          teachers={teachers}\n          startTime={startTime}\n          updateStartTime={updateStartTime}\n          resetStartTime={resetStartTime}\n          event={selectedEvent}\n          setSelectedEvent={setSelectedEvent}\n          setEvents={setEvents}\n          selectedTeacher={selectedTeacher}\n          isRecurring={isRecurring}\n          toggleIsRecurring={toggleIsRecurring}\n        />\n      )}\n      {formType === \"teacher\" && (\n        <TeacherForm\n          formType={formType}\n          setFormType={setFormType}\n          addTeacher={handleAddTeacher}\n          setTeachers={setTeachers}\n          teachers={teachers}\n        />\n      )}\n      {formType === \"payroll\" && (\n        <Payroll events={events} setFormType={setFormType} />\n      )}\n      <CustomizedSnackbars\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        variant={\"error\"}\n        msg={message}\n        events={events}\n      />\n      <CustomDnDCalendar\n        handleMove={handleMove}\n        handleSelect={handleSelect}\n        handleDoubleClick={handleDoubleClick}\n        events={events}\n        setEvents={setEvents}\n        teachers={teachers}\n        handleBtnClick={handleBtnClick}\n        handlePayrollBtnClick={handlePayrollBtnClick}\n      />\n    </div>\n  );\n};\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}