{"version":3,"sources":["helperFunctions.js","components/CustomView.js","styles/LessonEventStyles.js","components/LessonEvent.js","context/TeachersContext.js","styles/CustomToolbarStyles.js","components/CustomToolbar.js","components/CustomDnDCalendar.js","hooks/useInputState.js","validators.js","rooms.js","lessonTypes.js","components/EventForm.js","hooks/useToggle.js","components/TeacherForm.js","components/CustomizedSnackbars.js","components/PayrollSheet.js","components/Payroll.js","components/Schedule.js","App.js","serviceWorker.js","index.js"],"names":["JapaneseHolidays","require","API_URI","getRecurrences","event","now","Date","month_start","getFullYear","getMonth","month_end","twoMonthsRecurrences","RRule","freq","WEEKLY","count","interval","dtstart","start","between","shift","createPayPeriodData","events","teacher","monthStart","monthEnd","datesData","teachingMins","outsideDutyMins","holidayMins","overThresholdOneMins","overThresholdTwoMins","forEach","e","moment","isBetween","resourceId","date","getDate","day","getDay","isHoliday","parseInt","duration","totalTeachingMins","eventStart","eventEnd","dhStart","dhEnd","dutyHoursStart","setHours","startDiff","diff","endDiff","dutyHoursEnd","afterDhEndDiff","afterDhStartDiff","calcOutsideDutyMins","end","otThreshold","dateData","travelAllowance","travelExpenses","addTeachingMins","teachers","setTeachers","length","updateTeacher","getLessons","setEvents","a","async","axios","get","then","res","data","map","catch","err","console","log","idx","findIndex","t","_id","updatedTeachers","updatedTeacher","resourceTitle","name","familyName","splice","put","deleteEvent","newEvents","filter","evt","delete","changeEvent","editedEvent","nextEvents","WorkWeek","props","range","gotDate","setDate","dates","current","push","navigate","action","Navigate","PREVIOUS","NEXT","title","toLocaleDateString","useStyles","makeStyles","display","flexDirection","justifyContent","fontSize","padding","height","width","innerGroup","fontWeight","maxWidth","whiteSpace","overflow","room","color","paddingLeft","LessonEvent","classes","className","group","format","TeachersContext","createContext","TeachersProvider","Provider","Consumer","styles","toolbar","alignContent","alignItems","btnGroup","navBtn","background","navIcon","todayLabel","marginRight","teacherListContainer","teacherList","listStyle","listItem","listItemYellow","listItemRed","CustomToolbar","handleBtnClick","handlePayrollBtnClick","withStyles","this","context","type","onClick","onView","IconButton","onNavigate","icon","isRTL","toLocaleString","key","Component","contextType","locale","week","dow","localizer","momentLocalizer","DragAndDropCalendar","withDragAndDrop","Calendar","CustomDnDCalendar","handleMove","handleSelect","handleDoubleClick","minTime","maxTime","style","maxHeight","views","defaultView","onEventDrop","startAccessor","endAccessor","resources","resourceIdAccessor","resourceTitleAccessor","selectable","onSelectEvent","updatedEvent","isNewEvent","onDoubleClickEvent","eventPropGetter","hide","hexColor","backgroundColor","border","boxShadow","step","timeslots","min","max","onSelectSlot","components","resizableAccessor","initialVal","useState","value","setValue","target","validateRoom","every","testDateOverlap","add","toDate","validateTeacher","dateArr","testDateArr","shortName","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","EventForm","addEvent","formType","setFormType","startTime","updateStartTime","setSelectedEvent","selectedTeacher","isRecurring","toggleIsRecurring","startDateTime","useInputState","updateTitle","resetTitle","updateDuration","resetDuration","resource","updateResource","resetResource","updateRoom","resetRoom","eventType","updateEventType","resetEventType","teacherValidators","teacherValMsgs","roomValidators","roomValMsgs","useEffect","ValidatorForm","addValidationRule","hideForm","resetForm","Dialog","open","onClose","aria-labelledby","onSubmit","preventDefault","startTimeObj","recur","DialogTitle","id","DialogContent","DialogContentText","FormControlLabel","control","Switch","checked","onChange","label","FormControl","autoFocus","fullWidth","validators","errorMessages","pattern","selectStyles","InputLabelProps","shrink","MenuItem","roomList","r","lessonTypes","DialogActions","Button","useToggle","isToggled","setIsToggled","addTeacher","givenName","updateGivenName","updateFamilyName","otThresholdHours","updateOtThresholdHours","contractType","updateContractType","dependentsNum","updateDependentsNum","isPartTime","toggleIsPartTime","bigResourceId","required","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","green","palette","dark","primary","main","amber","iconVariant","opacity","message","MySnackbarContentWrapper","variant","other","Icon","SnackbarContent","clsx","aria-describedby","aria-label","useStyles2","CustomizedSnackbars","isOpen","setIsOpen","msg","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","PayrollSheet","rows","currentTeacher","sums","totalTeachingHours","totalOutsideDutyHours","totalHolidayHours","totalTravelAllowance","totalTravelExpenses","sumTeachingMins","table","Table","size","TableHead","TableRow","TableCell","align","TableBody","row","component","scope","month","TableFooter","totals","avatar","blue","btn","footerRows","createData","Payroll","componentRef","useRef","useContext","stage","setStage","setRows","setCurrentTeacher","daysInMonth","List","ListItem","button","teachingMinsByDate","i","newRow","showPayrollSheet","ListItemAvatar","Avatar","ListItemText","ref","trigger","content","Schedule","useFormState","resetStartTime","selectedEvent","setMessage","setSelectedTeacher","getTeachers","handleToggleSnackbar","newEvent","post","addLesson","newTeacher","indexOf","otherEvents","slice","moveEvent","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b446890.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { RRule } from \"rrule\";\nimport moment from \"moment\";\n\nvar JapaneseHolidays = require(\"japanese-holidays\");\n\nconst API_URI = \"http://localhost:5000\";\n\nconst getRecurrences = event => {\n  const now = new Date();\n  // Create start and end dates for the current month to calc\n  // teaching minutes\n  const month_start = new Date(now.getFullYear(), now.getMonth(), 1);\n  const month_end = new Date(now.getFullYear(), now.getMonth() + 2, 0);\n  // Create an array of DateTimes for the recurrence of events.\n  const rrule = new RRule({\n    freq: RRule.WEEKLY,\n    count: 26,\n    interval: 1,\n    dtstart: new Date(event.start)\n  });\n  const twoMonthsRecurrences = rrule.between(month_start, month_end);\n  twoMonthsRecurrences.shift();\n  return twoMonthsRecurrences;\n};\n\nconst calcOutsideDutyMins = (\n  eventStart,\n  eventEnd,\n  duration,\n  dhStart,\n  dhEnd\n) => {\n  // Set beginning of duty hours\n  const dutyHoursStart = moment(new Date(eventStart).setHours(dhStart, 0, 0));\n  // Calculate difference in hours between the duty hours start time and the lesson start time\n  const startDiff = dutyHoursStart.diff(eventStart, \"minutes\");\n  const endDiff = dutyHoursStart.diff(eventEnd, \"minutes\");\n  // Set end of duty hours\n  const dutyHoursEnd = moment(new Date(eventStart).setHours(dhEnd, 0, 0));\n  // Calculate difference in hours between the duty hours end time and the lesson end time\n  const afterDhEndDiff = -dutyHoursEnd.diff(eventEnd, \"minutes\");\n  const afterDhStartDiff = -dutyHoursEnd.diff(eventStart, \"minutes\");\n\n  let outsideDutyMins;\n  if (startDiff <= 0 && afterDhEndDiff <= 0) {\n    outsideDutyMins = 0;\n    return {\n      teachingMins: duration,\n      outsideDutyMins: outsideDutyMins\n    };\n  } else if (\n    (startDiff > 0 && endDiff > 0) ||\n    (afterDhEndDiff > 0 && afterDhStartDiff > 0)\n  ) {\n    return {\n      teachingMins: 0,\n      outsideDutyMins: duration\n    };\n  } else if (startDiff > 0) {\n    const regularTeachingMins = duration - startDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: startDiff\n    };\n  } else {\n    const regularTeachingMins = duration - afterDhEndDiff;\n    return {\n      teachingMins: regularTeachingMins,\n      outsideDutyMins: afterDhEndDiff\n    };\n  }\n};\n\nconst createPayPeriodData = (events, teacher, monthStart, monthEnd) => {\n  // Creates an object of dates containing minutes worked, by work type\n  const datesData = {};\n  teacher.teachingMins = 0;\n  teacher.outsideDutyMins = 0;\n  teacher.holidayMins = 0;\n  teacher.overThresholdOneMins = 0;\n  teacher.overThresholdTwoMins = 0;\n  events.forEach(e => {\n    if (moment(e.start).isBetween(monthStart, monthEnd, null, \"[]\")) {\n      if (e.resourceId === teacher.resourceId) {\n        const date = e.start.getDate();\n        const day = e.start.getDay();\n        // Calculate number of minutes to add to first threshold to calc second threshold. (10 hours * 60 mins)\n        const secondThreshold = 10 * 60;\n        let teachingMins = 0;\n        let outsideDutyMins = 0;\n        let holidayMins = 0;\n\n        if (\n          JapaneseHolidays.isHoliday(e.start) ||\n          e.start.getDay() === (0 || 1)\n        ) {\n          holidayMins = parseInt(e.duration);\n          teacher.holidayMins += holidayMins;\n        } else {\n          const totalTeachingMins = calcOutsideDutyMins(\n            e.start,\n            e.end,\n            e.duration,\n            12,\n            21\n          );\n          teachingMins = totalTeachingMins.teachingMins;\n          teacher.teachingMins += teachingMins;\n          outsideDutyMins = totalTeachingMins.outsideDutyMins;\n          teacher.outsideDutyMins += outsideDutyMins;\n        }\n        if (teacher.teachingMins >= teacher.otThreshold + secondThreshold) {\n          teacher.overThresholdTwoMins +=\n            teacher.teachingMins - (teacher.otThreshold + secondThreshold);\n          teacher.overThresholdOneMins += secondThreshold;\n        } else if (teacher.teachingMins >= teacher.otThreshold) {\n          teacher.overThresholdOneMins +=\n            teacher.teachingMins - teacher.otThreshold;\n        }\n        // Teaching minutes object to be added to hash table\n        const dateData = {\n          resourceId: teacher,\n          date: date,\n          day: day,\n          teachingMins: teachingMins,\n          outsideDutyMins: outsideDutyMins,\n          overThresholdOneMins: teacher.overThresholdOneMins,\n          overThresholdTwoMins: teacher.overThresholdTwoMins,\n          holidayMins: holidayMins,\n          travelAllowance: 0,\n          travelExpenses: 0\n        };\n        // If date already in hash table, add teaching minutes to existing keys, otherwise create\n        // a new date object\n        if (datesData[date]) {\n          datesData[date].teachingMins += dateData.teachingMins;\n          datesData[date].outsideDutyMins += dateData.outsideDutyMins;\n          datesData[date].overThresholdOneMins += dateData.overThresholdOneMins;\n          datesData[date].overThresholdTwoMins += dateData.overThresholdTwoMins;\n          datesData[date].holidayMins += dateData.holidayMins;\n          datesData[date].travelAllowance += dateData.travelAllowance;\n          datesData[date].travelExpenses += dateData.travelExpenses;\n        } else {\n          datesData[date] = dateData;\n        }\n      }\n    }\n  });\n  return datesData;\n};\n\nconst addTeachingMins = (events, teachers, setTeachers) => {\n  const now = new Date();\n  // Create start and end dates for the current month to calc\n  // teaching minutes\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  if (teachers.length > 0) {\n    // Reset teaching minutes to \"0\", then add all teaching minutes to the corresponding instructor\n    teachers.forEach(teacher => {\n      teacher.teachingMins = 0;\n      teacher.outsideDutyMins = 0;\n      teacher.holidayMins = 0;\n      teacher.overThresholdOneMins = 0;\n      teacher.overThresholdTwoMins = 0;\n    });\n    teachers.forEach(teacher => {\n      createPayPeriodData(events, teacher, monthStart, monthEnd);\n      updateTeacher(teacher, teachers, setTeachers);\n    });\n  }\n};\n\nconst getTeachers = async (events, teachers, setTeachers) => {\n  return await axios\n    .get(`${API_URI}/teachers/`)\n    .then(res => {\n      if (res.data.length > 0) {\n        setTeachers(res.data);\n      }\n    })\n    .then(addTeachingMins(events, teachers, setTeachers))\n    .catch(err => console.log(err));\n};\n\nconst getLessons = async (events, setEvents) => {\n  return await axios\n    .get(`${API_URI}/lessons/`)\n    .then(res => {\n      if (res.data.length > 0) {\n        res.data.map(event => {\n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n        });\n        setEvents([...res.data, events[0]]);\n      }\n    })\n    .catch(err => console.log(err));\n};\n\nconst addLesson = async (events, event, setEvents) => {\n  const newEvents = [];\n  if (event.recur === true) {\n    const recurrences = getRecurrences(event);\n    recurrences.map(r => {\n      const newEvent = {\n        ...event,\n        start: r,\n        end: moment(r)\n          .add(event.duration, \"m\")\n          .toDate(),\n        isNewEvent: false\n      };\n      if (JapaneseHolidays.isHoliday(r)) {\n        newEvent.isHoliday = true;\n      }\n      newEvents.push(newEvent);\n    });\n  }\n  if (JapaneseHolidays.isHoliday(event.start)) {\n    event = { ...event, isHoliday: true };\n  }\n  event = { ...event, isNewEvent: true };\n  newEvents.push(event);\n  await axios\n    .post(`${API_URI}/lessons/add`, newEvents)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  return getLessons(events, setEvents);\n};\n\nconst addTeacher = async (teachers, newTeacher, setTeachers) => {\n  await axios\n    .post(`${API_URI}/teachers/add`, newTeacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  return setTeachers([...teachers, newTeacher]);\n};\n\nconst updateTeacher = async (teacher, teachers, setTeachers) => {\n  const idx = teachers.findIndex(t => t._id === teacher._id);\n  const updatedTeachers = [...teachers];\n\n  const updatedTeacher = {\n    ...teacher,\n    resourceTitle: teacher.resourceTitle,\n    name: teacher.name,\n    familyName: teacher.familyName,\n    teachingMins: teacher.teachingMins,\n    holidayMins: teacher.holidayMins,\n    outsideDutyMins: teacher.outsideDutyMins,\n    otThreshold: teacher.otThreshold,\n    overThresholdOneMins: teacher.overThresholdOneMins,\n    overThresholdTwoMins: teacher.overThresholdTwoMins\n  };\n  updatedTeachers.splice(idx, 1, updatedTeacher);\n\n  setTeachers(updatedTeachers);\n  return await axios\n    .put(`${API_URI}/teachers/update/${teacher._id}`, updatedTeacher)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst deleteTeacher = async teacher => {\n  return await axios\n    .delete(`${API_URI}/teachers/delete/${teacher._id}`)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst deleteEvent = async (events, event, setEvents) => {\n  const newEvents = events.filter(evt => evt._id !== event._id);\n  setEvents(newEvents);\n  return await axios\n    .delete(`${API_URI}/lessons/delete/${event._id}`)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst changeEvent = async (events, event, editedEvent, setEvents) => {\n  const idx = events.findIndex(e => e._id === event._id);\n  const nextEvents = [...events];\n\n  nextEvents.splice(idx, 1, editedEvent);\n  setEvents(nextEvents);\n\n  return await axios\n    .put(`${API_URI}/lessons/update/${event._id}`, editedEvent)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nconst addPayment = async newPayment => {\n  return await axios\n    .post(`${API_URI}/payments/add`, newPayment)\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n};\n\nexport {\n  getRecurrences,\n  addTeachingMins,\n  getTeachers,\n  getLessons,\n  addLesson,\n  addTeacher,\n  updateTeacher,\n  deleteTeacher,\n  deleteEvent,\n  changeEvent,\n  addPayment,\n  createPayPeriodData\n};\n","import React from \"react\";\nimport { Navigate } from \"react-big-calendar\";\nimport TimeGrid from \"react-big-calendar/lib/TimeGrid\";\nimport * as dates from \"date-arithmetic\";\n\nconst WorkWeek = props => {\n  let { date } = props;\n  let range = WorkWeek.range(date);\n\n  return <TimeGrid {...props} range={range} />;\n};\n\nWorkWeek.range = date => {\n  // Set the date object's time to 0:00 so all events for the day will be displayed\n  // on the first day of the calendar week regardless of time of day\n  date.setHours(0, 0, 0, 0);\n  // Set start date to the current work week's Monday\n  let gotDate = date.getDate();\n  // Check the current date's day as integer from 0(Sun) to 6(Sat)\n  switch (date.getDay()) {\n    case 0:\n      date.setDate(gotDate + 1);\n      break;\n\n    case 1:\n      date.setDate(gotDate);\n      break;\n\n    case 2:\n      date.setDate(gotDate - 1);\n      break;\n\n    case 3:\n      date.setDate(gotDate - 2);\n      break;\n\n    case 4:\n      date.setDate(gotDate - 3);\n      break;\n\n    case 5:\n      date.setDate(gotDate - 4);\n      break;\n\n    case 6:\n      date.setDate(gotDate - 5);\n      break;\n\n    default:\n      break;\n  }\n\n  let start = date;\n  let end = dates.add(start, 5, \"day\");\n  let current = start;\n  let range = [];\n\n  while (dates.lte(current, end, \"day\")) {\n    range.push(current);\n    current = dates.add(current, 1, \"day\");\n  }\n  return range;\n};\n\n// Set navigation button behavior\nWorkWeek.navigate = (date, action) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      return dates.subtract(date, 7, \"day\");\n\n    case Navigate.NEXT:\n      return dates.add(date, 7, \"day\");\n\n    default:\n      return date;\n  }\n};\n\nWorkWeek.title = date => {\n  return `${date.toLocaleDateString()}`;\n};\n\nexport { WorkWeek };\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  event: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    fontSize: \".6rem\",\n    padding: \"2px\",\n    height: \"100%\",\n    width: \"100%\"\n  },\n  innerGroup: {\n    fontSize: \".7rem\",\n    fontWeight: \"600\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"0\"\n  },\n  title: {\n    maxWidth: \"85%\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\"\n  },\n  room: {\n    fontSize: \".8rem\",\n    color: \"#1b1c1c\",\n    paddingLeft: \".1rem\"\n  }\n});\nexport default useStyles;\n","import React from \"react\";\nimport moment from \"moment\";\nimport useStyles from \"../styles/LessonEventStyles\";\n\nconst LessonEvent = ({ event }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.event}>\n      <div className={classes.group}>\n        <div>{moment(event.start).format(\"LT\")}</div>\n        <div className={classes.innerGroup}>\n          <div className={classes.title}>{event.title}</div>\n          <span className={classes.room}>{event.room}</span>\n        </div>\n      </div>\n      <div>{moment(event.end).format(\"LT\")}</div>\n    </div>\n  );\n};\nexport default LessonEvent;\n","import React, { useState, createContext } from \"react\";\n\nconst TeachersContext = createContext({});\n\nexport const TeachersProvider = TeachersContext.Provider;\nexport const TeachersConsumer = TeachersContext.Consumer;\nexport default TeachersContext;\n","const styles = {\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignContent: \"space-around\",\n    alignItems: \"center\",\n    height: \"40px\",\n    padding: 0\n  },\n  btnGroup: {\n    display: \"inline-block\",\n    whiteSpace: \"nowrap\"\n  },\n  navBtn: {\n    color: \"#fff\",\n    background: \"rgb(20,71,207)\",\n    background:\n      \"linear-gradient(0deg, rgba(20,71,207,1) 7%, rgba(49,119,254,1) 100%)\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    padding: \".3rem .5rem\",\n    marginRight: \".5rem\",\n    minWidth: \"4rem\"\n  },\n  navIcon: {\n    fontSize: \"1.5rem\"\n  },\n  todayLabel: {\n    color: \"rgba(68, 68, 68, .7)\",\n    marginRight: \".5rem\"\n  },\n  teacherListContainer: {\n    maxWidth: \"20%\",\n    overflow: \"scroll\"\n  },\n  teacherList: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    listStyle: \"none\",\n    fontWeight: 600\n  },\n  listItem: {\n    marginRight: \"1rem\",\n    color: \"green\"\n  },\n  listItemYellow: {\n    marginRight: \"1rem\",\n    color: \"#fcad03\"\n  },\n  listItemRed: {\n    marginRight: \"1rem\",\n    color: \"red\"\n  }\n};\nexport default styles;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport TeachersContext from \"../context/TeachersContext\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RightArrowIcon from \"@material-ui/icons/ChevronRight\";\nimport LeftArrowIcon from \"@material-ui/icons/ChevronLeft\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"../styles/CustomToolbarStyles\";\nimport \"react-big-calendar/lib/sass/toolbar.scss\";\n\nconst CustomToolbar = ({ handleBtnClick, handlePayrollBtnClick }) => {\n  return withStyles(styles)(\n    class CustomToolbarClass extends Component {\n      static contextType = TeachersContext;\n\n      render() {\n        const { classes } = this.props;\n        const { teachers } = this.context;\n\n        return (\n          <div className={classes.toolbar}>\n            <div className={classes.btnGroup}>\n              <button\n                className={classes.navBtn}\n                type=\"button\"\n                onClick={() => this.props.onView(\"week\")}\n              >\n                Week\n              </button>\n              <button\n                className={classes.navBtn}\n                type=\"button\"\n                onClick={() => this.props.onView(\"day\")}\n              >\n                Day\n              </button>\n            </div>\n            <div className={classes.btnGroup}>\n              <IconButton\n                className={classes.navBtn}\n                type=\"button\"\n                onClick={() => this.props.onNavigate(\"PREV\")}\n              >\n                <LeftArrowIcon\n                  className={classes.navIcon}\n                  icon={this.props.isRTL ? \"chevron-right\" : \"chevron-left\"}\n                />\n              </IconButton>\n              <span\n                className={classes.todayLabel}\n                onClick={() => this.props.onNavigate(\"TODAY\")}\n              >\n                {moment(this.props.date)\n                  .format(\"dddd MM/DD\")\n                  .toLocaleString()}\n              </span>\n              <IconButton\n                className={classes.navBtn}\n                type=\"button\"\n                onClick={() => this.props.onNavigate(\"NEXT\")}\n              >\n                <RightArrowIcon\n                  className={classes.navIcon}\n                  icon={this.props.isRTL ? \"chevron-left\" : \"chevron-right\"}\n                />\n              </IconButton>\n            </div>\n            <div>\n              <ul className={classes.teacherList}>\n                {teachers.map(t => (\n                  <li\n                    className={\n                      t.overThresholdTwoMins > 0\n                        ? classes.listItemRed\n                        : t.overThresholdOneMins > 0\n                        ? classes.listItemYellow\n                        : classes.listItem\n                    }\n                    key={t.resourceId}\n                  >{`${t.name}: ${t.teachingMins}`}</li>\n                ))}\n              </ul>\n            </div>\n            <div className={classes.btnGroup}>\n              <button className={classes.navBtn} onClick={handleBtnClick}>\n                New Teacher\n              </button>\n            </div>\n            <div className={classes.btnGroup}>\n              <button\n                className={classes.navBtn}\n                onClick={handlePayrollBtnClick}\n              >\n                Payroll\n              </button>\n            </div>\n          </div>\n        );\n      }\n    }\n  );\n};\n\nexport default CustomToolbar;\n","import React, { Component } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/sass/toolbar.scss\";\nimport { changeEvent } from \"../helperFunctions\";\n\nimport { WorkWeek } from \"./CustomView\";\nimport LessonEvent from \"./LessonEvent\";\nimport CustomToolbar from \"./CustomToolbar\";\n\nmoment.locale(\"jp\", {\n  week: {\n    dow: 1\n  }\n});\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nclass CustomDnDCalendar extends Component {\n  render() {\n    const {\n      handleMove,\n      handleSelect,\n      handleDoubleClick,\n      handleBtnClick,\n      handlePayrollBtnClick,\n      events,\n      teachers,\n      setEvents\n    } = this.props;\n\n    // Limit displayed hours of the day\n    const minTime = new Date();\n    minTime.setHours(9, 0, 0);\n    const maxTime = new Date();\n    maxTime.setHours(20, 59, 59);\n\n    // Style events based on event.type\n    const eventStyleGetter = event => {\n      // Hide a dummy event that fixes drag and drop bug\n      if (event.hide) {\n        return { style: { display: \"none\" } };\n      }\n      let hexColor;\n      switch (event.type) {\n        case \"pl\":\n          hexColor = \"#e6ba1f\";\n          break;\n        case \"beg\":\n          hexColor = \"#00fca5\";\n          break;\n        case \"el\":\n          hexColor = \"#02bd7b\";\n          break;\n        case \"lint\":\n          hexColor = \"#018256\";\n          break;\n        case \"hint\":\n          hexColor = \"#0b8a5e\";\n          break;\n        case \"adv\":\n          hexColor = \"#04593c\";\n          break;\n        case \"lb\":\n          hexColor = \"#97dd1a\";\n          break;\n        case \"lg1\":\n          hexColor = \"#ca161e\";\n          break;\n        case \"lg2\":\n          hexColor = \"#fdc100\";\n          break;\n        case \"lg3\":\n          hexColor = \"#0065bd\";\n          break;\n        case \"lg4\":\n          hexColor = \"#00ae3e\";\n          break;\n        case \"lg5\":\n          hexColor = \"#ff8d2a\";\n          break;\n        case \"lg6\":\n          hexColor = \"#8f178e\";\n          break;\n        case \"gs\":\n          hexColor = \"#670084\";\n          break;\n        case \"ct1\":\n          hexColor = \"#d90000\";\n          break;\n        case \"ct2\":\n          hexColor = \"#0076d0\";\n          break;\n        case \"ct3\":\n          hexColor = \"#008935\";\n          break;\n        case \"prm\":\n          hexColor = \"#7d190b\";\n          break;\n        default:\n          hexColor = \"#7c9ae6\";\n          break;\n      }\n\n      let backgroundColor = hexColor;\n      let style = {\n        backgroundColor: backgroundColor,\n        color: \"white\",\n        border: 0,\n        display: \"block\",\n        boxShadow: \"\"\n      };\n\n      if (event.isNewEvent) {\n        style.boxShadow = `0 0 4px 5px ${hexColor}`;\n      }\n      return {\n        style: style\n      };\n    };\n\n    const handleSingleClick = event => {\n      const updatedEvent = { ...event, isNewEvent: false };\n      changeEvent(events, event, updatedEvent, setEvents);\n    };\n\n    return (\n      <DragAndDropCalendar\n        style={{ width: \"100vw\", maxHeight: \"100vh\" }}\n        localizer={localizer}\n        views={{ week: WorkWeek, day: true }}\n        defaultView=\"week\"\n        events={events}\n        onEventDrop={handleMove}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        resources={teachers}\n        resourceIdAccessor=\"resourceId\"\n        resourceTitleAccessor=\"resourceTitle\"\n        selectable\n        onSelectEvent={handleSingleClick}\n        onDoubleClickEvent={handleDoubleClick}\n        eventPropGetter={eventStyleGetter}\n        step={5}\n        timeslots={12}\n        min={minTime}\n        max={maxTime}\n        onSelectSlot={handleSelect}\n        components={{\n          event: LessonEvent,\n          toolbar: CustomToolbar({ handleBtnClick, handlePayrollBtnClick })\n        }}\n        resizableAccessor={() => false}\n      />\n    );\n  }\n}\n\nexport default CustomDnDCalendar;\n","import { useState } from \"react\";\n\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    if (e.target) {\n      setValue(e.target.value);\n    } else {\n      setValue(e);\n    }\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import moment from \"moment\";\n\nfunction validateRoom(events, room, start, duration) {\n  return events.every(event => {\n    if (\n      testDateOverlap(\n        [event.start, event.end],\n        [\n          moment(new Date(start)),\n          moment(\n            moment(new Date(start))\n              .add(duration, \"m\")\n              .toDate()\n          )\n        ]\n      )\n    ) {\n      return parseInt(event.room) !== parseInt(room);\n    }\n    return true;\n  });\n}\n\nfunction validateTeacher(events, teacher, start, duration) {\n  return events.every(event => {\n    if (\n      testDateOverlap(\n        [event.start, event.end],\n        [\n          moment(new Date(start)),\n          moment(\n            moment(new Date(start))\n              .add(duration, \"m\")\n              .toDate()\n          )\n        ]\n      )\n    ) {\n      return parseInt(event.resourceId) !== parseInt(teacher);\n    }\n    return true;\n  });\n}\n\nfunction testDateOverlap(dateArr, testDateArr) {\n  if (\n    testDateArr[0].isBetween(dateArr[0], dateArr[1], null, \"[]\") ||\n    testDateArr[1].isBetween(dateArr[0], dateArr[1], null, \"[]\")\n  ) {\n    return true;\n  }\n}\n\nexport { validateRoom, validateTeacher };\n","export default [1, 2, 3, 4, 5];\n","export default [\n  { name: \"Grapeseed\", shortName: \"GS\", type: \"gs\" },\n  { name: \"Beginner\", shortName: \"Beg\", type: \"beg\" },\n  { name: \"Elementary\", shortName: \"El\", type: \"el\" },\n  { name: \"Low Intermediate\", shortName: \"L-Int\", type: \"lint\" },\n  { name: \"High Intermediate\", shortName: \"H-Int\", type: \"hint\" },\n  { name: \"Advanced\", shortName: \"Adv\", type: \"adv\" },\n  { name: \"Bunny\", shortName: \"Bunny\", type: \"bny\" },\n  { name: \"Let's Begin\", shortName: \"LB\", type: \"lb\" },\n  { name: \"Let's Go 1\", shortName: \"LG1\", type: \"lg1\" },\n  { name: \"Let's Go 2\", shortName: \"LG2\", type: \"lg2\" },\n  { name: \"Let's Go 3\", shortName: \"LG3\", type: \"lg3\" },\n  { name: \"Let's Go 4\", shortName: \"LG4\", type: \"lg4\" },\n  { name: \"Let's Go 5\", shortName: \"LG5\", type: \"lg5\" },\n  { name: \"Connect 1\", shortName: \"Conn 1\", type: \"ct1\" },\n  { name: \"Connect 2\", shortName: \"Conn 2\", type: \"ct2\" },\n  { name: \"Connect 3\", shortName: \"Conn 3\", type: \"ct3\" },\n  { name: \"Private\", shortName: \"Pvt\", type: \"pvt\" },\n  { name: \"Premium\", shortName: \"Prem\", type: \"prm\" }\n];\n","import React, { useEffect } from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator\n} from \"react-material-ui-form-validator\";\nimport moment from \"moment\";\n\nimport useInputState from \"../hooks/useInputState\";\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport { changeEvent, deleteEvent } from \"../helperFunctions\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport roomList from \"../rooms\";\nimport lessonTypes from \"../lessonTypes\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const {\n    addEvent,\n    formType,\n    setFormType,\n    events,\n    teachers,\n    startTime,\n    updateStartTime,\n    event,\n    setEvents,\n    setSelectedEvent,\n    selectedTeacher,\n    isRecurring,\n    toggleIsRecurring\n  } = props;\n\n  // If a new start time was input, use it for the form input,\n  // otherwise use the original event's start time\n  const startDateTime = startTime ? startTime : event.start;\n\n  const [title, updateTitle, resetTitle] = useInputState(\n    event ? event.title : \"\"\n  );\n  const [duration, updateDuration, resetDuration] = useInputState(\n    event ? event.duration : \"\"\n  );\n  const [resource, updateResource, resetResource] = useInputState(\n    event ? event.resourceId : selectedTeacher\n  );\n  const [room, updateRoom, resetRoom] = useInputState(event ? event.room : \"\");\n  const [eventType, updateEventType, resetEventType] = useInputState(\n    event ? event.type : \"\"\n  );\n\n  let teacherValidators = [\"required\"];\n  let teacherValMsgs = [\"Teacher Required\"];\n  let roomValidators = [\"required\"];\n  let roomValMsgs = [\"Room Required\"];\n  if (!event) {\n    teacherValidators.push(\"teacherIsAvailable\");\n    teacherValMsgs.push(\"Teacher unavailable\");\n    roomValidators.push(\"roomIsAvailable\");\n    roomValMsgs.push(\"Room unavailable\");\n  }\n\n  useEffect(() => {\n    // If an event does not exist, check whether the selected room is\n    // available at the specified time\n    ValidatorForm.addValidationRule(\"teacherIsAvailable\", teacher => {\n      return validateTeacher(events, teacher, startTime, duration);\n    });\n\n    // If an event does not exist, check whether the selected room is\n    // available at the specified time\n    ValidatorForm.addValidationRule(\"roomIsAvailable\", room => {\n      return validateRoom(events, room, startTime, duration);\n    });\n  });\n\n  const hideForm = () => setFormType(\"\");\n\n  const resetForm = () => {\n    resetTitle();\n    resetDuration();\n    resetResource();\n    resetRoom();\n    resetEventType();\n  };\n\n  const handleAddEvent = e => {\n    e.preventDefault();\n    const startTimeObj = new Date(startDateTime);\n    addEvent({\n      title: title,\n      start: startTimeObj,\n      end: moment(startTimeObj)\n        .add(duration, \"m\")\n        .toDate(),\n      room: room,\n      duration: duration,\n      resourceId: parseInt(selectedTeacher),\n      type: eventType,\n      recur: isRecurring\n    });\n    resetForm();\n    setSelectedEvent(\"\");\n  };\n\n  const handleEditEvent = e => {\n    e.preventDefault();\n    const startTimeObj = new Date(startDateTime);\n    const editedEvent = {\n      title: title,\n      start: startTimeObj,\n      end: moment(startTimeObj)\n        .add(duration, \"m\")\n        .toDate(),\n      room: room,\n      duration: duration,\n      resourceId: parseInt(resource),\n      type: eventType,\n      isRecurring: isRecurring\n    };\n    changeEvent(events, event, editedEvent, setEvents);\n    resetForm();\n    setSelectedEvent(\"\");\n    hideForm();\n  };\n\n  const handleDeleteEvent = () => {\n    deleteEvent(events, event, setEvents);\n    setSelectedEvent(\"\");\n    hideForm();\n  };\n\n  const handleToggleRecurrence = () => {\n    toggleIsRecurring(!isRecurring);\n  };\n\n  const handleCancel = () => {\n    resetForm();\n    setSelectedEvent(\"\");\n    hideForm();\n  };\n\n  return (\n    <Dialog\n      open={formType === \"event\"}\n      onClose={hideForm}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <ValidatorForm onSubmit={event ? handleEditEvent : handleAddEvent}>\n        <DialogTitle id=\"form-dialog-title\">New Lesson</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter Lesson Info</DialogContentText>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isRecurring}\n                onChange={handleToggleRecurrence}\n                value={isRecurring}\n              />\n            }\n            label=\"Weekly lesson\"\n          />\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Lesson Name\"\n              type=\"text\"\n              value={title}\n              onChange={updateTitle}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Lesson Name\"]}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"startTime\"\n              label=\"Start Time\"\n              type=\"text\"\n              value={startDateTime}\n              onChange={updateStartTime}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Start Time\"]}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"duration\"\n              label=\"Lesson Duration\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              value={duration}\n              onChange={updateDuration}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Duration\"]}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <SelectValidator\n              className={classes.selectStyles}\n              margin=\"dense\"\n              label=\"Teacher\"\n              InputLabelProps={{ shrink: true }}\n              fullWidth\n              id=\"resource\"\n              value={resource}\n              onChange={updateResource}\n              name=\"resource\"\n              validators={teacherValidators}\n              errorMessages={teacherValMsgs}\n            >\n              <MenuItem value=\"\" />\n              {teachers.map(t => (\n                <MenuItem key={`teacher-${t.resourceId}`} value={t.resourceId}>\n                  {t.name}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <SelectValidator\n              className={classes.selectStyles}\n              label=\"Room\"\n              InputLabelProps={{ shrink: true }}\n              margin=\"dense\"\n              fullWidth\n              id=\"room\"\n              value={room}\n              onChange={updateRoom}\n              name=\"room\"\n              validators={roomValidators}\n              errorMessages={roomValMsgs}\n            >\n              <MenuItem value=\"\" />\n              {roomList.map(r => (\n                <MenuItem key={`room-${r}`} value={r}>\n                  {r}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <SelectValidator\n              className={classes.selectStyles}\n              margin=\"dense\"\n              label=\"Lesson Type\"\n              InputLabelProps={{ shrink: true }}\n              fullWidth\n              id=\"type\"\n              value={eventType}\n              onChange={updateEventType}\n              name=\"type\"\n            >\n              <MenuItem value=\"\" />\n              {lessonTypes.map(t => (\n                <MenuItem key={`type-${t.shortName}`} value={t.type}>\n                  {t.name}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteEvent} color=\"secondary\">\n            Delete Lesson\n          </Button>\n          <Button onClick={handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            {event ? \"Confirm Change\" : \"Add Lesson\"}\n          </Button>\n        </DialogActions>\n      </ValidatorForm>\n    </Dialog>\n  );\n}\n","import { useState } from \"react\";\n\nfunction useToggle(initialVal = false) {\n  const [isToggled, setIsToggled] = useState(initialVal);\n  const toggle = () => {\n    setIsToggled(!isToggled);\n  };\n  return [isToggled, toggle];\n}\nexport default useToggle;\n","import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nimport useInputState from \"../hooks/useInputState\";\nimport useToggle from \"../hooks/useToggle\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function EventForm(props) {\n  const classes = useStyles();\n  const { formType, setFormType, addTeacher, teachers } = props;\n\n  const [givenName, updateGivenName] = useInputState(\"\");\n  const [familyName, updateFamilyName] = useInputState(\"\");\n  const [otThresholdHours, updateOtThresholdHours] = useInputState(\"\");\n  const [contractType, updateContractType] = useInputState(\"\");\n  const [dependentsNum, updateDependentsNum] = useInputState(\"\");\n  const [isPartTime, toggleIsPartTime] = useToggle(false);\n\n  const handleAddTeacher = e => {\n    e.preventDefault();\n    let bigResourceId = 1;\n    if (teachers) {\n      teachers.forEach(t => {\n        if (t.resourceId > bigResourceId) {\n          bigResourceId = t.resourceId + 1;\n        } else {\n          bigResourceId++;\n        }\n      });\n    }\n\n    addTeacher({\n      resourceId: bigResourceId,\n      resourceTitle: givenName,\n      name: givenName,\n      familyName: familyName,\n      teachingMins: 0,\n      otThreshold: parseInt(otThresholdHours * 60),\n      contractType: contractType,\n      dependentsNum: dependentsNum,\n      isPartTime: isPartTime\n    });\n  };\n\n  const hideForm = () => setFormType(\"\");\n\n  return (\n    <Dialog\n      open={formType === \"teacher\"}\n      onClose={hideForm}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <ValidatorForm onSubmit={handleAddTeacher}>\n        <DialogTitle id=\"form-dialog-title\">New Teacher</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter Teacher Info</DialogContentText>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isPartTime}\n                onChange={toggleIsPartTime}\n                value={isPartTime}\n              />\n            }\n            label=\"Part-Time Teacher\"\n          />\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              autoFocus\n              margin=\"dense\"\n              id=\"givenName\"\n              label=\"Given Name\"\n              type=\"text\"\n              value={givenName}\n              onChange={updateGivenName}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Given Name\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"lastName\"\n              label=\"Family Name\"\n              type=\"text\"\n              value={familyName}\n              onChange={updateFamilyName}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Enter the Last Name\"]}\n              required\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextValidator\n              margin=\"dense\"\n              id=\"contractType\"\n              label=\"Contract Type\"\n              type=\"text\"\n              value={contractType}\n              onChange={updateContractType}\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Select a contract type\"]}\n              required\n            />\n          </FormControl>\n          {!isPartTime && (\n            <FormControl className={classes.formControl}>\n              <TextValidator\n                margin=\"dense\"\n                id=\"otThreshold\"\n                label=\"Overtime threshold (hours)\"\n                type=\"text\"\n                pattern=\"[0-9]*\"\n                value={otThresholdHours}\n                onChange={updateOtThresholdHours}\n                fullWidth\n                validators={[\"required\"]}\n                errorMessages={[\"Set first OT threshold\"]}\n                required\n              />\n            </FormControl>\n          )}\n          {!isPartTime && (\n            <FormControl className={classes.formControl}>\n              <TextValidator\n                margin=\"dense\"\n                id=\"dependentsNum\"\n                label=\"Number of dependents\"\n                type=\"text\"\n                pattern=\"[0-9]*\"\n                value={dependentsNum}\n                onChange={updateDependentsNum}\n                fullWidth\n                required\n              />\n            </FormControl>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={hideForm} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            Add Teacher\n          </Button>\n        </DialogActions>\n      </ValidatorForm>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function CustomizedSnackbars(props) {\n  const classes = useStyles2();\n  const { isOpen, setIsOpen, msg, variant } = props;\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={isOpen}\n        autoHideDuration={6000}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant={variant}\n          message={msg}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { TableFooter } from \"@material-ui/core\";\n\nclass PayrollSheet extends Component {\n  render() {\n    const { classes, rows, currentTeacher } = this.props;\n\n    const sumTeachingMins = () => {\n      const sums = {\n        totalTeachingHours: 0,\n        totalOutsideDutyHours: 0,\n        totalHolidayHours: 0,\n        totalTravelAllowance: 0,\n        totalTravelExpenses: 0\n      };\n      rows.forEach(r => {\n        sums.totalTeachingHours += r.teachingMins / 60;\n        sums.totalOutsideDutyHours += r.outsideDutyMins / 60;\n        sums.totalHolidayHours += r.holidayMins / 60;\n        sums.totalTravelAllowance += r.travelAllowance;\n        sums.totalTravelExpenses += r.travelExpenses;\n      });\n      return sums;\n    };\n    const sums = sumTeachingMins();\n\n    return (\n      <div className={classes.table}>\n        <DialogTitle id=\"payroll-sheet-dialog\">\n          Payroll for {currentTeacher}\n        </DialogTitle>\n        <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell align=\"right\">Month</TableCell>\n              <TableCell align=\"right\">Teaching Mins</TableCell>\n              <TableCell align=\"right\">Outside DH</TableCell>\n              <TableCell align=\"right\">Holiday Work</TableCell>\n              <TableCell align=\"right\">Travel Allowance</TableCell>\n              <TableCell align=\"right\">Travel Expenses</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.date}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.date}\n                </TableCell>\n                <TableCell align=\"right\">{row.month}</TableCell>\n                <TableCell align=\"right\">{row.teachingMins}</TableCell>\n                <TableCell align=\"right\">{row.outsideDutyMins}</TableCell>\n                <TableCell align=\"right\">{row.holidayMins}</TableCell>\n                <TableCell align=\"right\">{row.travelAllowance}</TableCell>\n                <TableCell align=\"right\">{row.travelExpenses}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TableCell size=\"medium\">Total Teaching Hours:</TableCell>\n              <TableCell className={classes.totals}>\n                {sums.totalTeachingHours}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell size=\"medium\">Over Threshold One Hours:</TableCell>\n              <TableCell className={classes.totals}>Placeholder</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell size=\"medium\">Over Threshold Two Hours:</TableCell>\n              <TableCell className={classes.totals}>Placeholder</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell size=\"medium\">Outside DH Hours:</TableCell>\n              <TableCell className={classes.totals}>\n                {sums.totalOutsideDutyHours}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell size=\"medium\">Holiday Work Hours:</TableCell>\n              <TableCell className={classes.totals}>\n                {sums.totalHolidayHours}\n              </TableCell>\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    );\n  }\n}\nexport default PayrollSheet;\n","import React, { useState, useContext, useRef } from \"react\";\nimport moment from \"moment\";\nimport ReactToPrint from \"react-to-print\";\nimport TeachersContext from \"../context/TeachersContext\";\nimport { createPayPeriodData } from \"../helperFunctions\";\nimport PayrollSheet from \"./PayrollSheet\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport { blue } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  },\n  table: {\n    padding: \"1rem\",\n    maxWidth: \"90vw\"\n  },\n  btn: {\n    color: \"#fff\",\n    background: \"rgb(20,71,207)\",\n    background:\n      \"linear-gradient(0deg, rgba(20,71,207,1) 7%, rgba(49,119,254,1) 100%)\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    padding: \".3rem .5rem\",\n    minWidth: \"4rem\",\n    margin: \"1rem auto\"\n  },\n  footerRows: {\n    width: \"100%\"\n  },\n  totals: {\n    color: \"#21942a\",\n    fontWeight: \"800\"\n  }\n});\n\nfunction createData(\n  date,\n  month,\n  teachingMins,\n  outsideDutyMins,\n  holidayMins,\n  travelAllowance,\n  travelExpenses\n) {\n  return {\n    date,\n    month,\n    teachingMins,\n    outsideDutyMins,\n    holidayMins,\n    travelAllowance,\n    travelExpenses\n  };\n}\n\nconst Payroll = props => {\n  const componentRef = useRef();\n  const classes = useStyles();\n\n  const { teachers } = useContext(TeachersContext);\n  const [stage, setStage] = useState(\"teacherSelect\");\n  const [rows, setRows] = useState([]);\n  const [currentTeacher, setCurrentTeacher] = useState(\"\");\n  const { events, setFormType } = props;\n  const now = new Date();\n  const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  const daysInMonth = moment(now).daysInMonth();\n\n  const showPayrollSheet = teacher => {\n    setCurrentTeacher(teacher.resourceId);\n\n    const teachingMinsByDate = createPayPeriodData(\n      events,\n      teacher,\n      monthStart,\n      monthEnd\n    );\n\n    const rows = [];\n    for (let i = 1; i <= daysInMonth; i++) {\n      let newRow;\n      if (teachingMinsByDate[i]) {\n        newRow = createData(\n          i,\n          now.getMonth(\"MMM\"),\n          teachingMinsByDate[i].teachingMins,\n          teachingMinsByDate[i].outsideDutyMins,\n          teachingMinsByDate[i].holidayMins,\n          teachingMinsByDate[i].travelAllowance,\n          teachingMinsByDate[i].travelExpenses\n        );\n      } else {\n        newRow = createData(i, now.getMonth(\"MMM\"), 0, 0, 0, 0, 0);\n      }\n      rows.push(newRow);\n    }\n    setRows(rows);\n    setStage(\"payrollSheet\");\n  };\n\n  const hideForm = () => {\n    setStage(\"\");\n    setFormType(\"\");\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={hideForm}\n        aria-labelledby=\"teacher-select-title\"\n        open={stage === \"teacherSelect\"}\n      >\n        <DialogTitle id=\"teacher-select-title\">\n          Payroll: Select a teacher\n        </DialogTitle>\n        <List>\n          {teachers.map(t => (\n            <ListItem\n              button\n              onClick={() => showPayrollSheet(t)}\n              key={t.resourceId}\n            >\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={t.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Dialog>\n      <Dialog\n        onClose={hideForm}\n        aria-labelledby=\"payroll-sheet-dialog\"\n        open={stage === \"payrollSheet\"}\n      >\n        <PayrollSheet\n          classes={classes}\n          rows={rows}\n          currentTeacher={currentTeacher}\n          ref={componentRef}\n        />\n        <ReactToPrint\n          trigger={() => <button className={classes.btn}>Print</button>}\n          content={() => componentRef.current}\n        />\n      </Dialog>\n    </div>\n  );\n};\nexport default Payroll;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport CustomDnDCalendar from \"./CustomDnDCalendar\";\nimport EventForm from \"./EventForm\";\nimport TeacherForm from \"./TeacherForm\";\nimport CustomizedSnackbars from \"./CustomizedSnackbars\";\nimport Payroll from \"./Payroll\";\nimport useFormState from \"../hooks/useInputState\";\nimport useToggle from \"../hooks/useToggle\";\nimport TeachersContext from \"../context/TeachersContext\";\n\nimport { validateRoom, validateTeacher } from \"../validators\";\nimport {\n  addTeachingMins,\n  getTeachers,\n  getLessons,\n  addLesson,\n  addTeacher,\n  changeEvent\n} from \"../helperFunctions\";\n\nimport \"react-big-calendar/lib/sass/styles.scss\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\";\n\nconst Schedule = () => {\n  const { teachers, setTeachers } = useContext(TeachersContext);\n  const [formType, setFormType] = useState(\"\");\n  const [events, setEvents] = useState([\n    {\n      id: 1,\n      title: \"Dummy Event to fix drag and drop bug\",\n      start: new Date(),\n      end: new Date(),\n      room: 2,\n      duration: 0,\n      resourceId: 1,\n      hide: true\n    }\n  ]);\n  const [startTime, updateStartTime, resetStartTime] = useFormState(new Date());\n  const [selectedEvent, setSelectedEvent] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [selectedTeacher, setSelectedTeacher] = useState(\"\");\n  const [isRecurring, toggleIsRecurring] = useToggle(false);\n\n  useEffect(() => {\n    getLessons(events, setEvents);\n    getTeachers(events, teachers, setTeachers);\n    addTeachingMins(events, teachers, setTeachers);\n  }, []);\n\n  useEffect(() => {\n    addTeachingMins(events, teachers, setTeachers);\n  }, [events, setTeachers]);\n\n  const moveEvent = ({ event, resourceId, start, end }) => {\n    const updatedEvent = { ...event, resourceId, start, end };\n    handleDoubleClick(event);\n    changeEvent(events, event, updatedEvent, setEvents);\n  };\n\n  // Add validation to a move upon dropping an event with drag and drop\n  // If there is a conflict, prevent the move and flash a conflict snackbar\n  const handleMove = ({ event, resourceId, start, end }) => {\n    const idx = events.indexOf(event);\n    const otherEvents = [...events.slice(0, idx), ...events.slice(idx + 1)];\n    if (\n      !validateRoom(otherEvents, event.room, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\"Room Conflict. Please choose another room or time\");\n      return 1;\n    }\n    if (\n      !validateTeacher(otherEvents, resourceId, start, parseInt(event.duration))\n    ) {\n      setSelectedEvent(event);\n      handleToggleSnackbar(\n        \"Teacher Conflict. Please choose another teacher or time\"\n      );\n      return 1;\n    }\n    moveEvent({\n      event,\n      resourceId,\n      start,\n      end\n    });\n    return 0;\n  };\n\n  const handleAddEvent = newEvent => {\n    addLesson(events, newEvent, setEvents);\n    setFormType(\"\");\n  };\n\n  const handleSelect = ({ start, resourceId }) => {\n    updateStartTime(start);\n    setSelectedTeacher(resourceId);\n    setFormType(\"event\");\n  };\n\n  const handleDoubleClick = event => {\n    updateStartTime(event.start);\n    setSelectedEvent(event);\n    setFormType(\"event\");\n  };\n\n  const handleAddTeacher = newTeacher => {\n    addTeacher(teachers, newTeacher, setTeachers);\n    setFormType(\"\");\n  };\n\n  const handleBtnClick = () => {\n    setFormType(\"teacher\");\n  };\n\n  const handleToggleSnackbar = msg => {\n    setMessage(msg);\n    setIsOpen(true);\n  };\n\n  const handlePayrollBtnClick = () => {\n    setFormType(\"payroll\");\n  };\n\n  return (\n    <div>\n      {formType === \"event\" && (\n        <EventForm\n          formType={formType}\n          setFormType={setFormType}\n          addEvent={handleAddEvent}\n          events={events}\n          teachers={teachers}\n          startTime={startTime}\n          updateStartTime={updateStartTime}\n          resetStartTime={resetStartTime}\n          event={selectedEvent}\n          setSelectedEvent={setSelectedEvent}\n          setEvents={setEvents}\n          selectedTeacher={selectedTeacher}\n          isRecurring={isRecurring}\n          toggleIsRecurring={toggleIsRecurring}\n        />\n      )}\n      {formType === \"teacher\" && (\n        <TeacherForm\n          formType={formType}\n          setFormType={setFormType}\n          addTeacher={handleAddTeacher}\n          setTeachers={setTeachers}\n          teachers={teachers}\n        />\n      )}\n      {formType === \"payroll\" && (\n        <Payroll events={events} setFormType={setFormType} />\n      )}\n      <CustomizedSnackbars\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        variant={\"error\"}\n        msg={message}\n        events={events}\n      />\n      <CustomDnDCalendar\n        handleMove={handleMove}\n        handleSelect={handleSelect}\n        handleDoubleClick={handleDoubleClick}\n        events={events}\n        setEvents={setEvents}\n        teachers={teachers}\n        handleBtnClick={handleBtnClick}\n        handlePayrollBtnClick={handlePayrollBtnClick}\n      />\n    </div>\n  );\n};\nexport default Schedule;\n","import React, { useState } from \"react\";\nimport Schedule from \"./components/Schedule\";\nimport { TeachersProvider } from \"./context/TeachersContext\";\nimport \"./App.css\";\n\nfunction App() {\n  const [teachers, setTeachers] = useState([]);\n  return (\n    <div className=\"App\">\n      <TeachersProvider value={{ teachers, setTeachers }}>\n        <Schedule />\n      </TeachersProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}